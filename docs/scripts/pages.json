[{"name":"class App : Application","description":"ru.surf.template.App","location":"app/ru.surf.template/-app/index.html","searchKeys":["App","class App : Application","ru.surf.template.App"]},{"name":"class AppActivity : ComponentActivity","description":"ru.surf.template.AppActivity","location":"app/ru.surf.template/-app-activity/index.html","searchKeys":["AppActivity","class AppActivity : ComponentActivity","ru.surf.template.AppActivity"]},{"name":"class NavActions(controller: NavHostController) : CoreNavActions, UsersNavActions, OtherNavActions, SettingsNavActions","description":"ru.surf.template.navigation.NavActions","location":"app/ru.surf.template.navigation/-nav-actions/index.html","searchKeys":["NavActions","class NavActions(controller: NavHostController) : CoreNavActions, UsersNavActions, OtherNavActions, SettingsNavActions","ru.surf.template.navigation.NavActions"]},{"name":"fun App()","description":"ru.surf.template.App.App","location":"app/ru.surf.template/-app/-app.html","searchKeys":["App","fun App()","ru.surf.template.App.App"]},{"name":"fun AppActivity()","description":"ru.surf.template.AppActivity.AppActivity","location":"app/ru.surf.template/-app-activity/-app-activity.html","searchKeys":["AppActivity","fun AppActivity()","ru.surf.template.AppActivity.AppActivity"]},{"name":"fun AppDrawer(scaffoldState: ScaffoldState = rememberScaffoldState(), currentRoute: String = UsersNav.MainNav.ListUsersNavScreen.route, onActions: (AppDrawerActions) -> Unit = {})","description":"ru.surf.template.drawer.AppDrawer","location":"app/ru.surf.template.drawer/-app-drawer.html","searchKeys":["AppDrawer","fun AppDrawer(scaffoldState: ScaffoldState = rememberScaffoldState(), currentRoute: String = UsersNav.MainNav.ListUsersNavScreen.route, onActions: (AppDrawerActions) -> Unit = {})","ru.surf.template.drawer.AppDrawer"]},{"name":"fun AppDrawerItem(label: String, icon: ImageVector, isSelected: Boolean = false, onClick: () -> Unit = {})","description":"ru.surf.template.drawer.AppDrawerItem","location":"app/ru.surf.template.drawer/-app-drawer-item.html","searchKeys":["AppDrawerItem","fun AppDrawerItem(label: String, icon: ImageVector, isSelected: Boolean = false, onClick: () -> Unit = {})","ru.surf.template.drawer.AppDrawerItem"]},{"name":"fun NavActions(controller: NavHostController)","description":"ru.surf.template.navigation.NavActions.NavActions","location":"app/ru.surf.template.navigation/-nav-actions/-nav-actions.html","searchKeys":["NavActions","fun NavActions(controller: NavHostController)","ru.surf.template.navigation.NavActions.NavActions"]},{"name":"fun NavGraph(navController: NavHostController)","description":"ru.surf.template.navigation.NavGraph","location":"app/ru.surf.template.navigation/-nav-graph.html","searchKeys":["NavGraph","fun NavGraph(navController: NavHostController)","ru.surf.template.navigation.NavGraph"]},{"name":"fun NavGraphGuest(navController: NavHostController)","description":"ru.surf.template.navigation.NavGraphGuest","location":"app/ru.surf.template.navigation/-nav-graph-guest.html","searchKeys":["NavGraphGuest","fun NavGraphGuest(navController: NavHostController)","ru.surf.template.navigation.NavGraphGuest"]},{"name":"fun NavGraphMain(navController: NavHostController)","description":"ru.surf.template.navigation.NavGraphMain","location":"app/ru.surf.template.navigation/-nav-graph-main.html","searchKeys":["NavGraphMain","fun NavGraphMain(navController: NavHostController)","ru.surf.template.navigation.NavGraphMain"]},{"name":"fun SetBackDispatcherAppDrawer(scaffoldState: ScaffoldState)","description":"ru.surf.template.drawer.SetBackDispatcherAppDrawer","location":"app/ru.surf.template.drawer/-set-back-dispatcher-app-drawer.html","searchKeys":["SetBackDispatcherAppDrawer","fun SetBackDispatcherAppDrawer(scaffoldState: ScaffoldState)","ru.surf.template.drawer.SetBackDispatcherAppDrawer"]},{"name":"fun provideDataServices(core: CoreDataService, users: UsersDataService): Set<IAppDatabase>","description":"ru.surf.template.di.ModuleData.provideDataServices","location":"app/ru.surf.template.di/-module-data/provide-data-services.html","searchKeys":["provideDataServices","fun provideDataServices(core: CoreDataService, users: UsersDataService): Set<IAppDatabase>","ru.surf.template.di.ModuleData.provideDataServices"]},{"name":"fun providePreferences(core: CorePreferences, other: OtherPreferences, users: UsersPreferences, settings: SettingsPreferences): Set<IAppPreferences>","description":"ru.surf.template.di.ModuleData.providePreferences","location":"app/ru.surf.template.di/-module-data/provide-preferences.html","searchKeys":["providePreferences","fun providePreferences(core: CorePreferences, other: OtherPreferences, users: UsersPreferences, settings: SettingsPreferences): Set<IAppPreferences>","ru.surf.template.di.ModuleData.providePreferences"]},{"name":"object ModuleData","description":"ru.surf.template.di.ModuleData","location":"app/ru.surf.template.di/-module-data/index.html","searchKeys":["ModuleData","object ModuleData","ru.surf.template.di.ModuleData"]},{"name":"object ToSettings : AppDrawerActions","description":"ru.surf.template.drawer.AppDrawerActions.ToSettings","location":"app/ru.surf.template.drawer/-app-drawer-actions/-to-settings/index.html","searchKeys":["ToSettings","object ToSettings : AppDrawerActions","ru.surf.template.drawer.AppDrawerActions.ToSettings"]},{"name":"object ToUsers : AppDrawerActions","description":"ru.surf.template.drawer.AppDrawerActions.ToUsers","location":"app/ru.surf.template.drawer/-app-drawer-actions/-to-users/index.html","searchKeys":["ToUsers","object ToUsers : AppDrawerActions","ru.surf.template.drawer.AppDrawerActions.ToUsers"]},{"name":"open override val controller: NavHostController","description":"ru.surf.template.navigation.NavActions.controller","location":"app/ru.surf.template.navigation/-nav-actions/controller.html","searchKeys":["controller","open override val controller: NavHostController","ru.surf.template.navigation.NavActions.controller"]},{"name":"private fun Preview()","description":"ru.surf.template.drawer.Preview","location":"app/ru.surf.template.drawer/-preview.html","searchKeys":["Preview","private fun Preview()","ru.surf.template.drawer.Preview"]},{"name":"private val viewModel: MainViewModel","description":"ru.surf.template.AppActivity.viewModel","location":"app/ru.surf.template/-app-activity/view-model.html","searchKeys":["viewModel","private val viewModel: MainViewModel","ru.surf.template.AppActivity.viewModel"]},{"name":"protected fun AppDrawerActions()","description":"ru.surf.template.drawer.AppDrawerActions.AppDrawerActions","location":"app/ru.surf.template.drawer/-app-drawer-actions/-app-drawer-actions.html","searchKeys":["AppDrawerActions","protected fun AppDrawerActions()","ru.surf.template.drawer.AppDrawerActions.AppDrawerActions"]},{"name":"protected open override fun onCreate(savedInstanceState: Bundle?)","description":"ru.surf.template.AppActivity.onCreate","location":"app/ru.surf.template/-app-activity/on-create.html","searchKeys":["onCreate","protected open override fun onCreate(savedInstanceState: Bundle?)","ru.surf.template.AppActivity.onCreate"]},{"name":"sealed class AppDrawerActions","description":"ru.surf.template.drawer.AppDrawerActions","location":"app/ru.surf.template.drawer/-app-drawer-actions/index.html","searchKeys":["AppDrawerActions","sealed class AppDrawerActions","ru.surf.template.drawer.AppDrawerActions"]},{"name":"IS_START_PAGE()","description":"ru.surf.users.data.preferences.UsersPreferencesBase.KEYS.IS_START_PAGE","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-base/-k-e-y-s/-i-s_-s-t-a-r-t_-p-a-g-e/index.html","searchKeys":["IS_START_PAGE","IS_START_PAGE()","ru.surf.users.data.preferences.UsersPreferencesBase.KEYS.IS_START_PAGE"]},{"name":"LAST_UPDATE_LIST_USERS()","description":"ru.surf.users.data.preferences.UsersPreferencesListCache.KEYS.LAST_UPDATE_LIST_USERS","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-list-cache/-k-e-y-s/-l-a-s-t_-u-p-d-a-t-e_-l-i-s-t_-u-s-e-r-s/index.html","searchKeys":["LAST_UPDATE_LIST_USERS","LAST_UPDATE_LIST_USERS()","ru.surf.users.data.preferences.UsersPreferencesListCache.KEYS.LAST_UPDATE_LIST_USERS"]},{"name":"abstract class UsersDatabase : RoomDatabase","description":"ru.surf.users.base.UsersDatabase","location":"modules/users/ru.surf.users.base/-users-database/index.html","searchKeys":["UsersDatabase","abstract class UsersDatabase : RoomDatabase","ru.surf.users.base.UsersDatabase"]},{"name":"abstract fun daoUserModel(): UserModelDao","description":"ru.surf.users.base.UsersDatabase.daoUserModel","location":"modules/users/ru.surf.users.base/-users-database/dao-user-model.html","searchKeys":["daoUserModel","abstract fun daoUserModel(): UserModelDao","ru.surf.users.base.UsersDatabase.daoUserModel"]},{"name":"abstract fun getModel(id: String): Flow<UserModel>","description":"ru.surf.users.data.dao.UserModelDao.getModel","location":"modules/users/ru.surf.users.data.dao/-user-model-dao/get-model.html","searchKeys":["getModel","abstract fun getModel(id: String): Flow<UserModel>","ru.surf.users.data.dao.UserModelDao.getModel"]},{"name":"abstract fun pagingSource(): PagingSource<Int, UserModel>","description":"ru.surf.users.data.dao.UserModelDao.pagingSource","location":"modules/users/ru.surf.users.data.dao/-user-model-dao/paging-source.html","searchKeys":["pagingSource","abstract fun pagingSource(): PagingSource<Int, UserModel>","ru.surf.users.data.dao.UserModelDao.pagingSource"]},{"name":"abstract override val db: UsersDatabase","description":"ru.surf.users.services.dataService.impl.UserModelDataService.db","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/db.html","searchKeys":["db","abstract override val db: UsersDatabase","ru.surf.users.services.dataService.impl.UserModelDataService.db"]},{"name":"abstract override val p: SharedPreferences","description":"ru.surf.users.data.preferences.UsersPreferencesBase.p","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-base/p.html","searchKeys":["p","abstract override val p: SharedPreferences","ru.surf.users.data.preferences.UsersPreferencesBase.p"]},{"name":"abstract override val p: SharedPreferences","description":"ru.surf.users.data.preferences.UsersPreferencesListCache.p","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-list-cache/p.html","searchKeys":["p","abstract override val p: SharedPreferences","ru.surf.users.data.preferences.UsersPreferencesListCache.p"]},{"name":"abstract suspend fun clear()","description":"ru.surf.users.data.dao.UserModelDao.clear","location":"modules/users/ru.surf.users.data.dao/-user-model-dao/clear.html","searchKeys":["clear","abstract suspend fun clear()","ru.surf.users.data.dao.UserModelDao.clear"]},{"name":"abstract suspend fun count(): Int","description":"ru.surf.users.data.dao.UserModelDao.count","location":"modules/users/ru.surf.users.data.dao/-user-model-dao/count.html","searchKeys":["count","abstract suspend fun count(): Int","ru.surf.users.data.dao.UserModelDao.count"]},{"name":"abstract suspend fun getListUsers(search: String?, offset: Int = 1, limit: Int = ConstantsPaging.PAGE_LIMIT): Response<List<UserResponse>>","description":"ru.surf.users.services.api.impl.ApiGet.getListUsers","location":"modules/users/ru.surf.users.services.api.impl/-api-get/get-list-users.html","searchKeys":["getListUsers","abstract suspend fun getListUsers(search: String?, offset: Int = 1, limit: Int = ConstantsPaging.PAGE_LIMIT): Response<List<UserResponse>>","ru.surf.users.services.api.impl.ApiGet.getListUsers"]},{"name":"abstract suspend fun insertModels(vararg models: UserModel)","description":"ru.surf.users.data.dao.UserModelDao.insertModels","location":"modules/users/ru.surf.users.data.dao/-user-model-dao/insert-models.html","searchKeys":["insertModels","abstract suspend fun insertModels(vararg models: UserModel)","ru.surf.users.data.dao.UserModelDao.insertModels"]},{"name":"abstract suspend fun updateUser(id: String?): Response<UserResponse>","description":"ru.surf.users.services.api.impl.ApiGet.updateUser","location":"modules/users/ru.surf.users.services.api.impl/-api-get/update-user.html","searchKeys":["updateUser","abstract suspend fun updateUser(id: String?): Response<UserResponse>","ru.surf.users.services.api.impl.ApiGet.updateUser"]},{"name":"abstract val api: UsersApi","description":"ru.surf.users.services.apiService.impl.ApiServiceDelete.api","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-delete/api.html","searchKeys":["api","abstract val api: UsersApi","ru.surf.users.services.apiService.impl.ApiServiceDelete.api"]},{"name":"abstract val api: UsersApi","description":"ru.surf.users.services.apiService.impl.ApiServiceGet.api","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-get/api.html","searchKeys":["api","abstract val api: UsersApi","ru.surf.users.services.apiService.impl.ApiServiceGet.api"]},{"name":"abstract val api: UsersApi","description":"ru.surf.users.services.apiService.impl.ApiServicePatch.api","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-patch/api.html","searchKeys":["api","abstract val api: UsersApi","ru.surf.users.services.apiService.impl.ApiServicePatch.api"]},{"name":"abstract val api: UsersApi","description":"ru.surf.users.services.apiService.impl.ApiServicePost.api","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-post/api.html","searchKeys":["api","abstract val api: UsersApi","ru.surf.users.services.apiService.impl.ApiServicePost.api"]},{"name":"abstract val api: UsersApi","description":"ru.surf.users.services.apiService.impl.ApiServicePut.api","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-put/api.html","searchKeys":["api","abstract val api: UsersApi","ru.surf.users.services.apiService.impl.ApiServicePut.api"]},{"name":"abstract val controller: NavHostController","description":"ru.surf.users.navigation.actions.impl.UsersScreenActions.controller","location":"modules/users/ru.surf.users.navigation.actions.impl/-users-screen-actions/controller.html","searchKeys":["controller","abstract val controller: NavHostController","ru.surf.users.navigation.actions.impl.UsersScreenActions.controller"]},{"name":"class Search(text: String?) : ListUsersActions","description":"ru.surf.users.ui.actions.ListUsersActions.Search","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/-search/index.html","searchKeys":["Search","class Search(text: String?) : ListUsersActions","ru.surf.users.ui.actions.ListUsersActions.Search"]},{"name":"class ToViewUser(userId: String) : ListUsersActions","description":"ru.surf.users.ui.actions.ListUsersActions.ToViewUser","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/-to-view-user/index.html","searchKeys":["ToViewUser","class ToViewUser(userId: String) : ListUsersActions","ru.surf.users.ui.actions.ListUsersActions.ToViewUser"]},{"name":"class UsersApiService(api: UsersApi) : ApiServiceDelete, ApiServiceGet, ApiServicePatch, ApiServicePost, ApiServicePut","description":"ru.surf.users.services.apiService.UsersApiService","location":"modules/users/ru.surf.users.services.apiService/-users-api-service/index.html","searchKeys":["UsersApiService","class UsersApiService(api: UsersApi) : ApiServiceDelete, ApiServiceGet, ApiServicePatch, ApiServicePost, ApiServicePut","ru.surf.users.services.apiService.UsersApiService"]},{"name":"class UsersDataService(db: UsersDatabase) : UserModelDataService","description":"ru.surf.users.services.dataService.UsersDataService","location":"modules/users/ru.surf.users.services.dataService/-users-data-service/index.html","searchKeys":["UsersDataService","class UsersDataService(db: UsersDatabase) : UserModelDataService","ru.surf.users.services.dataService.UsersDataService"]},{"name":"class UsersPageSource(search: String?, apiService: UsersApiService) : PagingSource<Int, UserModel> ","description":"ru.surf.users.paging.UsersPageSource","location":"modules/users/ru.surf.users.paging/-users-page-source/index.html","searchKeys":["UsersPageSource","class UsersPageSource(search: String?, apiService: UsersApiService) : PagingSource<Int, UserModel> ","ru.surf.users.paging.UsersPageSource"]},{"name":"class UsersPreferences(p: SharedPreferences) : UsersPreferencesBase, UsersPreferencesListCache","description":"ru.surf.users.data.preferences.UsersPreferences","location":"modules/users/ru.surf.users.data.preferences/-users-preferences/index.html","searchKeys":["UsersPreferences","class UsersPreferences(p: SharedPreferences) : UsersPreferencesBase, UsersPreferencesListCache","ru.surf.users.data.preferences.UsersPreferences"]},{"name":"class UsersRemoteMediator(apiService: UsersApiService, dataService: UsersDataService, preferences: UsersPreferences) : RemoteMediator<Int, UserModel> ","description":"ru.surf.users.paging.UsersRemoteMediator","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/index.html","searchKeys":["UsersRemoteMediator","class UsersRemoteMediator(apiService: UsersApiService, dataService: UsersDataService, preferences: UsersPreferences) : RemoteMediator<Int, UserModel> ","ru.surf.users.paging.UsersRemoteMediator"]},{"name":"class UsersViewModel constructor(apiService: UsersApiService, dataService: UsersDataService, preferences: UsersPreferences) : ViewModel","description":"ru.surf.users.ui.viewModels.UsersViewModel","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/index.html","searchKeys":["UsersViewModel","class UsersViewModel constructor(apiService: UsersApiService, dataService: UsersDataService, preferences: UsersPreferences) : ViewModel","ru.surf.users.ui.viewModels.UsersViewModel"]},{"name":"data class RefreshView(userId: String) : ViewUserActions","description":"ru.surf.users.ui.actions.ViewUserActions.RefreshView","location":"modules/users/ru.surf.users.ui.actions/-view-user-actions/-refresh-view/index.html","searchKeys":["RefreshView","data class RefreshView(userId: String) : ViewUserActions","ru.surf.users.ui.actions.ViewUserActions.RefreshView"]},{"name":"data class UserModel(id: String, name: String) : IModel","description":"ru.surf.users.data.models.UserModel","location":"modules/users/ru.surf.users.data.models/-user-model/index.html","searchKeys":["UserModel","data class UserModel(id: String, name: String) : IModel","ru.surf.users.data.models.UserModel"]},{"name":"data class UserResponse(code: Int, name: String?)","description":"ru.surf.users.data.responses.UserResponse","location":"modules/users/ru.surf.users.data.responses/-user-response/index.html","searchKeys":["UserResponse","data class UserResponse(code: Int, name: String?)","ru.surf.users.data.responses.UserResponse"]},{"name":"enum KEYS : Enum<UsersPreferencesBase.KEYS> ","description":"ru.surf.users.data.preferences.UsersPreferencesBase.KEYS","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-base/-k-e-y-s/index.html","searchKeys":["KEYS","enum KEYS : Enum<UsersPreferencesBase.KEYS> ","ru.surf.users.data.preferences.UsersPreferencesBase.KEYS"]},{"name":"enum KEYS : Enum<UsersPreferencesListCache.KEYS> ","description":"ru.surf.users.data.preferences.UsersPreferencesListCache.KEYS","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-list-cache/-k-e-y-s/index.html","searchKeys":["KEYS","enum KEYS : Enum<UsersPreferencesListCache.KEYS> ","ru.surf.users.data.preferences.UsersPreferencesListCache.KEYS"]},{"name":"fun List<UserResponse>.toModels(): List<UserModel>","description":"ru.surf.users.data.mappers.toModels","location":"modules/users/ru.surf.users.data.mappers/to-models.html","searchKeys":["toModels","fun List<UserResponse>.toModels(): List<UserModel>","ru.surf.users.data.mappers.toModels"]},{"name":"fun ListUserItem(model: UserModel, onActions: (ListUsersActions) -> Unit = {})","description":"ru.surf.users.ui.screens.listUsers.ListUserItem","location":"modules/users/ru.surf.users.ui.screens.listUsers/-list-user-item.html","searchKeys":["ListUserItem","fun ListUserItem(model: UserModel, onActions: (ListUsersActions) -> Unit = {})","ru.surf.users.ui.screens.listUsers.ListUserItem"]},{"name":"fun ListUsersBody(search: String?, items: LazyPagingItems<UserModel>, searchItems: LazyPagingItems<UserModel>, onActions: (ListUsersActions) -> Unit = {})","description":"ru.surf.users.ui.screens.listUsers.ListUsersBody","location":"modules/users/ru.surf.users.ui.screens.listUsers/-list-users-body.html","searchKeys":["ListUsersBody","fun ListUsersBody(search: String?, items: LazyPagingItems<UserModel>, searchItems: LazyPagingItems<UserModel>, onActions: (ListUsersActions) -> Unit = {})","ru.surf.users.ui.screens.listUsers.ListUsersBody"]},{"name":"fun ListUsersScreen(viewModel: UsersViewModel, onActions: (ListUsersActions) -> Unit = {})","description":"ru.surf.users.ui.screens.listUsers.ListUsersScreen","location":"modules/users/ru.surf.users.ui.screens.listUsers/-list-users-screen.html","searchKeys":["ListUsersScreen","fun ListUsersScreen(viewModel: UsersViewModel, onActions: (ListUsersActions) -> Unit = {})","ru.surf.users.ui.screens.listUsers.ListUsersScreen"]},{"name":"fun NavGraphBuilder.usersNavGraph(scaffoldState: ScaffoldState, navActions: UsersNavActions)","description":"ru.surf.users.navigation.graph.usersNavGraph","location":"modules/users/ru.surf.users.navigation.graph/users-nav-graph.html","searchKeys":["usersNavGraph","fun NavGraphBuilder.usersNavGraph(scaffoldState: ScaffoldState, navActions: UsersNavActions)","ru.surf.users.navigation.graph.usersNavGraph"]},{"name":"fun NavGraphBuilder.usersScreenGraph(scaffoldState: ScaffoldState, navActions: UsersNavActions)","description":"ru.surf.users.navigation.graph.impl.usersScreenGraph","location":"modules/users/ru.surf.users.navigation.graph.impl/users-screen-graph.html","searchKeys":["usersScreenGraph","fun NavGraphBuilder.usersScreenGraph(scaffoldState: ScaffoldState, navActions: UsersNavActions)","ru.surf.users.navigation.graph.impl.usersScreenGraph"]},{"name":"fun RefreshView(userId: String)","description":"ru.surf.users.ui.actions.ViewUserActions.RefreshView.RefreshView","location":"modules/users/ru.surf.users.ui.actions/-view-user-actions/-refresh-view/-refresh-view.html","searchKeys":["RefreshView","fun RefreshView(userId: String)","ru.surf.users.ui.actions.ViewUserActions.RefreshView.RefreshView"]},{"name":"fun Search(text: String?)","description":"ru.surf.users.ui.actions.ListUsersActions.Search.Search","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/-search/-search.html","searchKeys":["Search","fun Search(text: String?)","ru.surf.users.ui.actions.ListUsersActions.Search.Search"]},{"name":"fun ToViewUser(userId: String)","description":"ru.surf.users.ui.actions.ListUsersActions.ToViewUser.ToViewUser","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/-to-view-user/-to-view-user.html","searchKeys":["ToViewUser","fun ToViewUser(userId: String)","ru.surf.users.ui.actions.ListUsersActions.ToViewUser.ToViewUser"]},{"name":"fun UserModel(id: String, name: String)","description":"ru.surf.users.data.models.UserModel.UserModel","location":"modules/users/ru.surf.users.data.models/-user-model/-user-model.html","searchKeys":["UserModel","fun UserModel(id: String, name: String)","ru.surf.users.data.models.UserModel.UserModel"]},{"name":"fun UserResponse(code: Int, name: String?)","description":"ru.surf.users.data.responses.UserResponse.UserResponse","location":"modules/users/ru.surf.users.data.responses/-user-response/-user-response.html","searchKeys":["UserResponse","fun UserResponse(code: Int, name: String?)","ru.surf.users.data.responses.UserResponse.UserResponse"]},{"name":"fun UserResponse.toModel(): UserModel","description":"ru.surf.users.data.mappers.toModel","location":"modules/users/ru.surf.users.data.mappers/to-model.html","searchKeys":["toModel","fun UserResponse.toModel(): UserModel","ru.surf.users.data.mappers.toModel"]},{"name":"fun UsersApiService(api: UsersApi)","description":"ru.surf.users.services.apiService.UsersApiService.UsersApiService","location":"modules/users/ru.surf.users.services.apiService/-users-api-service/-users-api-service.html","searchKeys":["UsersApiService","fun UsersApiService(api: UsersApi)","ru.surf.users.services.apiService.UsersApiService.UsersApiService"]},{"name":"fun UsersDataService(db: UsersDatabase)","description":"ru.surf.users.services.dataService.UsersDataService.UsersDataService","location":"modules/users/ru.surf.users.services.dataService/-users-data-service/-users-data-service.html","searchKeys":["UsersDataService","fun UsersDataService(db: UsersDatabase)","ru.surf.users.services.dataService.UsersDataService.UsersDataService"]},{"name":"fun UsersDatabase()","description":"ru.surf.users.base.UsersDatabase.UsersDatabase","location":"modules/users/ru.surf.users.base/-users-database/-users-database.html","searchKeys":["UsersDatabase","fun UsersDatabase()","ru.surf.users.base.UsersDatabase.UsersDatabase"]},{"name":"fun UsersPageSource(search: String?, apiService: UsersApiService)","description":"ru.surf.users.paging.UsersPageSource.UsersPageSource","location":"modules/users/ru.surf.users.paging/-users-page-source/-users-page-source.html","searchKeys":["UsersPageSource","fun UsersPageSource(search: String?, apiService: UsersApiService)","ru.surf.users.paging.UsersPageSource.UsersPageSource"]},{"name":"fun UsersPreferences(p: SharedPreferences)","description":"ru.surf.users.data.preferences.UsersPreferences.UsersPreferences","location":"modules/users/ru.surf.users.data.preferences/-users-preferences/-users-preferences.html","searchKeys":["UsersPreferences","fun UsersPreferences(p: SharedPreferences)","ru.surf.users.data.preferences.UsersPreferences.UsersPreferences"]},{"name":"fun UsersRemoteMediator(apiService: UsersApiService, dataService: UsersDataService, preferences: UsersPreferences)","description":"ru.surf.users.paging.UsersRemoteMediator.UsersRemoteMediator","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/-users-remote-mediator.html","searchKeys":["UsersRemoteMediator","fun UsersRemoteMediator(apiService: UsersApiService, dataService: UsersDataService, preferences: UsersPreferences)","ru.surf.users.paging.UsersRemoteMediator.UsersRemoteMediator"]},{"name":"fun UsersViewModel(apiService: UsersApiService, dataService: UsersDataService, preferences: UsersPreferences)","description":"ru.surf.users.ui.viewModels.UsersViewModel.UsersViewModel","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/-users-view-model.html","searchKeys":["UsersViewModel","fun UsersViewModel(apiService: UsersApiService, dataService: UsersDataService, preferences: UsersPreferences)","ru.surf.users.ui.viewModels.UsersViewModel.UsersViewModel"]},{"name":"fun ViewUserBody(id: String, model: UserModel?, loading: Boolean = false, error404: Boolean = false, onActions: (ViewUserActions) -> Unit = {}, backDispatcher: OnBackPressedDispatcher? = null)","description":"ru.surf.users.ui.screens.viewUser.ViewUserBody","location":"modules/users/ru.surf.users.ui.screens.viewUser/-view-user-body.html","searchKeys":["ViewUserBody","fun ViewUserBody(id: String, model: UserModel?, loading: Boolean = false, error404: Boolean = false, onActions: (ViewUserActions) -> Unit = {}, backDispatcher: OnBackPressedDispatcher? = null)","ru.surf.users.ui.screens.viewUser.ViewUserBody"]},{"name":"fun ViewUserScreen(userId: String, viewModel: UsersViewModel, onActions: (ViewUserActions) -> Unit = {})","description":"ru.surf.users.ui.screens.viewUser.ViewUserScreen","location":"modules/users/ru.surf.users.ui.screens.viewUser/-view-user-screen.html","searchKeys":["ViewUserScreen","fun ViewUserScreen(userId: String, viewModel: UsersViewModel, onActions: (ViewUserActions) -> Unit = {})","ru.surf.users.ui.screens.viewUser.ViewUserScreen"]},{"name":"fun getUser(userId: String): Flow<UserModel>","description":"ru.surf.users.ui.viewModels.UsersViewModel.getUser","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/get-user.html","searchKeys":["getUser","fun getUser(userId: String): Flow<UserModel>","ru.surf.users.ui.viewModels.UsersViewModel.getUser"]},{"name":"fun provideUsersApi(retrofit: Retrofit): UsersApi","description":"ru.surf.users.di.ModuleNetwork.provideUsersApi","location":"modules/users/ru.surf.users.di/-module-network/provide-users-api.html","searchKeys":["provideUsersApi","fun provideUsersApi(retrofit: Retrofit): UsersApi","ru.surf.users.di.ModuleNetwork.provideUsersApi"]},{"name":"fun provideUsersApiService(api: UsersApi): UsersApiService","description":"ru.surf.users.di.ModuleNetwork.provideUsersApiService","location":"modules/users/ru.surf.users.di/-module-network/provide-users-api-service.html","searchKeys":["provideUsersApiService","fun provideUsersApiService(api: UsersApi): UsersApiService","ru.surf.users.di.ModuleNetwork.provideUsersApiService"]},{"name":"fun provideUsersDataService(db: UsersDatabase): UsersDataService","description":"ru.surf.users.di.ModuleDefault.provideUsersDataService","location":"modules/users/ru.surf.users.di/-module-default/provide-users-data-service.html","searchKeys":["provideUsersDataService","fun provideUsersDataService(db: UsersDatabase): UsersDataService","ru.surf.users.di.ModuleDefault.provideUsersDataService"]},{"name":"fun provideUsersDatabase(application: Application): UsersDatabase","description":"ru.surf.users.di.ModuleDefault.provideUsersDatabase","location":"modules/users/ru.surf.users.di/-module-default/provide-users-database.html","searchKeys":["provideUsersDatabase","fun provideUsersDatabase(application: Application): UsersDatabase","ru.surf.users.di.ModuleDefault.provideUsersDatabase"]},{"name":"fun provideUsersPreferences(corePreferences: CorePreferences): UsersPreferences","description":"ru.surf.users.di.ModuleDefault.provideUsersPreferences","location":"modules/users/ru.surf.users.di/-module-default/provide-users-preferences.html","searchKeys":["provideUsersPreferences","fun provideUsersPreferences(corePreferences: CorePreferences): UsersPreferences","ru.surf.users.di.ModuleDefault.provideUsersPreferences"]},{"name":"fun search(search: String?)","description":"ru.surf.users.ui.viewModels.UsersViewModel.search","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/search.html","searchKeys":["search","fun search(search: String?)","ru.surf.users.ui.viewModels.UsersViewModel.search"]},{"name":"fun updateUser(userId: String)","description":"ru.surf.users.ui.viewModels.UsersViewModel.updateUser","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/update-user.html","searchKeys":["updateUser","fun updateUser(userId: String)","ru.surf.users.ui.viewModels.UsersViewModel.updateUser"]},{"name":"fun userModelMock(): UserModel","description":"ru.surf.users.data.mock.userModelMock","location":"modules/users/ru.surf.users.data.mock/user-model-mock.html","searchKeys":["userModelMock","fun userModelMock(): UserModel","ru.surf.users.data.mock.userModelMock"]},{"name":"interface ApiDelete","description":"ru.surf.users.services.api.impl.ApiDelete","location":"modules/users/ru.surf.users.services.api.impl/-api-delete/index.html","searchKeys":["ApiDelete","interface ApiDelete","ru.surf.users.services.api.impl.ApiDelete"]},{"name":"interface ApiGet","description":"ru.surf.users.services.api.impl.ApiGet","location":"modules/users/ru.surf.users.services.api.impl/-api-get/index.html","searchKeys":["ApiGet","interface ApiGet","ru.surf.users.services.api.impl.ApiGet"]},{"name":"interface ApiPatch","description":"ru.surf.users.services.api.impl.ApiPatch","location":"modules/users/ru.surf.users.services.api.impl/-api-patch/index.html","searchKeys":["ApiPatch","interface ApiPatch","ru.surf.users.services.api.impl.ApiPatch"]},{"name":"interface ApiPost","description":"ru.surf.users.services.api.impl.ApiPost","location":"modules/users/ru.surf.users.services.api.impl/-api-post/index.html","searchKeys":["ApiPost","interface ApiPost","ru.surf.users.services.api.impl.ApiPost"]},{"name":"interface ApiPut","description":"ru.surf.users.services.api.impl.ApiPut","location":"modules/users/ru.surf.users.services.api.impl/-api-put/index.html","searchKeys":["ApiPut","interface ApiPut","ru.surf.users.services.api.impl.ApiPut"]},{"name":"interface ApiServiceDelete","description":"ru.surf.users.services.apiService.impl.ApiServiceDelete","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-delete/index.html","searchKeys":["ApiServiceDelete","interface ApiServiceDelete","ru.surf.users.services.apiService.impl.ApiServiceDelete"]},{"name":"interface ApiServiceGet","description":"ru.surf.users.services.apiService.impl.ApiServiceGet","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-get/index.html","searchKeys":["ApiServiceGet","interface ApiServiceGet","ru.surf.users.services.apiService.impl.ApiServiceGet"]},{"name":"interface ApiServicePatch","description":"ru.surf.users.services.apiService.impl.ApiServicePatch","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-patch/index.html","searchKeys":["ApiServicePatch","interface ApiServicePatch","ru.surf.users.services.apiService.impl.ApiServicePatch"]},{"name":"interface ApiServicePost","description":"ru.surf.users.services.apiService.impl.ApiServicePost","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-post/index.html","searchKeys":["ApiServicePost","interface ApiServicePost","ru.surf.users.services.apiService.impl.ApiServicePost"]},{"name":"interface ApiServicePut","description":"ru.surf.users.services.apiService.impl.ApiServicePut","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-put/index.html","searchKeys":["ApiServicePut","interface ApiServicePut","ru.surf.users.services.apiService.impl.ApiServicePut"]},{"name":"interface UserModelDao","description":"ru.surf.users.data.dao.UserModelDao","location":"modules/users/ru.surf.users.data.dao/-user-model-dao/index.html","searchKeys":["UserModelDao","interface UserModelDao","ru.surf.users.data.dao.UserModelDao"]},{"name":"interface UserModelDataService : IAppDatabase","description":"ru.surf.users.services.dataService.impl.UserModelDataService","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/index.html","searchKeys":["UserModelDataService","interface UserModelDataService : IAppDatabase","ru.surf.users.services.dataService.impl.UserModelDataService"]},{"name":"interface UsersApi : ApiDelete, ApiGet, ApiPatch, ApiPost, ApiPut","description":"ru.surf.users.services.api.UsersApi","location":"modules/users/ru.surf.users.services.api/-users-api/index.html","searchKeys":["UsersApi","interface UsersApi : ApiDelete, ApiGet, ApiPatch, ApiPost, ApiPut","ru.surf.users.services.api.UsersApi"]},{"name":"interface UsersNavActions : UsersScreenActions","description":"ru.surf.users.navigation.actions.UsersNavActions","location":"modules/users/ru.surf.users.navigation.actions/-users-nav-actions/index.html","searchKeys":["UsersNavActions","interface UsersNavActions : UsersScreenActions","ru.surf.users.navigation.actions.UsersNavActions"]},{"name":"interface UsersPreferencesBase : IAppPreferences","description":"ru.surf.users.data.preferences.UsersPreferencesBase","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-base/index.html","searchKeys":["UsersPreferencesBase","interface UsersPreferencesBase : IAppPreferences","ru.surf.users.data.preferences.UsersPreferencesBase"]},{"name":"interface UsersPreferencesListCache : IAppPreferences","description":"ru.surf.users.data.preferences.UsersPreferencesListCache","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-list-cache/index.html","searchKeys":["UsersPreferencesListCache","interface UsersPreferencesListCache : IAppPreferences","ru.surf.users.data.preferences.UsersPreferencesListCache"]},{"name":"interface UsersScreenActions","description":"ru.surf.users.navigation.actions.impl.UsersScreenActions","location":"modules/users/ru.surf.users.navigation.actions.impl/-users-screen-actions/index.html","searchKeys":["UsersScreenActions","interface UsersScreenActions","ru.surf.users.navigation.actions.impl.UsersScreenActions"]},{"name":"object Companion","description":"ru.surf.users.paging.UsersRemoteMediator.Companion","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/-companion/index.html","searchKeys":["Companion","object Companion","ru.surf.users.paging.UsersRemoteMediator.Companion"]},{"name":"object ModuleDefault","description":"ru.surf.users.di.ModuleDefault","location":"modules/users/ru.surf.users.di/-module-default/index.html","searchKeys":["ModuleDefault","object ModuleDefault","ru.surf.users.di.ModuleDefault"]},{"name":"object ModuleNetwork","description":"ru.surf.users.di.ModuleNetwork","location":"modules/users/ru.surf.users.di/-module-network/index.html","searchKeys":["ModuleNetwork","object ModuleNetwork","ru.surf.users.di.ModuleNetwork"]},{"name":"object OpenMenu : ListUsersActions","description":"ru.surf.users.ui.actions.ListUsersActions.OpenMenu","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/-open-menu/index.html","searchKeys":["OpenMenu","object OpenMenu : ListUsersActions","ru.surf.users.ui.actions.ListUsersActions.OpenMenu"]},{"name":"object UsersNav","description":"ru.surf.users.navigation.nav.UsersNav","location":"modules/users/ru.surf.users.navigation.nav/-users-nav/index.html","searchKeys":["UsersNav","object UsersNav","ru.surf.users.navigation.nav.UsersNav"]},{"name":"object UsersNavScreen","description":"ru.surf.users.navigation.nav.impl.UsersNavScreen","location":"modules/users/ru.surf.users.navigation.nav.impl/-users-nav-screen/index.html","searchKeys":["UsersNavScreen","object UsersNavScreen","ru.surf.users.navigation.nav.impl.UsersNavScreen"]},{"name":"open fun getUserModel(userId: String): Flow<UserModel>","description":"ru.surf.users.services.dataService.impl.UserModelDataService.getUserModel","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/get-user-model.html","searchKeys":["getUserModel","open fun getUserModel(userId: String): Flow<UserModel>","ru.surf.users.services.dataService.impl.UserModelDataService.getUserModel"]},{"name":"open fun pagingListUserModel(): PagingSource<Int, UserModel>","description":"ru.surf.users.services.dataService.impl.UserModelDataService.pagingListUserModel","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/paging-list-user-model.html","searchKeys":["pagingListUserModel","open fun pagingListUserModel(): PagingSource<Int, UserModel>","ru.surf.users.services.dataService.impl.UserModelDataService.pagingListUserModel"]},{"name":"open fun toUser(userId: String)","description":"ru.surf.users.navigation.actions.impl.UsersScreenActions.toUser","location":"modules/users/ru.surf.users.navigation.actions.impl/-users-screen-actions/to-user.html","searchKeys":["toUser","open fun toUser(userId: String)","ru.surf.users.navigation.actions.impl.UsersScreenActions.toUser"]},{"name":"open fun toUsers()","description":"ru.surf.users.navigation.actions.impl.UsersScreenActions.toUsers","location":"modules/users/ru.surf.users.navigation.actions.impl/-users-screen-actions/to-users.html","searchKeys":["toUsers","open fun toUsers()","ru.surf.users.navigation.actions.impl.UsersScreenActions.toUsers"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.users.data.preferences.UsersPreferences.clearCacheAfterLogout","location":"modules/users/ru.surf.users.data.preferences/-users-preferences/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.users.data.preferences.UsersPreferences.clearCacheAfterLogout"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.users.data.preferences.UsersPreferencesBase.clearCacheAfterLogout","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-base/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.users.data.preferences.UsersPreferencesBase.clearCacheAfterLogout"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.users.data.preferences.UsersPreferencesListCache.clearCacheAfterLogout","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-list-cache/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.users.data.preferences.UsersPreferencesListCache.clearCacheAfterLogout"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.users.services.dataService.impl.UserModelDataService.clearCacheAfterLogout","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.users.services.dataService.impl.UserModelDataService.clearCacheAfterLogout"]},{"name":"open override fun getRefreshKey(state: PagingState<Int, UserModel>): Int","description":"ru.surf.users.paging.UsersPageSource.getRefreshKey","location":"modules/users/ru.surf.users.paging/-users-page-source/get-refresh-key.html","searchKeys":["getRefreshKey","open override fun getRefreshKey(state: PagingState<Int, UserModel>): Int","ru.surf.users.paging.UsersPageSource.getRefreshKey"]},{"name":"open override val api: UsersApi","description":"ru.surf.users.services.apiService.UsersApiService.api","location":"modules/users/ru.surf.users.services.apiService/-users-api-service/api.html","searchKeys":["api","open override val api: UsersApi","ru.surf.users.services.apiService.UsersApiService.api"]},{"name":"open override val db: UsersDatabase","description":"ru.surf.users.services.dataService.UsersDataService.db","location":"modules/users/ru.surf.users.services.dataService/-users-data-service/db.html","searchKeys":["db","open override val db: UsersDatabase","ru.surf.users.services.dataService.UsersDataService.db"]},{"name":"open override val id: String","description":"ru.surf.users.data.models.UserModel.id","location":"modules/users/ru.surf.users.data.models/-user-model/id.html","searchKeys":["id","open override val id: String","ru.surf.users.data.models.UserModel.id"]},{"name":"open override val p: SharedPreferences","description":"ru.surf.users.data.preferences.UsersPreferences.p","location":"modules/users/ru.surf.users.data.preferences/-users-preferences/p.html","searchKeys":["p","open override val p: SharedPreferences","ru.surf.users.data.preferences.UsersPreferences.p"]},{"name":"open suspend fun clearUserModel()","description":"ru.surf.users.services.dataService.impl.UserModelDataService.clearUserModel","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/clear-user-model.html","searchKeys":["clearUserModel","open suspend fun clearUserModel()","ru.surf.users.services.dataService.impl.UserModelDataService.clearUserModel"]},{"name":"open suspend fun countUserModel(): Int","description":"ru.surf.users.services.dataService.impl.UserModelDataService.countUserModel","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/count-user-model.html","searchKeys":["countUserModel","open suspend fun countUserModel(): Int","ru.surf.users.services.dataService.impl.UserModelDataService.countUserModel"]},{"name":"open suspend fun getListUsers(offset: Int, search: String? = null): ResponseResult<List<UserModel>>","description":"ru.surf.users.services.apiService.impl.ApiServiceGet.getListUsers","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-get/get-list-users.html","searchKeys":["getListUsers","open suspend fun getListUsers(offset: Int, search: String? = null): ResponseResult<List<UserModel>>","ru.surf.users.services.apiService.impl.ApiServiceGet.getListUsers"]},{"name":"open suspend fun insertUserModel(vararg models: UserModel)","description":"ru.surf.users.services.dataService.impl.UserModelDataService.insertUserModel","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/insert-user-model.html","searchKeys":["insertUserModel","open suspend fun insertUserModel(vararg models: UserModel)","ru.surf.users.services.dataService.impl.UserModelDataService.insertUserModel"]},{"name":"open suspend fun updateUser(userId: String): ResponseResult<UserModel>","description":"ru.surf.users.services.apiService.impl.ApiServiceGet.updateUser","location":"modules/users/ru.surf.users.services.apiService.impl/-api-service-get/update-user.html","searchKeys":["updateUser","open suspend fun updateUser(userId: String): ResponseResult<UserModel>","ru.surf.users.services.apiService.impl.ApiServiceGet.updateUser"]},{"name":"open suspend override fun initialize(): RemoteMediator.InitializeAction","description":"ru.surf.users.paging.UsersRemoteMediator.initialize","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/initialize.html","searchKeys":["initialize","open suspend override fun initialize(): RemoteMediator.InitializeAction","ru.surf.users.paging.UsersRemoteMediator.initialize"]},{"name":"open suspend override fun load(loadType: LoadType, state: PagingState<Int, UserModel>): RemoteMediator.MediatorResult","description":"ru.surf.users.paging.UsersRemoteMediator.load","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/load.html","searchKeys":["load","open suspend override fun load(loadType: LoadType, state: PagingState<Int, UserModel>): RemoteMediator.MediatorResult","ru.surf.users.paging.UsersRemoteMediator.load"]},{"name":"open suspend override fun load(params: PagingSource.LoadParams<Int>): PagingSource.LoadResult<Int, UserModel>","description":"ru.surf.users.paging.UsersPageSource.load","location":"modules/users/ru.surf.users.paging/-users-page-source/load.html","searchKeys":["load","open suspend override fun load(params: PagingSource.LoadParams<Int>): PagingSource.LoadResult<Int, UserModel>","ru.surf.users.paging.UsersPageSource.load"]},{"name":"open var isStartPage: Boolean","description":"ru.surf.users.data.preferences.UsersPreferencesBase.isStartPage","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-base/is-start-page.html","searchKeys":["isStartPage","open var isStartPage: Boolean","ru.surf.users.data.preferences.UsersPreferencesBase.isStartPage"]},{"name":"open var lastUpdateListUsers: Long","description":"ru.surf.users.data.preferences.UsersPreferencesListCache.lastUpdateListUsers","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-list-cache/last-update-list-users.html","searchKeys":["lastUpdateListUsers","open var lastUpdateListUsers: Long","ru.surf.users.data.preferences.UsersPreferencesListCache.lastUpdateListUsers"]},{"name":"private fun KEYS()","description":"ru.surf.users.data.preferences.UsersPreferencesBase.KEYS.KEYS","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-base/-k-e-y-s/-k-e-y-s.html","searchKeys":["KEYS","private fun KEYS()","ru.surf.users.data.preferences.UsersPreferencesBase.KEYS.KEYS"]},{"name":"private fun KEYS()","description":"ru.surf.users.data.preferences.UsersPreferencesListCache.KEYS.KEYS","location":"modules/users/ru.surf.users.data.preferences/-users-preferences-list-cache/-k-e-y-s/-k-e-y-s.html","searchKeys":["KEYS","private fun KEYS()","ru.surf.users.data.preferences.UsersPreferencesListCache.KEYS.KEYS"]},{"name":"private fun Preview()","description":"ru.surf.users.ui.screens.viewUser.Preview","location":"modules/users/ru.surf.users.ui.screens.viewUser/-preview.html","searchKeys":["Preview","private fun Preview()","ru.surf.users.ui.screens.viewUser.Preview"]},{"name":"private val _error404: MutableStateFlow<Boolean>","description":"ru.surf.users.ui.viewModels.UsersViewModel._error404","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/_error404.html","searchKeys":["_error404","private val _error404: MutableStateFlow<Boolean>","ru.surf.users.ui.viewModels.UsersViewModel._error404"]},{"name":"private val _loading: MutableStateFlow<Boolean>","description":"ru.surf.users.ui.viewModels.UsersViewModel._loading","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/_loading.html","searchKeys":["_loading","private val _loading: MutableStateFlow<Boolean>","ru.surf.users.ui.viewModels.UsersViewModel._loading"]},{"name":"private val _search: MutableStateFlow<String?>","description":"ru.surf.users.ui.viewModels.UsersViewModel._search","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/_search.html","searchKeys":["_search","private val _search: MutableStateFlow<String?>","ru.surf.users.ui.viewModels.UsersViewModel._search"]},{"name":"private val apiService: UsersApiService","description":"ru.surf.users.paging.UsersPageSource.apiService","location":"modules/users/ru.surf.users.paging/-users-page-source/api-service.html","searchKeys":["apiService","private val apiService: UsersApiService","ru.surf.users.paging.UsersPageSource.apiService"]},{"name":"private val apiService: UsersApiService","description":"ru.surf.users.paging.UsersRemoteMediator.apiService","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/api-service.html","searchKeys":["apiService","private val apiService: UsersApiService","ru.surf.users.paging.UsersRemoteMediator.apiService"]},{"name":"private val apiService: UsersApiService","description":"ru.surf.users.ui.viewModels.UsersViewModel.apiService","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/api-service.html","searchKeys":["apiService","private val apiService: UsersApiService","ru.surf.users.ui.viewModels.UsersViewModel.apiService"]},{"name":"private val dao: UserModelDao","description":"ru.surf.users.services.dataService.impl.UserModelDataService.dao","location":"modules/users/ru.surf.users.services.dataService.impl/-user-model-data-service/dao.html","searchKeys":["dao","private val dao: UserModelDao","ru.surf.users.services.dataService.impl.UserModelDataService.dao"]},{"name":"private val dataService: UsersDataService","description":"ru.surf.users.paging.UsersRemoteMediator.dataService","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/data-service.html","searchKeys":["dataService","private val dataService: UsersDataService","ru.surf.users.paging.UsersRemoteMediator.dataService"]},{"name":"private val dataService: UsersDataService","description":"ru.surf.users.ui.viewModels.UsersViewModel.dataService","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/data-service.html","searchKeys":["dataService","private val dataService: UsersDataService","ru.surf.users.ui.viewModels.UsersViewModel.dataService"]},{"name":"private val preferences: UsersPreferences","description":"ru.surf.users.paging.UsersRemoteMediator.preferences","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/preferences.html","searchKeys":["preferences","private val preferences: UsersPreferences","ru.surf.users.paging.UsersRemoteMediator.preferences"]},{"name":"private val preferences: UsersPreferences","description":"ru.surf.users.ui.viewModels.UsersViewModel.preferences","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/preferences.html","searchKeys":["preferences","private val preferences: UsersPreferences","ru.surf.users.ui.viewModels.UsersViewModel.preferences"]},{"name":"private val search: String?","description":"ru.surf.users.paging.UsersPageSource.search","location":"modules/users/ru.surf.users.paging/-users-page-source/search.html","searchKeys":["search","private val search: String?","ru.surf.users.paging.UsersPageSource.search"]},{"name":"protected fun ListUsersActions()","description":"ru.surf.users.ui.actions.ListUsersActions.ListUsersActions","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/-list-users-actions.html","searchKeys":["ListUsersActions","protected fun ListUsersActions()","ru.surf.users.ui.actions.ListUsersActions.ListUsersActions"]},{"name":"protected fun ViewUserActions()","description":"ru.surf.users.ui.actions.ViewUserActions.ViewUserActions","location":"modules/users/ru.surf.users.ui.actions/-view-user-actions/-view-user-actions.html","searchKeys":["ViewUserActions","protected fun ViewUserActions()","ru.surf.users.ui.actions.ViewUserActions.ViewUserActions"]},{"name":"sealed class ListUsersActions","description":"ru.surf.users.ui.actions.ListUsersActions","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/index.html","searchKeys":["ListUsersActions","sealed class ListUsersActions","ru.surf.users.ui.actions.ListUsersActions"]},{"name":"sealed class ViewUserActions","description":"ru.surf.users.ui.actions.ViewUserActions","location":"modules/users/ru.surf.users.ui.actions/-view-user-actions/index.html","searchKeys":["ViewUserActions","sealed class ViewUserActions","ru.surf.users.ui.actions.ViewUserActions"]},{"name":"val ListUsersNavScreen: NavScreen","description":"ru.surf.users.navigation.nav.impl.UsersNavScreen.ListUsersNavScreen","location":"modules/users/ru.surf.users.navigation.nav.impl/-users-nav-screen/-list-users-nav-screen.html","searchKeys":["ListUsersNavScreen","val ListUsersNavScreen: NavScreen","ru.surf.users.navigation.nav.impl.UsersNavScreen.ListUsersNavScreen"]},{"name":"val MainNav: UsersNavScreen","description":"ru.surf.users.navigation.nav.UsersNav.MainNav","location":"modules/users/ru.surf.users.navigation.nav/-users-nav/-main-nav.html","searchKeys":["MainNav","val MainNav: UsersNavScreen","ru.surf.users.navigation.nav.UsersNav.MainNav"]},{"name":"val ViewUserNavScreen: NavScreenWithArgument","description":"ru.surf.users.navigation.nav.impl.UsersNavScreen.ViewUserNavScreen","location":"modules/users/ru.surf.users.navigation.nav.impl/-users-nav-screen/-view-user-nav-screen.html","searchKeys":["ViewUserNavScreen","val ViewUserNavScreen: NavScreenWithArgument","ru.surf.users.navigation.nav.impl.UsersNavScreen.ViewUserNavScreen"]},{"name":"val code: Int","description":"ru.surf.users.data.responses.UserResponse.code","location":"modules/users/ru.surf.users.data.responses/-user-response/code.html","searchKeys":["code","val code: Int","ru.surf.users.data.responses.UserResponse.code"]},{"name":"val error404: StateFlow<Boolean>","description":"ru.surf.users.ui.viewModels.UsersViewModel.error404","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/error404.html","searchKeys":["error404","val error404: StateFlow<Boolean>","ru.surf.users.ui.viewModels.UsersViewModel.error404"]},{"name":"val listUsers: Flow<PagingData<UserModel>>","description":"ru.surf.users.ui.viewModels.UsersViewModel.listUsers","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/list-users.html","searchKeys":["listUsers","val listUsers: Flow<PagingData<UserModel>>","ru.surf.users.ui.viewModels.UsersViewModel.listUsers"]},{"name":"val loading: StateFlow<Boolean>","description":"ru.surf.users.ui.viewModels.UsersViewModel.loading","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/loading.html","searchKeys":["loading","val loading: StateFlow<Boolean>","ru.surf.users.ui.viewModels.UsersViewModel.loading"]},{"name":"val name: String","description":"ru.surf.users.data.models.UserModel.name","location":"modules/users/ru.surf.users.data.models/-user-model/name.html","searchKeys":["name","val name: String","ru.surf.users.data.models.UserModel.name"]},{"name":"val name: String?","description":"ru.surf.users.data.responses.UserResponse.name","location":"modules/users/ru.surf.users.data.responses/-user-response/name.html","searchKeys":["name","val name: String?","ru.surf.users.data.responses.UserResponse.name"]},{"name":"val search: StateFlow<String?>","description":"ru.surf.users.ui.viewModels.UsersViewModel.search","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/search.html","searchKeys":["search","val search: StateFlow<String?>","ru.surf.users.ui.viewModels.UsersViewModel.search"]},{"name":"val searchListUsers: Flow<PagingData<UserModel>>","description":"ru.surf.users.ui.viewModels.UsersViewModel.searchListUsers","location":"modules/users/ru.surf.users.ui.viewModels/-users-view-model/search-list-users.html","searchKeys":["searchListUsers","val searchListUsers: Flow<PagingData<UserModel>>","ru.surf.users.ui.viewModels.UsersViewModel.searchListUsers"]},{"name":"val text: String?","description":"ru.surf.users.ui.actions.ListUsersActions.Search.text","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/-search/text.html","searchKeys":["text","val text: String?","ru.surf.users.ui.actions.ListUsersActions.Search.text"]},{"name":"val userId: String","description":"ru.surf.users.ui.actions.ListUsersActions.ToViewUser.userId","location":"modules/users/ru.surf.users.ui.actions/-list-users-actions/-to-view-user/user-id.html","searchKeys":["userId","val userId: String","ru.surf.users.ui.actions.ListUsersActions.ToViewUser.userId"]},{"name":"val userId: String","description":"ru.surf.users.ui.actions.ViewUserActions.RefreshView.userId","location":"modules/users/ru.surf.users.ui.actions/-view-user-actions/-refresh-view/user-id.html","searchKeys":["userId","val userId: String","ru.surf.users.ui.actions.ViewUserActions.RefreshView.userId"]},{"name":"var key: Int? = null","description":"ru.surf.users.paging.UsersRemoteMediator.Companion.key","location":"modules/users/ru.surf.users.paging/-users-remote-mediator/-companion/key.html","searchKeys":["key","var key: Int? = null","ru.surf.users.paging.UsersRemoteMediator.Companion.key"]},{"name":"SignInEmail(EmailStateValidateRequired())","description":"ru.surf.other.ui.forms.SignInFieldsForm.SignInEmail","location":"modules/other/ru.surf.other.ui.forms/-sign-in-fields-form/-sign-in-email/index.html","searchKeys":["SignInEmail","SignInEmail(EmailStateValidateRequired())","ru.surf.other.ui.forms.SignInFieldsForm.SignInEmail"]},{"name":"SignInPassword(PasswordStateValidateRequired())","description":"ru.surf.other.ui.forms.SignInFieldsForm.SignInPassword","location":"modules/other/ru.surf.other.ui.forms/-sign-in-fields-form/-sign-in-password/index.html","searchKeys":["SignInPassword","SignInPassword(PasswordStateValidateRequired())","ru.surf.other.ui.forms.SignInFieldsForm.SignInPassword"]},{"name":"SignUpBio(FormFieldState())","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpBio","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/-sign-up-bio/index.html","searchKeys":["SignUpBio","SignUpBio(FormFieldState())","ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpBio"]},{"name":"SignUpCard(FormFieldState())","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpCard","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/-sign-up-card/index.html","searchKeys":["SignUpCard","SignUpCard(FormFieldState())","ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpCard"]},{"name":"SignUpCvc(FormFieldState())","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpCvc","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/-sign-up-cvc/index.html","searchKeys":["SignUpCvc","SignUpCvc(FormFieldState())","ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpCvc"]},{"name":"SignUpEmail(EmailStateValidateRequired())","description":"ru.surf.other.ui.forms.SignUpCredentialFieldsForm.SignUpEmail","location":"modules/other/ru.surf.other.ui.forms/-sign-up-credential-fields-form/-sign-up-email/index.html","searchKeys":["SignUpEmail","SignUpEmail(EmailStateValidateRequired())","ru.surf.other.ui.forms.SignUpCredentialFieldsForm.SignUpEmail"]},{"name":"SignUpFname(StateValidateRequired())","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpFname","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/-sign-up-fname/index.html","searchKeys":["SignUpFname","SignUpFname(StateValidateRequired())","ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpFname"]},{"name":"SignUpLname(StateValidateRequired())","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpLname","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/-sign-up-lname/index.html","searchKeys":["SignUpLname","SignUpLname(StateValidateRequired())","ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpLname"]},{"name":"SignUpPassword(PasswordStateValidateRequired())","description":"ru.surf.other.ui.forms.SignUpCredentialFieldsForm.SignUpPassword","location":"modules/other/ru.surf.other.ui.forms/-sign-up-credential-fields-form/-sign-up-password/index.html","searchKeys":["SignUpPassword","SignUpPassword(PasswordStateValidateRequired())","ru.surf.other.ui.forms.SignUpCredentialFieldsForm.SignUpPassword"]},{"name":"SignUpPhoneHome(FormFieldState())","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpPhoneHome","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/-sign-up-phone-home/index.html","searchKeys":["SignUpPhoneHome","SignUpPhoneHome(FormFieldState())","ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpPhoneHome"]},{"name":"SignUpPhoneWork(StateValidateRequired())","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpPhoneWork","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/-sign-up-phone-work/index.html","searchKeys":["SignUpPhoneWork","SignUpPhoneWork(StateValidateRequired())","ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpPhoneWork"]},{"name":"abstract override val p: SharedPreferences","description":"ru.surf.other.data.preferences.OtherPreferencesModule.p","location":"modules/other/ru.surf.other.data.preferences/-other-preferences-module/p.html","searchKeys":["p","abstract override val p: SharedPreferences","ru.surf.other.data.preferences.OtherPreferencesModule.p"]},{"name":"abstract suspend fun signIn(request: SignInRequest): Response<SignInResponse>","description":"ru.surf.other.services.api.impl.ApiPost.signIn","location":"modules/other/ru.surf.other.services.api.impl/-api-post/sign-in.html","searchKeys":["signIn","abstract suspend fun signIn(request: SignInRequest): Response<SignInResponse>","ru.surf.other.services.api.impl.ApiPost.signIn"]},{"name":"abstract suspend fun signInError(request: SignInRequest): Response<SignInResponse>","description":"ru.surf.other.services.api.impl.ApiPost.signInError","location":"modules/other/ru.surf.other.services.api.impl/-api-post/sign-in-error.html","searchKeys":["signInError","abstract suspend fun signInError(request: SignInRequest): Response<SignInResponse>","ru.surf.other.services.api.impl.ApiPost.signInError"]},{"name":"abstract suspend fun signUp(request: SignUpRequest): Response<SignUpResponse>","description":"ru.surf.other.services.api.impl.ApiPost.signUp","location":"modules/other/ru.surf.other.services.api.impl/-api-post/sign-up.html","searchKeys":["signUp","abstract suspend fun signUp(request: SignUpRequest): Response<SignUpResponse>","ru.surf.other.services.api.impl.ApiPost.signUp"]},{"name":"abstract suspend fun signUpValidate(request: SignUpValidateRequest): Response<SignUpValidateResponse>","description":"ru.surf.other.services.api.impl.ApiPost.signUpValidate","location":"modules/other/ru.surf.other.services.api.impl/-api-post/sign-up-validate.html","searchKeys":["signUpValidate","abstract suspend fun signUpValidate(request: SignUpValidateRequest): Response<SignUpValidateResponse>","ru.surf.other.services.api.impl.ApiPost.signUpValidate"]},{"name":"abstract val api: OtherApi","description":"ru.surf.other.services.apiService.impl.ApiServiceDelete.api","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-delete/api.html","searchKeys":["api","abstract val api: OtherApi","ru.surf.other.services.apiService.impl.ApiServiceDelete.api"]},{"name":"abstract val api: OtherApi","description":"ru.surf.other.services.apiService.impl.ApiServicePatch.api","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-patch/api.html","searchKeys":["api","abstract val api: OtherApi","ru.surf.other.services.apiService.impl.ApiServicePatch.api"]},{"name":"abstract val api: OtherApi","description":"ru.surf.other.services.apiService.impl.ApiServicePost.api","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-post/api.html","searchKeys":["api","abstract val api: OtherApi","ru.surf.other.services.apiService.impl.ApiServicePost.api"]},{"name":"abstract val api: OtherApi","description":"ru.surf.other.services.apiService.impl.ApiServicePut.api","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-put/api.html","searchKeys":["api","abstract val api: OtherApi","ru.surf.other.services.apiService.impl.ApiServicePut.api"]},{"name":"abstract val controller: NavHostController","description":"ru.surf.other.navigation.actions.impl.SignInScreenActions.controller","location":"modules/other/ru.surf.other.navigation.actions.impl/-sign-in-screen-actions/controller.html","searchKeys":["controller","abstract val controller: NavHostController","ru.surf.other.navigation.actions.impl.SignInScreenActions.controller"]},{"name":"abstract val controller: NavHostController","description":"ru.surf.other.navigation.actions.impl.SignUpScreenActions.controller","location":"modules/other/ru.surf.other.navigation.actions.impl/-sign-up-screen-actions/controller.html","searchKeys":["controller","abstract val controller: NavHostController","ru.surf.other.navigation.actions.impl.SignUpScreenActions.controller"]},{"name":"abstract val controller: NavHostController","description":"ru.surf.other.navigation.actions.impl.WelcomeScreenActions.controller","location":"modules/other/ru.surf.other.navigation.actions.impl/-welcome-screen-actions/controller.html","searchKeys":["controller","abstract val controller: NavHostController","ru.surf.other.navigation.actions.impl.WelcomeScreenActions.controller"]},{"name":"class OtherApiService(api: OtherApi) : ApiServiceDelete, ApiServiceGet, ApiServicePatch, ApiServicePost, ApiServicePut","description":"ru.surf.other.services.apiService.OtherApiService","location":"modules/other/ru.surf.other.services.apiService/-other-api-service/index.html","searchKeys":["OtherApiService","class OtherApiService(api: OtherApi) : ApiServiceDelete, ApiServiceGet, ApiServicePatch, ApiServicePost, ApiServicePut","ru.surf.other.services.apiService.OtherApiService"]},{"name":"class OtherPreferences(p: SharedPreferences) : OtherPreferencesModule","description":"ru.surf.other.data.preferences.OtherPreferences","location":"modules/other/ru.surf.other.data.preferences/-other-preferences/index.html","searchKeys":["OtherPreferences","class OtherPreferences(p: SharedPreferences) : OtherPreferencesModule","ru.surf.other.data.preferences.OtherPreferences"]},{"name":"class OtherViewModel constructor(apiService: OtherApiService) : ViewModel","description":"ru.surf.other.ui.viewModels.OtherViewModel","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/index.html","searchKeys":["OtherViewModel","class OtherViewModel constructor(apiService: OtherApiService) : ViewModel","ru.surf.other.ui.viewModels.OtherViewModel"]},{"name":"data class SignIn(email: String, pass: String) : SignInActions","description":"ru.surf.other.ui.actions.SignInActions.SignIn","location":"modules/other/ru.surf.other.ui.actions/-sign-in-actions/-sign-in/index.html","searchKeys":["SignIn","data class SignIn(email: String, pass: String) : SignInActions","ru.surf.other.ui.actions.SignInActions.SignIn"]},{"name":"data class SignInRequest(username: String, password: String, rememberMe: Boolean)","description":"ru.surf.other.data.requests.SignInRequest","location":"modules/other/ru.surf.other.data.requests/-sign-in-request/index.html","searchKeys":["SignInRequest","data class SignInRequest(username: String, password: String, rememberMe: Boolean)","ru.surf.other.data.requests.SignInRequest"]},{"name":"data class SignInResponse(user_id: String, token: String)","description":"ru.surf.other.data.responses.SignInResponse","location":"modules/other/ru.surf.other.data.responses/-sign-in-response/index.html","searchKeys":["SignInResponse","data class SignInResponse(user_id: String, token: String)","ru.surf.other.data.responses.SignInResponse"]},{"name":"data class SignUp(email: String, pass: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String) : SignUpActions","description":"ru.surf.other.ui.actions.SignUpActions.SignUp","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/index.html","searchKeys":["SignUp","data class SignUp(email: String, pass: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String) : SignUpActions","ru.surf.other.ui.actions.SignUpActions.SignUp"]},{"name":"data class SignUpRequest(email: String, password: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String)","description":"ru.surf.other.data.requests.SignUpRequest","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/index.html","searchKeys":["SignUpRequest","data class SignUpRequest(email: String, password: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String)","ru.surf.other.data.requests.SignUpRequest"]},{"name":"data class SignUpResponse(user_id: String, token: String)","description":"ru.surf.other.data.responses.SignUpResponse","location":"modules/other/ru.surf.other.data.responses/-sign-up-response/index.html","searchKeys":["SignUpResponse","data class SignUpResponse(user_id: String, token: String)","ru.surf.other.data.responses.SignUpResponse"]},{"name":"data class SignUpValidate(email: String) : SignUpActions","description":"ru.surf.other.ui.actions.SignUpActions.SignUpValidate","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up-validate/index.html","searchKeys":["SignUpValidate","data class SignUpValidate(email: String) : SignUpActions","ru.surf.other.ui.actions.SignUpActions.SignUpValidate"]},{"name":"data class SignUpValidateRequest(email: String)","description":"ru.surf.other.data.requests.SignUpValidateRequest","location":"modules/other/ru.surf.other.data.requests/-sign-up-validate-request/index.html","searchKeys":["SignUpValidateRequest","data class SignUpValidateRequest(email: String)","ru.surf.other.data.requests.SignUpValidateRequest"]},{"name":"data class SignUpValidateResponse(status: Boolean)","description":"ru.surf.other.data.responses.SignUpValidateResponse","location":"modules/other/ru.surf.other.data.responses/-sign-up-validate-response/index.html","searchKeys":["SignUpValidateResponse","data class SignUpValidateResponse(status: Boolean)","ru.surf.other.data.responses.SignUpValidateResponse"]},{"name":"enum SignInFieldsForm(state: FormFieldState) : Enum<SignInFieldsForm> , FormStates","description":"ru.surf.other.ui.forms.SignInFieldsForm","location":"modules/other/ru.surf.other.ui.forms/-sign-in-fields-form/index.html","searchKeys":["SignInFieldsForm","enum SignInFieldsForm(state: FormFieldState) : Enum<SignInFieldsForm> , FormStates","ru.surf.other.ui.forms.SignInFieldsForm"]},{"name":"enum SignUpCredentialFieldsForm(state: FormFieldState) : Enum<SignUpCredentialFieldsForm> , FormStates","description":"ru.surf.other.ui.forms.SignUpCredentialFieldsForm","location":"modules/other/ru.surf.other.ui.forms/-sign-up-credential-fields-form/index.html","searchKeys":["SignUpCredentialFieldsForm","enum SignUpCredentialFieldsForm(state: FormFieldState) : Enum<SignUpCredentialFieldsForm> , FormStates","ru.surf.other.ui.forms.SignUpCredentialFieldsForm"]},{"name":"enum SignUpProfileFieldsForm(state: FormFieldState) : Enum<SignUpProfileFieldsForm> , FormStates","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/index.html","searchKeys":["SignUpProfileFieldsForm","enum SignUpProfileFieldsForm(state: FormFieldState) : Enum<SignUpProfileFieldsForm> , FormStates","ru.surf.other.ui.forms.SignUpProfileFieldsForm"]},{"name":"fun NavGraphBuilder.otherNavGraph(navActions: OtherNavActions)","description":"ru.surf.other.navigation.graph.otherNavGraph","location":"modules/other/ru.surf.other.navigation.graph/other-nav-graph.html","searchKeys":["otherNavGraph","fun NavGraphBuilder.otherNavGraph(navActions: OtherNavActions)","ru.surf.other.navigation.graph.otherNavGraph"]},{"name":"fun NavGraphBuilder.signInScreenGraph(navActions: OtherNavActions)","description":"ru.surf.other.navigation.graph.impl.signInScreenGraph","location":"modules/other/ru.surf.other.navigation.graph.impl/sign-in-screen-graph.html","searchKeys":["signInScreenGraph","fun NavGraphBuilder.signInScreenGraph(navActions: OtherNavActions)","ru.surf.other.navigation.graph.impl.signInScreenGraph"]},{"name":"fun NavGraphBuilder.signUpScreenGraph(navActions: OtherNavActions)","description":"ru.surf.other.navigation.graph.impl.signUpScreenGraph","location":"modules/other/ru.surf.other.navigation.graph.impl/sign-up-screen-graph.html","searchKeys":["signUpScreenGraph","fun NavGraphBuilder.signUpScreenGraph(navActions: OtherNavActions)","ru.surf.other.navigation.graph.impl.signUpScreenGraph"]},{"name":"fun NavGraphBuilder.welcomeScreenGraph(navActions: OtherNavActions)","description":"ru.surf.other.navigation.graph.impl.welcomeScreenGraph","location":"modules/other/ru.surf.other.navigation.graph.impl/welcome-screen-graph.html","searchKeys":["welcomeScreenGraph","fun NavGraphBuilder.welcomeScreenGraph(navActions: OtherNavActions)","ru.surf.other.navigation.graph.impl.welcomeScreenGraph"]},{"name":"fun OtherApiService(api: OtherApi)","description":"ru.surf.other.services.apiService.OtherApiService.OtherApiService","location":"modules/other/ru.surf.other.services.apiService/-other-api-service/-other-api-service.html","searchKeys":["OtherApiService","fun OtherApiService(api: OtherApi)","ru.surf.other.services.apiService.OtherApiService.OtherApiService"]},{"name":"fun OtherPreferences(p: SharedPreferences)","description":"ru.surf.other.data.preferences.OtherPreferences.OtherPreferences","location":"modules/other/ru.surf.other.data.preferences/-other-preferences/-other-preferences.html","searchKeys":["OtherPreferences","fun OtherPreferences(p: SharedPreferences)","ru.surf.other.data.preferences.OtherPreferences.OtherPreferences"]},{"name":"fun OtherViewModel(apiService: OtherApiService)","description":"ru.surf.other.ui.viewModels.OtherViewModel.OtherViewModel","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/-other-view-model.html","searchKeys":["OtherViewModel","fun OtherViewModel(apiService: OtherApiService)","ru.surf.other.ui.viewModels.OtherViewModel.OtherViewModel"]},{"name":"fun SignIn(email: String, pass: String)","description":"ru.surf.other.ui.actions.SignInActions.SignIn.SignIn","location":"modules/other/ru.surf.other.ui.actions/-sign-in-actions/-sign-in/-sign-in.html","searchKeys":["SignIn","fun SignIn(email: String, pass: String)","ru.surf.other.ui.actions.SignInActions.SignIn.SignIn"]},{"name":"fun SignInBody(loading: Boolean = false, commonError: String? = null, onActions: (SignInActions) -> Unit = {}, backDispatcher: OnBackPressedDispatcher? = null)","description":"ru.surf.other.ui.screens.signIn.SignInBody","location":"modules/other/ru.surf.other.ui.screens.signIn/-sign-in-body.html","searchKeys":["SignInBody","fun SignInBody(loading: Boolean = false, commonError: String? = null, onActions: (SignInActions) -> Unit = {}, backDispatcher: OnBackPressedDispatcher? = null)","ru.surf.other.ui.screens.signIn.SignInBody"]},{"name":"fun SignInForm(loading: Boolean = false, onActions: (SignInActions) -> Unit = {})","description":"ru.surf.other.ui.screens.signIn.SignInForm","location":"modules/other/ru.surf.other.ui.screens.signIn/-sign-in-form.html","searchKeys":["SignInForm","fun SignInForm(loading: Boolean = false, onActions: (SignInActions) -> Unit = {})","ru.surf.other.ui.screens.signIn.SignInForm"]},{"name":"fun SignInRequest(username: String, password: String, rememberMe: Boolean = true)","description":"ru.surf.other.data.requests.SignInRequest.SignInRequest","location":"modules/other/ru.surf.other.data.requests/-sign-in-request/-sign-in-request.html","searchKeys":["SignInRequest","fun SignInRequest(username: String, password: String, rememberMe: Boolean = true)","ru.surf.other.data.requests.SignInRequest.SignInRequest"]},{"name":"fun SignInResponse(user_id: String, token: String)","description":"ru.surf.other.data.responses.SignInResponse.SignInResponse","location":"modules/other/ru.surf.other.data.responses/-sign-in-response/-sign-in-response.html","searchKeys":["SignInResponse","fun SignInResponse(user_id: String, token: String)","ru.surf.other.data.responses.SignInResponse.SignInResponse"]},{"name":"fun SignInScreen(viewModel: OtherViewModel, onActions: (SignInActions) -> Unit = {})","description":"ru.surf.other.ui.screens.signIn.SignInScreen","location":"modules/other/ru.surf.other.ui.screens.signIn/-sign-in-screen.html","searchKeys":["SignInScreen","fun SignInScreen(viewModel: OtherViewModel, onActions: (SignInActions) -> Unit = {})","ru.surf.other.ui.screens.signIn.SignInScreen"]},{"name":"fun SignUp(email: String, pass: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String)","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.SignUp","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/-sign-up.html","searchKeys":["SignUp","fun SignUp(email: String, pass: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String)","ru.surf.other.ui.actions.SignUpActions.SignUp.SignUp"]},{"name":"fun SignUpBody(loading: Boolean = false, commonError: String? = null, commonSuccess: Boolean? = null, onActions: (SignUpActions) -> Unit = {}, backDispatcher: OnBackPressedDispatcher? = null)","description":"ru.surf.other.ui.screens.signUp.SignUpBody","location":"modules/other/ru.surf.other.ui.screens.signUp/-sign-up-body.html","searchKeys":["SignUpBody","fun SignUpBody(loading: Boolean = false, commonError: String? = null, commonSuccess: Boolean? = null, onActions: (SignUpActions) -> Unit = {}, backDispatcher: OnBackPressedDispatcher? = null)","ru.surf.other.ui.screens.signUp.SignUpBody"]},{"name":"fun SignUpFormCredential(state: PagerState = rememberPagerState(pageCount = 0), loading: Boolean = false, commonError: String? = null, onActions: (SignUpActions) -> Unit = {}, savedData: (email: String, pass: String) -> Unit = { _, _ -> })","description":"ru.surf.other.ui.screens.signUp.SignUpFormCredential","location":"modules/other/ru.surf.other.ui.screens.signUp/-sign-up-form-credential.html","searchKeys":["SignUpFormCredential","fun SignUpFormCredential(state: PagerState = rememberPagerState(pageCount = 0), loading: Boolean = false, commonError: String? = null, onActions: (SignUpActions) -> Unit = {}, savedData: (email: String, pass: String) -> Unit = { _, _ -> })","ru.surf.other.ui.screens.signUp.SignUpFormCredential"]},{"name":"fun SignUpFormProfile(state: PagerState = rememberPagerState(pageCount = 0), loading: Boolean = false, commonError: String? = null, onActions: (SignUpActions) -> Unit = {}, dataEmail: String = \"\", dataPass: String = \"\")","description":"ru.surf.other.ui.screens.signUp.SignUpFormProfile","location":"modules/other/ru.surf.other.ui.screens.signUp/-sign-up-form-profile.html","searchKeys":["SignUpFormProfile","fun SignUpFormProfile(state: PagerState = rememberPagerState(pageCount = 0), loading: Boolean = false, commonError: String? = null, onActions: (SignUpActions) -> Unit = {}, dataEmail: String = \"\", dataPass: String = \"\")","ru.surf.other.ui.screens.signUp.SignUpFormProfile"]},{"name":"fun SignUpRequest(email: String, password: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String)","description":"ru.surf.other.data.requests.SignUpRequest.SignUpRequest","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/-sign-up-request.html","searchKeys":["SignUpRequest","fun SignUpRequest(email: String, password: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String)","ru.surf.other.data.requests.SignUpRequest.SignUpRequest"]},{"name":"fun SignUpResponse(user_id: String, token: String)","description":"ru.surf.other.data.responses.SignUpResponse.SignUpResponse","location":"modules/other/ru.surf.other.data.responses/-sign-up-response/-sign-up-response.html","searchKeys":["SignUpResponse","fun SignUpResponse(user_id: String, token: String)","ru.surf.other.data.responses.SignUpResponse.SignUpResponse"]},{"name":"fun SignUpScreen(viewModel: OtherViewModel, onActions: (SignUpActions) -> Unit = {})","description":"ru.surf.other.ui.screens.signUp.SignUpScreen","location":"modules/other/ru.surf.other.ui.screens.signUp/-sign-up-screen.html","searchKeys":["SignUpScreen","fun SignUpScreen(viewModel: OtherViewModel, onActions: (SignUpActions) -> Unit = {})","ru.surf.other.ui.screens.signUp.SignUpScreen"]},{"name":"fun SignUpValidate(email: String)","description":"ru.surf.other.ui.actions.SignUpActions.SignUpValidate.SignUpValidate","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up-validate/-sign-up-validate.html","searchKeys":["SignUpValidate","fun SignUpValidate(email: String)","ru.surf.other.ui.actions.SignUpActions.SignUpValidate.SignUpValidate"]},{"name":"fun SignUpValidateRequest(email: String)","description":"ru.surf.other.data.requests.SignUpValidateRequest.SignUpValidateRequest","location":"modules/other/ru.surf.other.data.requests/-sign-up-validate-request/-sign-up-validate-request.html","searchKeys":["SignUpValidateRequest","fun SignUpValidateRequest(email: String)","ru.surf.other.data.requests.SignUpValidateRequest.SignUpValidateRequest"]},{"name":"fun SignUpValidateResponse(status: Boolean)","description":"ru.surf.other.data.responses.SignUpValidateResponse.SignUpValidateResponse","location":"modules/other/ru.surf.other.data.responses/-sign-up-validate-response/-sign-up-validate-response.html","searchKeys":["SignUpValidateResponse","fun SignUpValidateResponse(status: Boolean)","ru.surf.other.data.responses.SignUpValidateResponse.SignUpValidateResponse"]},{"name":"fun WelcomeAnimation(modifier: Modifier = Modifier)","description":"ru.surf.other.ui.screens.welcome.WelcomeAnimation","location":"modules/other/ru.surf.other.ui.screens.welcome/-welcome-animation.html","searchKeys":["WelcomeAnimation","fun WelcomeAnimation(modifier: Modifier = Modifier)","ru.surf.other.ui.screens.welcome.WelcomeAnimation"]},{"name":"fun WelcomeBody(onActions: (WelcomeActions) -> Unit = {})","description":"ru.surf.other.ui.screens.welcome.WelcomeBody","location":"modules/other/ru.surf.other.ui.screens.welcome/-welcome-body.html","searchKeys":["WelcomeBody","fun WelcomeBody(onActions: (WelcomeActions) -> Unit = {})","ru.surf.other.ui.screens.welcome.WelcomeBody"]},{"name":"fun WelcomeScreen(viewModel: OtherViewModel, onActions: (WelcomeActions) -> Unit = {})","description":"ru.surf.other.ui.screens.welcome.WelcomeScreen","location":"modules/other/ru.surf.other.ui.screens.welcome/-welcome-screen.html","searchKeys":["WelcomeScreen","fun WelcomeScreen(viewModel: OtherViewModel, onActions: (WelcomeActions) -> Unit = {})","ru.surf.other.ui.screens.welcome.WelcomeScreen"]},{"name":"fun provideOtherApi(retrofit: Retrofit): OtherApi","description":"ru.surf.other.di.ModuleNetwork.provideOtherApi","location":"modules/other/ru.surf.other.di/-module-network/provide-other-api.html","searchKeys":["provideOtherApi","fun provideOtherApi(retrofit: Retrofit): OtherApi","ru.surf.other.di.ModuleNetwork.provideOtherApi"]},{"name":"fun provideOtherApiService(api: OtherApi): OtherApiService","description":"ru.surf.other.di.ModuleNetwork.provideOtherApiService","location":"modules/other/ru.surf.other.di/-module-network/provide-other-api-service.html","searchKeys":["provideOtherApiService","fun provideOtherApiService(api: OtherApi): OtherApiService","ru.surf.other.di.ModuleNetwork.provideOtherApiService"]},{"name":"fun provideOtherPreferences(corePreferences: CorePreferences): OtherPreferences","description":"ru.surf.other.di.ModuleDefault.provideOtherPreferences","location":"modules/other/ru.surf.other.di/-module-default/provide-other-preferences.html","searchKeys":["provideOtherPreferences","fun provideOtherPreferences(corePreferences: CorePreferences): OtherPreferences","ru.surf.other.di.ModuleDefault.provideOtherPreferences"]},{"name":"fun signIn(email: String, pass: String, success: (userId: String, token: String) -> Unit)","description":"ru.surf.other.ui.viewModels.OtherViewModel.signIn","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/sign-in.html","searchKeys":["signIn","fun signIn(email: String, pass: String, success: (userId: String, token: String) -> Unit)","ru.surf.other.ui.viewModels.OtherViewModel.signIn"]},{"name":"fun signUp(email: String, pass: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String, success: (userId: String, token: String) -> Unit)","description":"ru.surf.other.ui.viewModels.OtherViewModel.signUp","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/sign-up.html","searchKeys":["signUp","fun signUp(email: String, pass: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String, success: (userId: String, token: String) -> Unit)","ru.surf.other.ui.viewModels.OtherViewModel.signUp"]},{"name":"fun signUpValidate(email: String)","description":"ru.surf.other.ui.viewModels.OtherViewModel.signUpValidate","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/sign-up-validate.html","searchKeys":["signUpValidate","fun signUpValidate(email: String)","ru.surf.other.ui.viewModels.OtherViewModel.signUpValidate"]},{"name":"interface ApiDelete","description":"ru.surf.other.services.api.impl.ApiDelete","location":"modules/other/ru.surf.other.services.api.impl/-api-delete/index.html","searchKeys":["ApiDelete","interface ApiDelete","ru.surf.other.services.api.impl.ApiDelete"]},{"name":"interface ApiGet","description":"ru.surf.other.services.api.impl.ApiGet","location":"modules/other/ru.surf.other.services.api.impl/-api-get/index.html","searchKeys":["ApiGet","interface ApiGet","ru.surf.other.services.api.impl.ApiGet"]},{"name":"interface ApiPatch","description":"ru.surf.other.services.api.impl.ApiPatch","location":"modules/other/ru.surf.other.services.api.impl/-api-patch/index.html","searchKeys":["ApiPatch","interface ApiPatch","ru.surf.other.services.api.impl.ApiPatch"]},{"name":"interface ApiPost","description":"ru.surf.other.services.api.impl.ApiPost","location":"modules/other/ru.surf.other.services.api.impl/-api-post/index.html","searchKeys":["ApiPost","interface ApiPost","ru.surf.other.services.api.impl.ApiPost"]},{"name":"interface ApiPut","description":"ru.surf.other.services.api.impl.ApiPut","location":"modules/other/ru.surf.other.services.api.impl/-api-put/index.html","searchKeys":["ApiPut","interface ApiPut","ru.surf.other.services.api.impl.ApiPut"]},{"name":"interface ApiServiceDelete","description":"ru.surf.other.services.apiService.impl.ApiServiceDelete","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-delete/index.html","searchKeys":["ApiServiceDelete","interface ApiServiceDelete","ru.surf.other.services.apiService.impl.ApiServiceDelete"]},{"name":"interface ApiServiceGet","description":"ru.surf.other.services.apiService.impl.ApiServiceGet","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-get/index.html","searchKeys":["ApiServiceGet","interface ApiServiceGet","ru.surf.other.services.apiService.impl.ApiServiceGet"]},{"name":"interface ApiServicePatch","description":"ru.surf.other.services.apiService.impl.ApiServicePatch","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-patch/index.html","searchKeys":["ApiServicePatch","interface ApiServicePatch","ru.surf.other.services.apiService.impl.ApiServicePatch"]},{"name":"interface ApiServicePost","description":"ru.surf.other.services.apiService.impl.ApiServicePost","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-post/index.html","searchKeys":["ApiServicePost","interface ApiServicePost","ru.surf.other.services.apiService.impl.ApiServicePost"]},{"name":"interface ApiServicePut","description":"ru.surf.other.services.apiService.impl.ApiServicePut","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-put/index.html","searchKeys":["ApiServicePut","interface ApiServicePut","ru.surf.other.services.apiService.impl.ApiServicePut"]},{"name":"interface OtherApi : ApiDelete, ApiGet, ApiPatch, ApiPost, ApiPut","description":"ru.surf.other.services.api.OtherApi","location":"modules/other/ru.surf.other.services.api/-other-api/index.html","searchKeys":["OtherApi","interface OtherApi : ApiDelete, ApiGet, ApiPatch, ApiPost, ApiPut","ru.surf.other.services.api.OtherApi"]},{"name":"interface OtherNavActions : SignInScreenActions, SignUpScreenActions, WelcomeScreenActions","description":"ru.surf.other.navigation.actions.OtherNavActions","location":"modules/other/ru.surf.other.navigation.actions/-other-nav-actions/index.html","searchKeys":["OtherNavActions","interface OtherNavActions : SignInScreenActions, SignUpScreenActions, WelcomeScreenActions","ru.surf.other.navigation.actions.OtherNavActions"]},{"name":"interface OtherPreferencesModule : IAppPreferences","description":"ru.surf.other.data.preferences.OtherPreferencesModule","location":"modules/other/ru.surf.other.data.preferences/-other-preferences-module/index.html","searchKeys":["OtherPreferencesModule","interface OtherPreferencesModule : IAppPreferences","ru.surf.other.data.preferences.OtherPreferencesModule"]},{"name":"interface SignInScreenActions","description":"ru.surf.other.navigation.actions.impl.SignInScreenActions","location":"modules/other/ru.surf.other.navigation.actions.impl/-sign-in-screen-actions/index.html","searchKeys":["SignInScreenActions","interface SignInScreenActions","ru.surf.other.navigation.actions.impl.SignInScreenActions"]},{"name":"interface SignUpScreenActions","description":"ru.surf.other.navigation.actions.impl.SignUpScreenActions","location":"modules/other/ru.surf.other.navigation.actions.impl/-sign-up-screen-actions/index.html","searchKeys":["SignUpScreenActions","interface SignUpScreenActions","ru.surf.other.navigation.actions.impl.SignUpScreenActions"]},{"name":"interface WelcomeScreenActions","description":"ru.surf.other.navigation.actions.impl.WelcomeScreenActions","location":"modules/other/ru.surf.other.navigation.actions.impl/-welcome-screen-actions/index.html","searchKeys":["WelcomeScreenActions","interface WelcomeScreenActions","ru.surf.other.navigation.actions.impl.WelcomeScreenActions"]},{"name":"object ModuleDefault","description":"ru.surf.other.di.ModuleDefault","location":"modules/other/ru.surf.other.di/-module-default/index.html","searchKeys":["ModuleDefault","object ModuleDefault","ru.surf.other.di.ModuleDefault"]},{"name":"object ModuleNetwork","description":"ru.surf.other.di.ModuleNetwork","location":"modules/other/ru.surf.other.di/-module-network/index.html","searchKeys":["ModuleNetwork","object ModuleNetwork","ru.surf.other.di.ModuleNetwork"]},{"name":"object OtherNav","description":"ru.surf.other.navigation.nav.OtherNav","location":"modules/other/ru.surf.other.navigation.nav/-other-nav/index.html","searchKeys":["OtherNav","object OtherNav","ru.surf.other.navigation.nav.OtherNav"]},{"name":"object SignInNavScreen","description":"ru.surf.other.navigation.nav.impl.SignInNavScreen","location":"modules/other/ru.surf.other.navigation.nav.impl/-sign-in-nav-screen/index.html","searchKeys":["SignInNavScreen","object SignInNavScreen","ru.surf.other.navigation.nav.impl.SignInNavScreen"]},{"name":"object SignUpNavScreen","description":"ru.surf.other.navigation.nav.impl.SignUpNavScreen","location":"modules/other/ru.surf.other.navigation.nav.impl/-sign-up-nav-screen/index.html","searchKeys":["SignUpNavScreen","object SignUpNavScreen","ru.surf.other.navigation.nav.impl.SignUpNavScreen"]},{"name":"object ToSignIn : WelcomeActions","description":"ru.surf.other.ui.actions.WelcomeActions.ToSignIn","location":"modules/other/ru.surf.other.ui.actions/-welcome-actions/-to-sign-in/index.html","searchKeys":["ToSignIn","object ToSignIn : WelcomeActions","ru.surf.other.ui.actions.WelcomeActions.ToSignIn"]},{"name":"object ToSignUp : WelcomeActions","description":"ru.surf.other.ui.actions.WelcomeActions.ToSignUp","location":"modules/other/ru.surf.other.ui.actions/-welcome-actions/-to-sign-up/index.html","searchKeys":["ToSignUp","object ToSignUp : WelcomeActions","ru.surf.other.ui.actions.WelcomeActions.ToSignUp"]},{"name":"object WelcomeNavScreen","description":"ru.surf.other.navigation.nav.impl.WelcomeNavScreen","location":"modules/other/ru.surf.other.navigation.nav.impl/-welcome-nav-screen/index.html","searchKeys":["WelcomeNavScreen","object WelcomeNavScreen","ru.surf.other.navigation.nav.impl.WelcomeNavScreen"]},{"name":"open fun toSignIn()","description":"ru.surf.other.navigation.actions.impl.WelcomeScreenActions.toSignIn","location":"modules/other/ru.surf.other.navigation.actions.impl/-welcome-screen-actions/to-sign-in.html","searchKeys":["toSignIn","open fun toSignIn()","ru.surf.other.navigation.actions.impl.WelcomeScreenActions.toSignIn"]},{"name":"open fun toSignUp()","description":"ru.surf.other.navigation.actions.impl.WelcomeScreenActions.toSignUp","location":"modules/other/ru.surf.other.navigation.actions.impl/-welcome-screen-actions/to-sign-up.html","searchKeys":["toSignUp","open fun toSignUp()","ru.surf.other.navigation.actions.impl.WelcomeScreenActions.toSignUp"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.other.data.preferences.OtherPreferences.clearCacheAfterLogout","location":"modules/other/ru.surf.other.data.preferences/-other-preferences/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.other.data.preferences.OtherPreferences.clearCacheAfterLogout"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.other.data.preferences.OtherPreferencesModule.clearCacheAfterLogout","location":"modules/other/ru.surf.other.data.preferences/-other-preferences-module/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.other.data.preferences.OtherPreferencesModule.clearCacheAfterLogout"]},{"name":"open override val api: OtherApi","description":"ru.surf.other.services.apiService.OtherApiService.api","location":"modules/other/ru.surf.other.services.apiService/-other-api-service/api.html","searchKeys":["api","open override val api: OtherApi","ru.surf.other.services.apiService.OtherApiService.api"]},{"name":"open override val p: SharedPreferences","description":"ru.surf.other.data.preferences.OtherPreferences.p","location":"modules/other/ru.surf.other.data.preferences/-other-preferences/p.html","searchKeys":["p","open override val p: SharedPreferences","ru.surf.other.data.preferences.OtherPreferences.p"]},{"name":"open suspend fun signIn(email: String, pass: String): ResponseResult<SignInResponse>","description":"ru.surf.other.services.apiService.impl.ApiServicePost.signIn","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-post/sign-in.html","searchKeys":["signIn","open suspend fun signIn(email: String, pass: String): ResponseResult<SignInResponse>","ru.surf.other.services.apiService.impl.ApiServicePost.signIn"]},{"name":"open suspend fun signUp(email: String, pass: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String): ResponseResult<SignUpResponse>","description":"ru.surf.other.services.apiService.impl.ApiServicePost.signUp","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-post/sign-up.html","searchKeys":["signUp","open suspend fun signUp(email: String, pass: String, fname: String, lname: String, phoneWork: String, phoneHome: String, card: String, cvc: String, bio: String): ResponseResult<SignUpResponse>","ru.surf.other.services.apiService.impl.ApiServicePost.signUp"]},{"name":"open suspend fun signUpValidate(email: String): ResponseResult<SignUpValidateResponse>","description":"ru.surf.other.services.apiService.impl.ApiServicePost.signUpValidate","location":"modules/other/ru.surf.other.services.apiService.impl/-api-service-post/sign-up-validate.html","searchKeys":["signUpValidate","open suspend fun signUpValidate(email: String): ResponseResult<SignUpValidateResponse>","ru.surf.other.services.apiService.impl.ApiServicePost.signUpValidate"]},{"name":"private fun Preview()","description":"ru.surf.other.ui.screens.signIn.Preview","location":"modules/other/ru.surf.other.ui.screens.signIn/-preview.html","searchKeys":["Preview","private fun Preview()","ru.surf.other.ui.screens.signIn.Preview"]},{"name":"private fun Preview()","description":"ru.surf.other.ui.screens.signUp.Preview","location":"modules/other/ru.surf.other.ui.screens.signUp/-preview.html","searchKeys":["Preview","private fun Preview()","ru.surf.other.ui.screens.signUp.Preview"]},{"name":"private fun Preview()","description":"ru.surf.other.ui.screens.welcome.Preview","location":"modules/other/ru.surf.other.ui.screens.welcome/-preview.html","searchKeys":["Preview","private fun Preview()","ru.surf.other.ui.screens.welcome.Preview"]},{"name":"private fun SignInFieldsForm(state: FormFieldState)","description":"ru.surf.other.ui.forms.SignInFieldsForm.SignInFieldsForm","location":"modules/other/ru.surf.other.ui.forms/-sign-in-fields-form/-sign-in-fields-form.html","searchKeys":["SignInFieldsForm","private fun SignInFieldsForm(state: FormFieldState)","ru.surf.other.ui.forms.SignInFieldsForm.SignInFieldsForm"]},{"name":"private fun SignUpCredentialFieldsForm(state: FormFieldState)","description":"ru.surf.other.ui.forms.SignUpCredentialFieldsForm.SignUpCredentialFieldsForm","location":"modules/other/ru.surf.other.ui.forms/-sign-up-credential-fields-form/-sign-up-credential-fields-form.html","searchKeys":["SignUpCredentialFieldsForm","private fun SignUpCredentialFieldsForm(state: FormFieldState)","ru.surf.other.ui.forms.SignUpCredentialFieldsForm.SignUpCredentialFieldsForm"]},{"name":"private fun SignUpForm(state: PagerState, dataEmail: String = \"\", dataPass: String = \"\", loading: Boolean = false, onActions: (SignUpActions) -> Unit = {})","description":"ru.surf.other.ui.screens.signUp.SignUpForm","location":"modules/other/ru.surf.other.ui.screens.signUp/-sign-up-form.html","searchKeys":["SignUpForm","private fun SignUpForm(state: PagerState, dataEmail: String = \"\", dataPass: String = \"\", loading: Boolean = false, onActions: (SignUpActions) -> Unit = {})","ru.surf.other.ui.screens.signUp.SignUpForm"]},{"name":"private fun SignUpForm(state: PagerState, loading: Boolean = false, onActions: (SignUpActions) -> Unit = {}, savedData: (email: String, pass: String) -> Unit = { _, _ -> })","description":"ru.surf.other.ui.screens.signUp.SignUpForm","location":"modules/other/ru.surf.other.ui.screens.signUp/-sign-up-form.html","searchKeys":["SignUpForm","private fun SignUpForm(state: PagerState, loading: Boolean = false, onActions: (SignUpActions) -> Unit = {}, savedData: (email: String, pass: String) -> Unit = { _, _ -> })","ru.surf.other.ui.screens.signUp.SignUpForm"]},{"name":"private fun SignUpProfileFieldsForm(state: FormFieldState)","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpProfileFieldsForm","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/-sign-up-profile-fields-form.html","searchKeys":["SignUpProfileFieldsForm","private fun SignUpProfileFieldsForm(state: FormFieldState)","ru.surf.other.ui.forms.SignUpProfileFieldsForm.SignUpProfileFieldsForm"]},{"name":"private fun startQuery()","description":"ru.surf.other.ui.viewModels.OtherViewModel.startQuery","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/start-query.html","searchKeys":["startQuery","private fun startQuery()","ru.surf.other.ui.viewModels.OtherViewModel.startQuery"]},{"name":"private val _commonError: MutableStateFlow<String?>","description":"ru.surf.other.ui.viewModels.OtherViewModel._commonError","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/_common-error.html","searchKeys":["_commonError","private val _commonError: MutableStateFlow<String?>","ru.surf.other.ui.viewModels.OtherViewModel._commonError"]},{"name":"private val _commonSuccess: MutableStateFlow<Boolean?>","description":"ru.surf.other.ui.viewModels.OtherViewModel._commonSuccess","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/_common-success.html","searchKeys":["_commonSuccess","private val _commonSuccess: MutableStateFlow<Boolean?>","ru.surf.other.ui.viewModels.OtherViewModel._commonSuccess"]},{"name":"private val _loading: MutableStateFlow<Boolean>","description":"ru.surf.other.ui.viewModels.OtherViewModel._loading","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/_loading.html","searchKeys":["_loading","private val _loading: MutableStateFlow<Boolean>","ru.surf.other.ui.viewModels.OtherViewModel._loading"]},{"name":"private val apiService: OtherApiService","description":"ru.surf.other.ui.viewModels.OtherViewModel.apiService","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/api-service.html","searchKeys":["apiService","private val apiService: OtherApiService","ru.surf.other.ui.viewModels.OtherViewModel.apiService"]},{"name":"protected fun SignInActions()","description":"ru.surf.other.ui.actions.SignInActions.SignInActions","location":"modules/other/ru.surf.other.ui.actions/-sign-in-actions/-sign-in-actions.html","searchKeys":["SignInActions","protected fun SignInActions()","ru.surf.other.ui.actions.SignInActions.SignInActions"]},{"name":"protected fun SignUpActions()","description":"ru.surf.other.ui.actions.SignUpActions.SignUpActions","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up-actions.html","searchKeys":["SignUpActions","protected fun SignUpActions()","ru.surf.other.ui.actions.SignUpActions.SignUpActions"]},{"name":"protected fun WelcomeActions()","description":"ru.surf.other.ui.actions.WelcomeActions.WelcomeActions","location":"modules/other/ru.surf.other.ui.actions/-welcome-actions/-welcome-actions.html","searchKeys":["WelcomeActions","protected fun WelcomeActions()","ru.surf.other.ui.actions.WelcomeActions.WelcomeActions"]},{"name":"sealed class SignInActions","description":"ru.surf.other.ui.actions.SignInActions","location":"modules/other/ru.surf.other.ui.actions/-sign-in-actions/index.html","searchKeys":["SignInActions","sealed class SignInActions","ru.surf.other.ui.actions.SignInActions"]},{"name":"sealed class SignUpActions","description":"ru.surf.other.ui.actions.SignUpActions","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/index.html","searchKeys":["SignUpActions","sealed class SignUpActions","ru.surf.other.ui.actions.SignUpActions"]},{"name":"sealed class WelcomeActions","description":"ru.surf.other.ui.actions.WelcomeActions","location":"modules/other/ru.surf.other.ui.actions/-welcome-actions/index.html","searchKeys":["WelcomeActions","sealed class WelcomeActions","ru.surf.other.ui.actions.WelcomeActions"]},{"name":"val SignInNav: SignInNavScreen","description":"ru.surf.other.navigation.nav.OtherNav.SignInNav","location":"modules/other/ru.surf.other.navigation.nav/-other-nav/-sign-in-nav.html","searchKeys":["SignInNav","val SignInNav: SignInNavScreen","ru.surf.other.navigation.nav.OtherNav.SignInNav"]},{"name":"val SignInNavScreen: NavScreen","description":"ru.surf.other.navigation.nav.impl.SignInNavScreen.SignInNavScreen","location":"modules/other/ru.surf.other.navigation.nav.impl/-sign-in-nav-screen/-sign-in-nav-screen.html","searchKeys":["SignInNavScreen","val SignInNavScreen: NavScreen","ru.surf.other.navigation.nav.impl.SignInNavScreen.SignInNavScreen"]},{"name":"val SignUpNav: SignUpNavScreen","description":"ru.surf.other.navigation.nav.OtherNav.SignUpNav","location":"modules/other/ru.surf.other.navigation.nav/-other-nav/-sign-up-nav.html","searchKeys":["SignUpNav","val SignUpNav: SignUpNavScreen","ru.surf.other.navigation.nav.OtherNav.SignUpNav"]},{"name":"val SignUpNavScreen: NavScreen","description":"ru.surf.other.navigation.nav.impl.SignUpNavScreen.SignUpNavScreen","location":"modules/other/ru.surf.other.navigation.nav.impl/-sign-up-nav-screen/-sign-up-nav-screen.html","searchKeys":["SignUpNavScreen","val SignUpNavScreen: NavScreen","ru.surf.other.navigation.nav.impl.SignUpNavScreen.SignUpNavScreen"]},{"name":"val WelcomeNav: WelcomeNavScreen","description":"ru.surf.other.navigation.nav.OtherNav.WelcomeNav","location":"modules/other/ru.surf.other.navigation.nav/-other-nav/-welcome-nav.html","searchKeys":["WelcomeNav","val WelcomeNav: WelcomeNavScreen","ru.surf.other.navigation.nav.OtherNav.WelcomeNav"]},{"name":"val WelcomeNavScreen: NavScreen","description":"ru.surf.other.navigation.nav.impl.WelcomeNavScreen.WelcomeNavScreen","location":"modules/other/ru.surf.other.navigation.nav.impl/-welcome-nav-screen/-welcome-nav-screen.html","searchKeys":["WelcomeNavScreen","val WelcomeNavScreen: NavScreen","ru.surf.other.navigation.nav.impl.WelcomeNavScreen.WelcomeNavScreen"]},{"name":"val bio: String","description":"ru.surf.other.data.requests.SignUpRequest.bio","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/bio.html","searchKeys":["bio","val bio: String","ru.surf.other.data.requests.SignUpRequest.bio"]},{"name":"val bio: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.bio","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/bio.html","searchKeys":["bio","val bio: String","ru.surf.other.ui.actions.SignUpActions.SignUp.bio"]},{"name":"val card: String","description":"ru.surf.other.data.requests.SignUpRequest.card","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/card.html","searchKeys":["card","val card: String","ru.surf.other.data.requests.SignUpRequest.card"]},{"name":"val card: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.card","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/card.html","searchKeys":["card","val card: String","ru.surf.other.ui.actions.SignUpActions.SignUp.card"]},{"name":"val commonError: StateFlow<String?>","description":"ru.surf.other.ui.viewModels.OtherViewModel.commonError","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/common-error.html","searchKeys":["commonError","val commonError: StateFlow<String?>","ru.surf.other.ui.viewModels.OtherViewModel.commonError"]},{"name":"val commonSuccess: StateFlow<Boolean?>","description":"ru.surf.other.ui.viewModels.OtherViewModel.commonSuccess","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/common-success.html","searchKeys":["commonSuccess","val commonSuccess: StateFlow<Boolean?>","ru.surf.other.ui.viewModels.OtherViewModel.commonSuccess"]},{"name":"val cvc: String","description":"ru.surf.other.data.requests.SignUpRequest.cvc","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/cvc.html","searchKeys":["cvc","val cvc: String","ru.surf.other.data.requests.SignUpRequest.cvc"]},{"name":"val cvc: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.cvc","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/cvc.html","searchKeys":["cvc","val cvc: String","ru.surf.other.ui.actions.SignUpActions.SignUp.cvc"]},{"name":"val email: String","description":"ru.surf.other.data.requests.SignUpRequest.email","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/email.html","searchKeys":["email","val email: String","ru.surf.other.data.requests.SignUpRequest.email"]},{"name":"val email: String","description":"ru.surf.other.data.requests.SignUpValidateRequest.email","location":"modules/other/ru.surf.other.data.requests/-sign-up-validate-request/email.html","searchKeys":["email","val email: String","ru.surf.other.data.requests.SignUpValidateRequest.email"]},{"name":"val email: String","description":"ru.surf.other.ui.actions.SignInActions.SignIn.email","location":"modules/other/ru.surf.other.ui.actions/-sign-in-actions/-sign-in/email.html","searchKeys":["email","val email: String","ru.surf.other.ui.actions.SignInActions.SignIn.email"]},{"name":"val email: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.email","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/email.html","searchKeys":["email","val email: String","ru.surf.other.ui.actions.SignUpActions.SignUp.email"]},{"name":"val email: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUpValidate.email","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up-validate/email.html","searchKeys":["email","val email: String","ru.surf.other.ui.actions.SignUpActions.SignUpValidate.email"]},{"name":"val fname: String","description":"ru.surf.other.data.requests.SignUpRequest.fname","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/fname.html","searchKeys":["fname","val fname: String","ru.surf.other.data.requests.SignUpRequest.fname"]},{"name":"val fname: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.fname","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/fname.html","searchKeys":["fname","val fname: String","ru.surf.other.ui.actions.SignUpActions.SignUp.fname"]},{"name":"val lname: String","description":"ru.surf.other.data.requests.SignUpRequest.lname","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/lname.html","searchKeys":["lname","val lname: String","ru.surf.other.data.requests.SignUpRequest.lname"]},{"name":"val lname: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.lname","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/lname.html","searchKeys":["lname","val lname: String","ru.surf.other.ui.actions.SignUpActions.SignUp.lname"]},{"name":"val loading: StateFlow<Boolean>","description":"ru.surf.other.ui.viewModels.OtherViewModel.loading","location":"modules/other/ru.surf.other.ui.viewModels/-other-view-model/loading.html","searchKeys":["loading","val loading: StateFlow<Boolean>","ru.surf.other.ui.viewModels.OtherViewModel.loading"]},{"name":"val pass: String","description":"ru.surf.other.ui.actions.SignInActions.SignIn.pass","location":"modules/other/ru.surf.other.ui.actions/-sign-in-actions/-sign-in/pass.html","searchKeys":["pass","val pass: String","ru.surf.other.ui.actions.SignInActions.SignIn.pass"]},{"name":"val pass: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.pass","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/pass.html","searchKeys":["pass","val pass: String","ru.surf.other.ui.actions.SignUpActions.SignUp.pass"]},{"name":"val password: String","description":"ru.surf.other.data.requests.SignInRequest.password","location":"modules/other/ru.surf.other.data.requests/-sign-in-request/password.html","searchKeys":["password","val password: String","ru.surf.other.data.requests.SignInRequest.password"]},{"name":"val password: String","description":"ru.surf.other.data.requests.SignUpRequest.password","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/password.html","searchKeys":["password","val password: String","ru.surf.other.data.requests.SignUpRequest.password"]},{"name":"val phoneHome: String","description":"ru.surf.other.data.requests.SignUpRequest.phoneHome","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/phone-home.html","searchKeys":["phoneHome","val phoneHome: String","ru.surf.other.data.requests.SignUpRequest.phoneHome"]},{"name":"val phoneHome: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.phoneHome","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/phone-home.html","searchKeys":["phoneHome","val phoneHome: String","ru.surf.other.ui.actions.SignUpActions.SignUp.phoneHome"]},{"name":"val phoneWork: String","description":"ru.surf.other.data.requests.SignUpRequest.phoneWork","location":"modules/other/ru.surf.other.data.requests/-sign-up-request/phone-work.html","searchKeys":["phoneWork","val phoneWork: String","ru.surf.other.data.requests.SignUpRequest.phoneWork"]},{"name":"val phoneWork: String","description":"ru.surf.other.ui.actions.SignUpActions.SignUp.phoneWork","location":"modules/other/ru.surf.other.ui.actions/-sign-up-actions/-sign-up/phone-work.html","searchKeys":["phoneWork","val phoneWork: String","ru.surf.other.ui.actions.SignUpActions.SignUp.phoneWork"]},{"name":"val rememberMe: Boolean = true","description":"ru.surf.other.data.requests.SignInRequest.rememberMe","location":"modules/other/ru.surf.other.data.requests/-sign-in-request/remember-me.html","searchKeys":["rememberMe","val rememberMe: Boolean = true","ru.surf.other.data.requests.SignInRequest.rememberMe"]},{"name":"val state: FormFieldState","description":"ru.surf.other.ui.forms.SignInFieldsForm.state","location":"modules/other/ru.surf.other.ui.forms/-sign-in-fields-form/state.html","searchKeys":["state","val state: FormFieldState","ru.surf.other.ui.forms.SignInFieldsForm.state"]},{"name":"val state: FormFieldState","description":"ru.surf.other.ui.forms.SignUpCredentialFieldsForm.state","location":"modules/other/ru.surf.other.ui.forms/-sign-up-credential-fields-form/state.html","searchKeys":["state","val state: FormFieldState","ru.surf.other.ui.forms.SignUpCredentialFieldsForm.state"]},{"name":"val state: FormFieldState","description":"ru.surf.other.ui.forms.SignUpProfileFieldsForm.state","location":"modules/other/ru.surf.other.ui.forms/-sign-up-profile-fields-form/state.html","searchKeys":["state","val state: FormFieldState","ru.surf.other.ui.forms.SignUpProfileFieldsForm.state"]},{"name":"val status: Boolean","description":"ru.surf.other.data.responses.SignUpValidateResponse.status","location":"modules/other/ru.surf.other.data.responses/-sign-up-validate-response/status.html","searchKeys":["status","val status: Boolean","ru.surf.other.data.responses.SignUpValidateResponse.status"]},{"name":"val token: String","description":"ru.surf.other.data.responses.SignInResponse.token","location":"modules/other/ru.surf.other.data.responses/-sign-in-response/token.html","searchKeys":["token","val token: String","ru.surf.other.data.responses.SignInResponse.token"]},{"name":"val token: String","description":"ru.surf.other.data.responses.SignUpResponse.token","location":"modules/other/ru.surf.other.data.responses/-sign-up-response/token.html","searchKeys":["token","val token: String","ru.surf.other.data.responses.SignUpResponse.token"]},{"name":"val user_id: String","description":"ru.surf.other.data.responses.SignInResponse.user_id","location":"modules/other/ru.surf.other.data.responses/-sign-in-response/user_id.html","searchKeys":["user_id","val user_id: String","ru.surf.other.data.responses.SignInResponse.user_id"]},{"name":"val user_id: String","description":"ru.surf.other.data.responses.SignUpResponse.user_id","location":"modules/other/ru.surf.other.data.responses/-sign-up-response/user_id.html","searchKeys":["user_id","val user_id: String","ru.surf.other.data.responses.SignUpResponse.user_id"]},{"name":"val username: String","description":"ru.surf.other.data.requests.SignInRequest.username","location":"modules/other/ru.surf.other.data.requests/-sign-in-request/username.html","searchKeys":["username","val username: String","ru.surf.other.data.requests.SignInRequest.username"]},{"name":"abstract val api: SettingsApi","description":"ru.surf.settings.services.apiService.impl.ApiServiceDelete.api","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-delete/api.html","searchKeys":["api","abstract val api: SettingsApi","ru.surf.settings.services.apiService.impl.ApiServiceDelete.api"]},{"name":"abstract val api: SettingsApi","description":"ru.surf.settings.services.apiService.impl.ApiServiceGet.api","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-get/api.html","searchKeys":["api","abstract val api: SettingsApi","ru.surf.settings.services.apiService.impl.ApiServiceGet.api"]},{"name":"abstract val api: SettingsApi","description":"ru.surf.settings.services.apiService.impl.ApiServicePatch.api","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-patch/api.html","searchKeys":["api","abstract val api: SettingsApi","ru.surf.settings.services.apiService.impl.ApiServicePatch.api"]},{"name":"abstract val api: SettingsApi","description":"ru.surf.settings.services.apiService.impl.ApiServicePost.api","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-post/api.html","searchKeys":["api","abstract val api: SettingsApi","ru.surf.settings.services.apiService.impl.ApiServicePost.api"]},{"name":"abstract val api: SettingsApi","description":"ru.surf.settings.services.apiService.impl.ApiServicePut.api","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-put/api.html","searchKeys":["api","abstract val api: SettingsApi","ru.surf.settings.services.apiService.impl.ApiServicePut.api"]},{"name":"abstract val controller: NavHostController","description":"ru.surf.settings.navigation.actions.impl.SettingsScreenActions.controller","location":"modules/settings/ru.surf.settings.navigation.actions.impl/-settings-screen-actions/controller.html","searchKeys":["controller","abstract val controller: NavHostController","ru.surf.settings.navigation.actions.impl.SettingsScreenActions.controller"]},{"name":"class SettingsApiService(api: SettingsApi) : ApiServiceDelete, ApiServiceGet, ApiServicePatch, ApiServicePost, ApiServicePut","description":"ru.surf.settings.services.apiService.SettingsApiService","location":"modules/settings/ru.surf.settings.services.apiService/-settings-api-service/index.html","searchKeys":["SettingsApiService","class SettingsApiService(api: SettingsApi) : ApiServiceDelete, ApiServiceGet, ApiServicePatch, ApiServicePost, ApiServicePut","ru.surf.settings.services.apiService.SettingsApiService"]},{"name":"class SettingsPreferences(p: SharedPreferences) : IAppPreferences","description":"ru.surf.settings.data.preferences.SettingsPreferences","location":"modules/settings/ru.surf.settings.data.preferences/-settings-preferences/index.html","searchKeys":["SettingsPreferences","class SettingsPreferences(p: SharedPreferences) : IAppPreferences","ru.surf.settings.data.preferences.SettingsPreferences"]},{"name":"class SettingsViewModel constructor(apiService: SettingsApiService, preferences: SettingsPreferences) : ViewModel","description":"ru.surf.settings.ui.viewModels.SettingsViewModel","location":"modules/settings/ru.surf.settings.ui.viewModels/-settings-view-model/index.html","searchKeys":["SettingsViewModel","class SettingsViewModel constructor(apiService: SettingsApiService, preferences: SettingsPreferences) : ViewModel","ru.surf.settings.ui.viewModels.SettingsViewModel"]},{"name":"fun NavGraphBuilder.settingsNavGraph(scaffoldState: ScaffoldState, navActions: SettingsNavActions)","description":"ru.surf.settings.navigation.graph.settingsNavGraph","location":"modules/settings/ru.surf.settings.navigation.graph/settings-nav-graph.html","searchKeys":["settingsNavGraph","fun NavGraphBuilder.settingsNavGraph(scaffoldState: ScaffoldState, navActions: SettingsNavActions)","ru.surf.settings.navigation.graph.settingsNavGraph"]},{"name":"fun NavGraphBuilder.settingsScreenGraph(scaffoldState: ScaffoldState, navActions: SettingsNavActions)","description":"ru.surf.settings.navigation.graph.impl.settingsScreenGraph","location":"modules/settings/ru.surf.settings.navigation.graph.impl/settings-screen-graph.html","searchKeys":["settingsScreenGraph","fun NavGraphBuilder.settingsScreenGraph(scaffoldState: ScaffoldState, navActions: SettingsNavActions)","ru.surf.settings.navigation.graph.impl.settingsScreenGraph"]},{"name":"fun SettingsApiService(api: SettingsApi)","description":"ru.surf.settings.services.apiService.SettingsApiService.SettingsApiService","location":"modules/settings/ru.surf.settings.services.apiService/-settings-api-service/-settings-api-service.html","searchKeys":["SettingsApiService","fun SettingsApiService(api: SettingsApi)","ru.surf.settings.services.apiService.SettingsApiService.SettingsApiService"]},{"name":"fun SettingsBody(loading: Boolean = false, onActions: (SettingsActions) -> Unit = {})","description":"ru.surf.settings.ui.screens.settings.SettingsBody","location":"modules/settings/ru.surf.settings.ui.screens.settings/-settings-body.html","searchKeys":["SettingsBody","fun SettingsBody(loading: Boolean = false, onActions: (SettingsActions) -> Unit = {})","ru.surf.settings.ui.screens.settings.SettingsBody"]},{"name":"fun SettingsItem(text: String, onClick: () -> Unit = {})","description":"ru.surf.settings.ui.screens.settings.SettingsItem","location":"modules/settings/ru.surf.settings.ui.screens.settings/-settings-item.html","searchKeys":["SettingsItem","fun SettingsItem(text: String, onClick: () -> Unit = {})","ru.surf.settings.ui.screens.settings.SettingsItem"]},{"name":"fun SettingsPreferences(p: SharedPreferences)","description":"ru.surf.settings.data.preferences.SettingsPreferences.SettingsPreferences","location":"modules/settings/ru.surf.settings.data.preferences/-settings-preferences/-settings-preferences.html","searchKeys":["SettingsPreferences","fun SettingsPreferences(p: SharedPreferences)","ru.surf.settings.data.preferences.SettingsPreferences.SettingsPreferences"]},{"name":"fun SettingsScreen(viewModel: SettingsViewModel, onActions: (SettingsActions) -> Unit = {})","description":"ru.surf.settings.ui.screens.settings.SettingsScreen","location":"modules/settings/ru.surf.settings.ui.screens.settings/-settings-screen.html","searchKeys":["SettingsScreen","fun SettingsScreen(viewModel: SettingsViewModel, onActions: (SettingsActions) -> Unit = {})","ru.surf.settings.ui.screens.settings.SettingsScreen"]},{"name":"fun SettingsSwitch(text: String, checked: Boolean = false, onCheckedChange: (Boolean) -> Unit = {})","description":"ru.surf.settings.ui.screens.settings.SettingsSwitch","location":"modules/settings/ru.surf.settings.ui.screens.settings/-settings-switch.html","searchKeys":["SettingsSwitch","fun SettingsSwitch(text: String, checked: Boolean = false, onCheckedChange: (Boolean) -> Unit = {})","ru.surf.settings.ui.screens.settings.SettingsSwitch"]},{"name":"fun SettingsViewModel(apiService: SettingsApiService, preferences: SettingsPreferences)","description":"ru.surf.settings.ui.viewModels.SettingsViewModel.SettingsViewModel","location":"modules/settings/ru.surf.settings.ui.viewModels/-settings-view-model/-settings-view-model.html","searchKeys":["SettingsViewModel","fun SettingsViewModel(apiService: SettingsApiService, preferences: SettingsPreferences)","ru.surf.settings.ui.viewModels.SettingsViewModel.SettingsViewModel"]},{"name":"fun provideSettingsApi(retrofit: Retrofit): SettingsApi","description":"ru.surf.settings.di.ModuleNetwork.provideSettingsApi","location":"modules/settings/ru.surf.settings.di/-module-network/provide-settings-api.html","searchKeys":["provideSettingsApi","fun provideSettingsApi(retrofit: Retrofit): SettingsApi","ru.surf.settings.di.ModuleNetwork.provideSettingsApi"]},{"name":"fun provideSettingsApiService(api: SettingsApi): SettingsApiService","description":"ru.surf.settings.di.ModuleNetwork.provideSettingsApiService","location":"modules/settings/ru.surf.settings.di/-module-network/provide-settings-api-service.html","searchKeys":["provideSettingsApiService","fun provideSettingsApiService(api: SettingsApi): SettingsApiService","ru.surf.settings.di.ModuleNetwork.provideSettingsApiService"]},{"name":"fun provideSettingsPreferences(corePreferences: CorePreferences): SettingsPreferences","description":"ru.surf.settings.di.ModuleDefault.provideSettingsPreferences","location":"modules/settings/ru.surf.settings.di/-module-default/provide-settings-preferences.html","searchKeys":["provideSettingsPreferences","fun provideSettingsPreferences(corePreferences: CorePreferences): SettingsPreferences","ru.surf.settings.di.ModuleDefault.provideSettingsPreferences"]},{"name":"fun updateSettings()","description":"ru.surf.settings.ui.viewModels.SettingsViewModel.updateSettings","location":"modules/settings/ru.surf.settings.ui.viewModels/-settings-view-model/update-settings.html","searchKeys":["updateSettings","fun updateSettings()","ru.surf.settings.ui.viewModels.SettingsViewModel.updateSettings"]},{"name":"interface ApiDelete","description":"ru.surf.settings.services.api.impl.ApiDelete","location":"modules/settings/ru.surf.settings.services.api.impl/-api-delete/index.html","searchKeys":["ApiDelete","interface ApiDelete","ru.surf.settings.services.api.impl.ApiDelete"]},{"name":"interface ApiGet","description":"ru.surf.settings.services.api.impl.ApiGet","location":"modules/settings/ru.surf.settings.services.api.impl/-api-get/index.html","searchKeys":["ApiGet","interface ApiGet","ru.surf.settings.services.api.impl.ApiGet"]},{"name":"interface ApiPatch","description":"ru.surf.settings.services.api.impl.ApiPatch","location":"modules/settings/ru.surf.settings.services.api.impl/-api-patch/index.html","searchKeys":["ApiPatch","interface ApiPatch","ru.surf.settings.services.api.impl.ApiPatch"]},{"name":"interface ApiPost","description":"ru.surf.settings.services.api.impl.ApiPost","location":"modules/settings/ru.surf.settings.services.api.impl/-api-post/index.html","searchKeys":["ApiPost","interface ApiPost","ru.surf.settings.services.api.impl.ApiPost"]},{"name":"interface ApiPut","description":"ru.surf.settings.services.api.impl.ApiPut","location":"modules/settings/ru.surf.settings.services.api.impl/-api-put/index.html","searchKeys":["ApiPut","interface ApiPut","ru.surf.settings.services.api.impl.ApiPut"]},{"name":"interface ApiServiceDelete","description":"ru.surf.settings.services.apiService.impl.ApiServiceDelete","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-delete/index.html","searchKeys":["ApiServiceDelete","interface ApiServiceDelete","ru.surf.settings.services.apiService.impl.ApiServiceDelete"]},{"name":"interface ApiServiceGet","description":"ru.surf.settings.services.apiService.impl.ApiServiceGet","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-get/index.html","searchKeys":["ApiServiceGet","interface ApiServiceGet","ru.surf.settings.services.apiService.impl.ApiServiceGet"]},{"name":"interface ApiServicePatch","description":"ru.surf.settings.services.apiService.impl.ApiServicePatch","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-patch/index.html","searchKeys":["ApiServicePatch","interface ApiServicePatch","ru.surf.settings.services.apiService.impl.ApiServicePatch"]},{"name":"interface ApiServicePost","description":"ru.surf.settings.services.apiService.impl.ApiServicePost","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-post/index.html","searchKeys":["ApiServicePost","interface ApiServicePost","ru.surf.settings.services.apiService.impl.ApiServicePost"]},{"name":"interface ApiServicePut","description":"ru.surf.settings.services.apiService.impl.ApiServicePut","location":"modules/settings/ru.surf.settings.services.apiService.impl/-api-service-put/index.html","searchKeys":["ApiServicePut","interface ApiServicePut","ru.surf.settings.services.apiService.impl.ApiServicePut"]},{"name":"interface SettingsApi : ApiDelete, ApiGet, ApiPatch, ApiPost, ApiPut","description":"ru.surf.settings.services.api.SettingsApi","location":"modules/settings/ru.surf.settings.services.api/-settings-api/index.html","searchKeys":["SettingsApi","interface SettingsApi : ApiDelete, ApiGet, ApiPatch, ApiPost, ApiPut","ru.surf.settings.services.api.SettingsApi"]},{"name":"interface SettingsNavActions : SettingsScreenActions","description":"ru.surf.settings.navigation.actions.SettingsNavActions","location":"modules/settings/ru.surf.settings.navigation.actions/-settings-nav-actions/index.html","searchKeys":["SettingsNavActions","interface SettingsNavActions : SettingsScreenActions","ru.surf.settings.navigation.actions.SettingsNavActions"]},{"name":"interface SettingsScreenActions","description":"ru.surf.settings.navigation.actions.impl.SettingsScreenActions","location":"modules/settings/ru.surf.settings.navigation.actions.impl/-settings-screen-actions/index.html","searchKeys":["SettingsScreenActions","interface SettingsScreenActions","ru.surf.settings.navigation.actions.impl.SettingsScreenActions"]},{"name":"object ModuleDefault","description":"ru.surf.settings.di.ModuleDefault","location":"modules/settings/ru.surf.settings.di/-module-default/index.html","searchKeys":["ModuleDefault","object ModuleDefault","ru.surf.settings.di.ModuleDefault"]},{"name":"object ModuleNetwork","description":"ru.surf.settings.di.ModuleNetwork","location":"modules/settings/ru.surf.settings.di/-module-network/index.html","searchKeys":["ModuleNetwork","object ModuleNetwork","ru.surf.settings.di.ModuleNetwork"]},{"name":"object OpenMenu : SettingsActions","description":"ru.surf.settings.ui.actions.SettingsActions.OpenMenu","location":"modules/settings/ru.surf.settings.ui.actions/-settings-actions/-open-menu/index.html","searchKeys":["OpenMenu","object OpenMenu : SettingsActions","ru.surf.settings.ui.actions.SettingsActions.OpenMenu"]},{"name":"object SettingsNav","description":"ru.surf.settings.navigation.nav.SettingsNav","location":"modules/settings/ru.surf.settings.navigation.nav/-settings-nav/index.html","searchKeys":["SettingsNav","object SettingsNav","ru.surf.settings.navigation.nav.SettingsNav"]},{"name":"object SettingsScreen","description":"ru.surf.settings.navigation.nav.impl.SettingsScreen","location":"modules/settings/ru.surf.settings.navigation.nav.impl/-settings-screen/index.html","searchKeys":["SettingsScreen","object SettingsScreen","ru.surf.settings.navigation.nav.impl.SettingsScreen"]},{"name":"object UpdateSettings : SettingsActions","description":"ru.surf.settings.ui.actions.SettingsActions.UpdateSettings","location":"modules/settings/ru.surf.settings.ui.actions/-settings-actions/-update-settings/index.html","searchKeys":["UpdateSettings","object UpdateSettings : SettingsActions","ru.surf.settings.ui.actions.SettingsActions.UpdateSettings"]},{"name":"open fun toSettings()","description":"ru.surf.settings.navigation.actions.impl.SettingsScreenActions.toSettings","location":"modules/settings/ru.surf.settings.navigation.actions.impl/-settings-screen-actions/to-settings.html","searchKeys":["toSettings","open fun toSettings()","ru.surf.settings.navigation.actions.impl.SettingsScreenActions.toSettings"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.settings.data.preferences.SettingsPreferences.clearCacheAfterLogout","location":"modules/settings/ru.surf.settings.data.preferences/-settings-preferences/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.settings.data.preferences.SettingsPreferences.clearCacheAfterLogout"]},{"name":"open override val api: SettingsApi","description":"ru.surf.settings.services.apiService.SettingsApiService.api","location":"modules/settings/ru.surf.settings.services.apiService/-settings-api-service/api.html","searchKeys":["api","open override val api: SettingsApi","ru.surf.settings.services.apiService.SettingsApiService.api"]},{"name":"open override val p: SharedPreferences","description":"ru.surf.settings.data.preferences.SettingsPreferences.p","location":"modules/settings/ru.surf.settings.data.preferences/-settings-preferences/p.html","searchKeys":["p","open override val p: SharedPreferences","ru.surf.settings.data.preferences.SettingsPreferences.p"]},{"name":"private fun Preview()","description":"ru.surf.settings.ui.screens.settings.Preview","location":"modules/settings/ru.surf.settings.ui.screens.settings/-preview.html","searchKeys":["Preview","private fun Preview()","ru.surf.settings.ui.screens.settings.Preview"]},{"name":"private val _loading: MutableStateFlow<Boolean>","description":"ru.surf.settings.ui.viewModels.SettingsViewModel._loading","location":"modules/settings/ru.surf.settings.ui.viewModels/-settings-view-model/_loading.html","searchKeys":["_loading","private val _loading: MutableStateFlow<Boolean>","ru.surf.settings.ui.viewModels.SettingsViewModel._loading"]},{"name":"private val apiService: SettingsApiService","description":"ru.surf.settings.ui.viewModels.SettingsViewModel.apiService","location":"modules/settings/ru.surf.settings.ui.viewModels/-settings-view-model/api-service.html","searchKeys":["apiService","private val apiService: SettingsApiService","ru.surf.settings.ui.viewModels.SettingsViewModel.apiService"]},{"name":"private val preferences: SettingsPreferences","description":"ru.surf.settings.ui.viewModels.SettingsViewModel.preferences","location":"modules/settings/ru.surf.settings.ui.viewModels/-settings-view-model/preferences.html","searchKeys":["preferences","private val preferences: SettingsPreferences","ru.surf.settings.ui.viewModels.SettingsViewModel.preferences"]},{"name":"protected fun SettingsActions()","description":"ru.surf.settings.ui.actions.SettingsActions.SettingsActions","location":"modules/settings/ru.surf.settings.ui.actions/-settings-actions/-settings-actions.html","searchKeys":["SettingsActions","protected fun SettingsActions()","ru.surf.settings.ui.actions.SettingsActions.SettingsActions"]},{"name":"sealed class SettingsActions","description":"ru.surf.settings.ui.actions.SettingsActions","location":"modules/settings/ru.surf.settings.ui.actions/-settings-actions/index.html","searchKeys":["SettingsActions","sealed class SettingsActions","ru.surf.settings.ui.actions.SettingsActions"]},{"name":"val MainNav: SettingsScreen","description":"ru.surf.settings.navigation.nav.SettingsNav.MainNav","location":"modules/settings/ru.surf.settings.navigation.nav/-settings-nav/-main-nav.html","searchKeys":["MainNav","val MainNav: SettingsScreen","ru.surf.settings.navigation.nav.SettingsNav.MainNav"]},{"name":"val SettingsNavScreen: NavScreen","description":"ru.surf.settings.navigation.nav.impl.SettingsScreen.SettingsNavScreen","location":"modules/settings/ru.surf.settings.navigation.nav.impl/-settings-screen/-settings-nav-screen.html","searchKeys":["SettingsNavScreen","val SettingsNavScreen: NavScreen","ru.surf.settings.navigation.nav.impl.SettingsScreen.SettingsNavScreen"]},{"name":"val loading: StateFlow<Boolean>","description":"ru.surf.settings.ui.viewModels.SettingsViewModel.loading","location":"modules/settings/ru.surf.settings.ui.viewModels/-settings-view-model/loading.html","searchKeys":["loading","val loading: StateFlow<Boolean>","ru.surf.settings.ui.viewModels.SettingsViewModel.loading"]},{"name":"abstract class CoreDatabase : RoomDatabase","description":"ru.surf.core.base.CoreDatabase","location":"modules/core/ru.surf.core.base/-core-database/index.html","searchKeys":["CoreDatabase","abstract class CoreDatabase : RoomDatabase","ru.surf.core.base.CoreDatabase"]},{"name":"abstract class CoreSecurityDatabase : RoomDatabase","description":"ru.surf.core.base.CoreSecurityDatabase","location":"modules/core/ru.surf.core.base/-core-security-database/index.html","searchKeys":["CoreSecurityDatabase","abstract class CoreSecurityDatabase : RoomDatabase","ru.surf.core.base.CoreSecurityDatabase"]},{"name":"abstract fun clearCacheAfterLogout()","description":"ru.surf.core.interfaces.IAppDatabase.clearCacheAfterLogout","location":"modules/core/ru.surf.core.interfaces/-i-app-database/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","abstract fun clearCacheAfterLogout()","ru.surf.core.interfaces.IAppDatabase.clearCacheAfterLogout"]},{"name":"abstract fun clearCacheAfterLogout()","description":"ru.surf.core.interfaces.IAppPreferences.clearCacheAfterLogout","location":"modules/core/ru.surf.core.interfaces/-i-app-preferences/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","abstract fun clearCacheAfterLogout()","ru.surf.core.interfaces.IAppPreferences.clearCacheAfterLogout"]},{"name":"abstract fun count(): Int","description":"ru.surf.core.data.dao.SecurityModelDao.count","location":"modules/core/ru.surf.core.data.dao/-security-model-dao/count.html","searchKeys":["count","abstract fun count(): Int","ru.surf.core.data.dao.SecurityModelDao.count"]},{"name":"abstract fun getModel(): Flow<SecurityModel?>","description":"ru.surf.core.data.dao.SecurityModelDao.getModel","location":"modules/core/ru.surf.core.data.dao/-security-model-dao/get-model.html","searchKeys":["getModel","abstract fun getModel(): Flow<SecurityModel?>","ru.surf.core.data.dao.SecurityModelDao.getModel"]},{"name":"abstract fun getModels(): Flow<List<SettingsModel>>","description":"ru.surf.core.data.dao.SettingsModelDao.getModels","location":"modules/core/ru.surf.core.data.dao/-settings-model-dao/get-models.html","searchKeys":["getModels","abstract fun getModels(): Flow<List<SettingsModel>>","ru.surf.core.data.dao.SettingsModelDao.getModels"]},{"name":"abstract fun securityModelDao(): SecurityModelDao","description":"ru.surf.core.base.CoreSecurityDatabase.securityModelDao","location":"modules/core/ru.surf.core.base/-core-security-database/security-model-dao.html","searchKeys":["securityModelDao","abstract fun securityModelDao(): SecurityModelDao","ru.surf.core.base.CoreSecurityDatabase.securityModelDao"]},{"name":"abstract fun settingsModelDao(): SettingsModelDao","description":"ru.surf.core.base.CoreDatabase.settingsModelDao","location":"modules/core/ru.surf.core.base/-core-database/settings-model-dao.html","searchKeys":["settingsModelDao","abstract fun settingsModelDao(): SettingsModelDao","ru.surf.core.base.CoreDatabase.settingsModelDao"]},{"name":"abstract override val db: CoreDatabase","description":"ru.surf.core.services.dataService.impl.SettingsModelDataService.db","location":"modules/core/ru.surf.core.services.dataService.impl/-settings-model-data-service/db.html","searchKeys":["db","abstract override val db: CoreDatabase","ru.surf.core.services.dataService.impl.SettingsModelDataService.db"]},{"name":"abstract suspend fun clear()","description":"ru.surf.core.data.dao.SecurityModelDao.clear","location":"modules/core/ru.surf.core.data.dao/-security-model-dao/clear.html","searchKeys":["clear","abstract suspend fun clear()","ru.surf.core.data.dao.SecurityModelDao.clear"]},{"name":"abstract suspend fun clear()","description":"ru.surf.core.data.dao.SettingsModelDao.clear","location":"modules/core/ru.surf.core.data.dao/-settings-model-dao/clear.html","searchKeys":["clear","abstract suspend fun clear()","ru.surf.core.data.dao.SettingsModelDao.clear"]},{"name":"abstract suspend fun getListSettings(): Response<List<SettingsResponse>>","description":"ru.surf.core.services.api.impl.ApiGet.getListSettings","location":"modules/core/ru.surf.core.services.api.impl/-api-get/get-list-settings.html","searchKeys":["getListSettings","abstract suspend fun getListSettings(): Response<List<SettingsResponse>>","ru.surf.core.services.api.impl.ApiGet.getListSettings"]},{"name":"abstract suspend fun insertModels(vararg models: SecurityModel)","description":"ru.surf.core.data.dao.SecurityModelDao.insertModels","location":"modules/core/ru.surf.core.data.dao/-security-model-dao/insert-models.html","searchKeys":["insertModels","abstract suspend fun insertModels(vararg models: SecurityModel)","ru.surf.core.data.dao.SecurityModelDao.insertModels"]},{"name":"abstract suspend fun insertModels(vararg models: SettingsModel)","description":"ru.surf.core.data.dao.SettingsModelDao.insertModels","location":"modules/core/ru.surf.core.data.dao/-settings-model-dao/insert-models.html","searchKeys":["insertModels","abstract suspend fun insertModels(vararg models: SettingsModel)","ru.surf.core.data.dao.SettingsModelDao.insertModels"]},{"name":"abstract val api: CoreApi","description":"ru.surf.core.services.apiService.impl.ApiServiceDelete.api","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-delete/api.html","searchKeys":["api","abstract val api: CoreApi","ru.surf.core.services.apiService.impl.ApiServiceDelete.api"]},{"name":"abstract val api: CoreApi","description":"ru.surf.core.services.apiService.impl.ApiServiceGet.api","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-get/api.html","searchKeys":["api","abstract val api: CoreApi","ru.surf.core.services.apiService.impl.ApiServiceGet.api"]},{"name":"abstract val api: CoreApi","description":"ru.surf.core.services.apiService.impl.ApiServicePatch.api","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-patch/api.html","searchKeys":["api","abstract val api: CoreApi","ru.surf.core.services.apiService.impl.ApiServicePatch.api"]},{"name":"abstract val api: CoreApi","description":"ru.surf.core.services.apiService.impl.ApiServicePost.api","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-post/api.html","searchKeys":["api","abstract val api: CoreApi","ru.surf.core.services.apiService.impl.ApiServicePost.api"]},{"name":"abstract val api: CoreApi","description":"ru.surf.core.services.apiService.impl.ApiServicePut.api","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-put/api.html","searchKeys":["api","abstract val api: CoreApi","ru.surf.core.services.apiService.impl.ApiServicePut.api"]},{"name":"abstract val controller: NavHostController","description":"ru.surf.core.navigation.actions.impl.StatusActions.controller","location":"modules/core/ru.surf.core.navigation.actions.impl/-status-actions/controller.html","searchKeys":["controller","abstract val controller: NavHostController","ru.surf.core.navigation.actions.impl.StatusActions.controller"]},{"name":"abstract val db: RoomDatabase","description":"ru.surf.core.interfaces.IAppDatabase.db","location":"modules/core/ru.surf.core.interfaces/-i-app-database/db.html","searchKeys":["db","abstract val db: RoomDatabase","ru.surf.core.interfaces.IAppDatabase.db"]},{"name":"abstract val dbSecurity: CoreSecurityDatabase","description":"ru.surf.core.services.dataService.impl.SecurityModelDataService.dbSecurity","location":"modules/core/ru.surf.core.services.dataService.impl/-security-model-data-service/db-security.html","searchKeys":["dbSecurity","abstract val dbSecurity: CoreSecurityDatabase","ru.surf.core.services.dataService.impl.SecurityModelDataService.dbSecurity"]},{"name":"abstract val id: String","description":"ru.surf.core.interfaces.IModel.id","location":"modules/core/ru.surf.core.interfaces/-i-model/id.html","searchKeys":["id","abstract val id: String","ru.surf.core.interfaces.IModel.id"]},{"name":"abstract val id: String","description":"ru.surf.core.interfaces.IModelRelation.id","location":"modules/core/ru.surf.core.interfaces/-i-model-relation/id.html","searchKeys":["id","abstract val id: String","ru.surf.core.interfaces.IModelRelation.id"]},{"name":"abstract val ownerId: String","description":"ru.surf.core.interfaces.IModelRelation.ownerId","location":"modules/core/ru.surf.core.interfaces/-i-model-relation/owner-id.html","searchKeys":["ownerId","abstract val ownerId: String","ru.surf.core.interfaces.IModelRelation.ownerId"]},{"name":"abstract val p: SharedPreferences","description":"ru.surf.core.interfaces.IAppPreferences.p","location":"modules/core/ru.surf.core.interfaces/-i-app-preferences/p.html","searchKeys":["p","abstract val p: SharedPreferences","ru.surf.core.interfaces.IAppPreferences.p"]},{"name":"annotation class CoreDatabaseQualifier","description":"ru.surf.core.base.CoreDatabaseQualifier","location":"modules/core/ru.surf.core.base/-core-database-qualifier/index.html","searchKeys":["CoreDatabaseQualifier","annotation class CoreDatabaseQualifier","ru.surf.core.base.CoreDatabaseQualifier"]},{"name":"annotation class CoreDatabaseSecurityQualifier","description":"ru.surf.core.base.CoreDatabaseSecurityQualifier","location":"modules/core/ru.surf.core.base/-core-database-security-qualifier/index.html","searchKeys":["CoreDatabaseSecurityQualifier","annotation class CoreDatabaseSecurityQualifier","ru.surf.core.base.CoreDatabaseSecurityQualifier"]},{"name":"class ColorsCustom(link: Color, linkAction: Color, isLight: Boolean)","description":"ru.surf.core.base.ColorsCustom","location":"modules/core/ru.surf.core.base/-colors-custom/index.html","searchKeys":["ColorsCustom","class ColorsCustom(link: Color, linkAction: Color, isLight: Boolean)","ru.surf.core.base.ColorsCustom"]},{"name":"class CoreApiService(api: CoreApi) : ApiServiceDelete, ApiServiceGet, ApiServicePatch, ApiServicePost, ApiServicePut","description":"ru.surf.core.services.apiService.CoreApiService","location":"modules/core/ru.surf.core.services.apiService/-core-api-service/index.html","searchKeys":["CoreApiService","class CoreApiService(api: CoreApi) : ApiServiceDelete, ApiServiceGet, ApiServicePatch, ApiServicePost, ApiServicePut","ru.surf.core.services.apiService.CoreApiService"]},{"name":"class CoreDataService(db: CoreDatabase, dbSecurity: CoreSecurityDatabase) : SecurityModelDataService, SettingsModelDataService","description":"ru.surf.core.services.dataService.CoreDataService","location":"modules/core/ru.surf.core.services.dataService/-core-data-service/index.html","searchKeys":["CoreDataService","class CoreDataService(db: CoreDatabase, dbSecurity: CoreSecurityDatabase) : SecurityModelDataService, SettingsModelDataService","ru.surf.core.services.dataService.CoreDataService"]},{"name":"class CorePreferences(p: SharedPreferences) : IAppPreferences","description":"ru.surf.core.data.preferences.CorePreferences","location":"modules/core/ru.surf.core.data.preferences/-core-preferences/index.html","searchKeys":["CorePreferences","class CorePreferences(p: SharedPreferences) : IAppPreferences","ru.surf.core.data.preferences.CorePreferences"]},{"name":"class CrashlyticsInitializer : Initializer<Unit> ","description":"ru.surf.core.initializer.CrashlyticsInitializer","location":"modules/core/ru.surf.core.initializer/-crashlytics-initializer/index.html","searchKeys":["CrashlyticsInitializer","class CrashlyticsInitializer : Initializer<Unit> ","ru.surf.core.initializer.CrashlyticsInitializer"]},{"name":"class MainViewModel constructor(apiService: CoreApiService, dataService: CoreDataService, dataServices: Set<IAppDatabase>, preferences: Set<IAppPreferences>) : ViewModel","description":"ru.surf.core.base.MainViewModel","location":"modules/core/ru.surf.core.base/-main-view-model/index.html","searchKeys":["MainViewModel","class MainViewModel constructor(apiService: CoreApiService, dataService: CoreDataService, dataServices: Set<IAppDatabase>, preferences: Set<IAppPreferences>) : ViewModel","ru.surf.core.base.MainViewModel"]},{"name":"class ModifierInitializer : Initializer<Unit> ","description":"ru.surf.core.initializer.ModifierInitializer","location":"modules/core/ru.surf.core.initializer/-modifier-initializer/index.html","searchKeys":["ModifierInitializer","class ModifierInitializer : Initializer<Unit> ","ru.surf.core.initializer.ModifierInitializer"]},{"name":"class PasswordStateValidateRequired : FormFieldState","description":"ru.surf.core.forms.validate.PasswordStateValidateRequired","location":"modules/core/ru.surf.core.forms.validate/-password-state-validate-required/index.html","searchKeys":["PasswordStateValidateRequired","class PasswordStateValidateRequired : FormFieldState","ru.surf.core.forms.validate.PasswordStateValidateRequired"]},{"name":"class ShapesCustom(listItem: CornerBasedShape)","description":"ru.surf.core.base.ShapesCustom","location":"modules/core/ru.surf.core.base/-shapes-custom/index.html","searchKeys":["ShapesCustom","class ShapesCustom(listItem: CornerBasedShape)","ru.surf.core.base.ShapesCustom"]},{"name":"class StateValidateRequired : FormFieldState","description":"ru.surf.core.forms.validate.StateValidateRequired","location":"modules/core/ru.surf.core.forms.validate/-state-validate-required/index.html","searchKeys":["StateValidateRequired","class StateValidateRequired : FormFieldState","ru.surf.core.forms.validate.StateValidateRequired"]},{"name":"class TimberInitializer : Initializer<Unit> ","description":"ru.surf.core.initializer.TimberInitializer","location":"modules/core/ru.surf.core.initializer/-timber-initializer/index.html","searchKeys":["TimberInitializer","class TimberInitializer : Initializer<Unit> ","ru.surf.core.initializer.TimberInitializer"]},{"name":"class TryExecuteWithResponse","description":"ru.surf.core.base.TryExecuteWithResponse","location":"modules/core/ru.surf.core.base/-try-execute-with-response/index.html","searchKeys":["TryExecuteWithResponse","class TryExecuteWithResponse","ru.surf.core.base.TryExecuteWithResponse"]},{"name":"class TypographyCustom(title: TextStyle)","description":"ru.surf.core.base.TypographyCustom","location":"modules/core/ru.surf.core.base/-typography-custom/index.html","searchKeys":["TypographyCustom","class TypographyCustom(title: TextStyle)","ru.surf.core.base.TypographyCustom"]},{"name":"const val API_URL: String","description":"ru.surf.core.utils.ConstantsApp.API_URL","location":"modules/core/ru.surf.core.utils/-constants-app/-a-p-i_-u-r-l.html","searchKeys":["API_URL","const val API_URL: String","ru.surf.core.utils.ConstantsApp.API_URL"]},{"name":"const val DEBUG_DELAY: Long = 1000L","description":"ru.surf.core.utils.ConstantsApp.DEBUG_DELAY","location":"modules/core/ru.surf.core.utils/-constants-app/-d-e-b-u-g_-d-e-l-a-y.html","searchKeys":["DEBUG_DELAY","const val DEBUG_DELAY: Long = 1000L","ru.surf.core.utils.ConstantsApp.DEBUG_DELAY"]},{"name":"const val MAX_PAGE_SIZE: Int = 100","description":"ru.surf.core.utils.ConstantsPaging.MAX_PAGE_SIZE","location":"modules/core/ru.surf.core.utils/-constants-paging/-m-a-x_-p-a-g-e_-s-i-z-e.html","searchKeys":["MAX_PAGE_SIZE","const val MAX_PAGE_SIZE: Int = 100","ru.surf.core.utils.ConstantsPaging.MAX_PAGE_SIZE"]},{"name":"const val PAGE_LIMIT: Int = 5","description":"ru.surf.core.utils.ConstantsPaging.PAGE_LIMIT","location":"modules/core/ru.surf.core.utils/-constants-paging/-p-a-g-e_-l-i-m-i-t.html","searchKeys":["PAGE_LIMIT","const val PAGE_LIMIT: Int = 5","ru.surf.core.utils.ConstantsPaging.PAGE_LIMIT"]},{"name":"data class SecurityModel(id: String, token: String) : IModel","description":"ru.surf.core.data.models.SecurityModel","location":"modules/core/ru.surf.core.data.models/-security-model/index.html","searchKeys":["SecurityModel","data class SecurityModel(id: String, token: String) : IModel","ru.surf.core.data.models.SecurityModel"]},{"name":"data class SettingsModel(id: String, value: String) : IModel","description":"ru.surf.core.data.models.SettingsModel","location":"modules/core/ru.surf.core.data.models/-settings-model/index.html","searchKeys":["SettingsModel","data class SettingsModel(id: String, value: String) : IModel","ru.surf.core.data.models.SettingsModel"]},{"name":"data class SettingsResponse(key: String, value: String)","description":"ru.surf.core.data.responses.SettingsResponse","location":"modules/core/ru.surf.core.data.responses/-settings-response/index.html","searchKeys":["SettingsResponse","data class SettingsResponse(key: String, value: String)","ru.surf.core.data.responses.SettingsResponse"]},{"name":"fun AppSwipeRefreshIndicator(state: SwipeRefreshState, refreshTrigger: Dp)","description":"ru.surf.core.compose.AppSwipeRefreshIndicator","location":"modules/core/ru.surf.core.compose/-app-swipe-refresh-indicator.html","searchKeys":["AppSwipeRefreshIndicator","fun AppSwipeRefreshIndicator(state: SwipeRefreshState, refreshTrigger: Dp)","ru.surf.core.compose.AppSwipeRefreshIndicator"]},{"name":"fun BoxTextFieldError(modifier: Modifier = Modifier, textError: String = \"Box Text Field Error Preview, Box Text Field Error Preview, Box Text Field Error Preview, Box Text Field Error Preview,Box Text Field Error Preview\")","description":"ru.surf.core.compose.BoxTextFieldError","location":"modules/core/ru.surf.core.compose/-box-text-field-error.html","searchKeys":["BoxTextFieldError","fun BoxTextFieldError(modifier: Modifier = Modifier, textError: String = \"Box Text Field Error Preview, Box Text Field Error Preview, Box Text Field Error Preview, Box Text Field Error Preview,Box Text Field Error Preview\")","ru.surf.core.compose.BoxTextFieldError"]},{"name":"fun ColorsCustom(link: Color, linkAction: Color, isLight: Boolean)","description":"ru.surf.core.base.ColorsCustom.ColorsCustom","location":"modules/core/ru.surf.core.base/-colors-custom/-colors-custom.html","searchKeys":["ColorsCustom","fun ColorsCustom(link: Color, linkAction: Color, isLight: Boolean)","ru.surf.core.base.ColorsCustom.ColorsCustom"]},{"name":"fun CoreApiService(api: CoreApi)","description":"ru.surf.core.services.apiService.CoreApiService.CoreApiService","location":"modules/core/ru.surf.core.services.apiService/-core-api-service/-core-api-service.html","searchKeys":["CoreApiService","fun CoreApiService(api: CoreApi)","ru.surf.core.services.apiService.CoreApiService.CoreApiService"]},{"name":"fun CoreDataService(db: CoreDatabase, dbSecurity: CoreSecurityDatabase)","description":"ru.surf.core.services.dataService.CoreDataService.CoreDataService","location":"modules/core/ru.surf.core.services.dataService/-core-data-service/-core-data-service.html","searchKeys":["CoreDataService","fun CoreDataService(db: CoreDatabase, dbSecurity: CoreSecurityDatabase)","ru.surf.core.services.dataService.CoreDataService.CoreDataService"]},{"name":"fun CoreDatabase()","description":"ru.surf.core.base.CoreDatabase.CoreDatabase","location":"modules/core/ru.surf.core.base/-core-database/-core-database.html","searchKeys":["CoreDatabase","fun CoreDatabase()","ru.surf.core.base.CoreDatabase.CoreDatabase"]},{"name":"fun CoreDatabaseQualifier()","description":"ru.surf.core.base.CoreDatabaseQualifier.CoreDatabaseQualifier","location":"modules/core/ru.surf.core.base/-core-database-qualifier/-core-database-qualifier.html","searchKeys":["CoreDatabaseQualifier","fun CoreDatabaseQualifier()","ru.surf.core.base.CoreDatabaseQualifier.CoreDatabaseQualifier"]},{"name":"fun CoreDatabaseSecurityQualifier()","description":"ru.surf.core.base.CoreDatabaseSecurityQualifier.CoreDatabaseSecurityQualifier","location":"modules/core/ru.surf.core.base/-core-database-security-qualifier/-core-database-security-qualifier.html","searchKeys":["CoreDatabaseSecurityQualifier","fun CoreDatabaseSecurityQualifier()","ru.surf.core.base.CoreDatabaseSecurityQualifier.CoreDatabaseSecurityQualifier"]},{"name":"fun CorePreferences(p: SharedPreferences)","description":"ru.surf.core.data.preferences.CorePreferences.CorePreferences","location":"modules/core/ru.surf.core.data.preferences/-core-preferences/-core-preferences.html","searchKeys":["CorePreferences","fun CorePreferences(p: SharedPreferences)","ru.surf.core.data.preferences.CorePreferences.CorePreferences"]},{"name":"fun CoreSecurityDatabase()","description":"ru.surf.core.base.CoreSecurityDatabase.CoreSecurityDatabase","location":"modules/core/ru.surf.core.base/-core-security-database/-core-security-database.html","searchKeys":["CoreSecurityDatabase","fun CoreSecurityDatabase()","ru.surf.core.base.CoreSecurityDatabase.CoreSecurityDatabase"]},{"name":"fun CrashlyticsInitializer()","description":"ru.surf.core.initializer.CrashlyticsInitializer.CrashlyticsInitializer","location":"modules/core/ru.surf.core.initializer/-crashlytics-initializer/-crashlytics-initializer.html","searchKeys":["CrashlyticsInitializer","fun CrashlyticsInitializer()","ru.surf.core.initializer.CrashlyticsInitializer.CrashlyticsInitializer"]},{"name":"fun EmptyPage(modifier: Modifier = Modifier)","description":"ru.surf.core.compose.EmptyPage","location":"modules/core/ru.surf.core.compose/-empty-page.html","searchKeys":["EmptyPage","fun EmptyPage(modifier: Modifier = Modifier)","ru.surf.core.compose.EmptyPage"]},{"name":"fun EmptyPageAnimation(modifier: Modifier = Modifier)","description":"ru.surf.core.compose.EmptyPageAnimation","location":"modules/core/ru.surf.core.compose/-empty-page-animation.html","searchKeys":["EmptyPageAnimation","fun EmptyPageAnimation(modifier: Modifier = Modifier)","ru.surf.core.compose.EmptyPageAnimation"]},{"name":"fun List<SettingsResponse>.toModels(): List<SettingsModel>","description":"ru.surf.core.data.mappers.toModels","location":"modules/core/ru.surf.core.data.mappers/to-models.html","searchKeys":["toModels","fun List<SettingsResponse>.toModels(): List<SettingsModel>","ru.surf.core.data.mappers.toModels"]},{"name":"fun Loader(modifier: Modifier = Modifier)","description":"ru.surf.core.compose.Loader","location":"modules/core/ru.surf.core.compose/-loader.html","searchKeys":["Loader","fun Loader(modifier: Modifier = Modifier)","ru.surf.core.compose.Loader"]},{"name":"fun LoaderPage(modifier: Modifier = Modifier)","description":"ru.surf.core.compose.LoaderPage","location":"modules/core/ru.surf.core.compose/-loader-page.html","searchKeys":["LoaderPage","fun LoaderPage(modifier: Modifier = Modifier)","ru.surf.core.compose.LoaderPage"]},{"name":"fun LoaderPageAnimation(modifier: Modifier = Modifier)","description":"ru.surf.core.compose.LoaderPageAnimation","location":"modules/core/ru.surf.core.compose/-loader-page-animation.html","searchKeys":["LoaderPageAnimation","fun LoaderPageAnimation(modifier: Modifier = Modifier)","ru.surf.core.compose.LoaderPageAnimation"]},{"name":"fun MainAppTheme(content: () -> Unit)","description":"ru.surf.core.theme.MainAppTheme","location":"modules/core/ru.surf.core.theme/-main-app-theme.html","searchKeys":["MainAppTheme","fun MainAppTheme(content: () -> Unit)","ru.surf.core.theme.MainAppTheme"]},{"name":"fun MainViewModel(apiService: CoreApiService, dataService: CoreDataService, dataServices: Set<IAppDatabase>, preferences: Set<IAppPreferences>)","description":"ru.surf.core.base.MainViewModel.MainViewModel","location":"modules/core/ru.surf.core.base/-main-view-model/-main-view-model.html","searchKeys":["MainViewModel","fun MainViewModel(apiService: CoreApiService, dataService: CoreDataService, dataServices: Set<IAppDatabase>, preferences: Set<IAppPreferences>)","ru.surf.core.base.MainViewModel.MainViewModel"]},{"name":"fun MaterialThemeCustom(colors: ColorsCustom = LocalMaterialThemeCustom.colors!!, typography: TypographyCustom = TypographyCustom.default.invoke(), shapes: ShapesCustom = ShapesCustom.default)","description":"ru.surf.core.base.MaterialThemeCustom","location":"modules/core/ru.surf.core.base/-material-theme-custom.html","searchKeys":["MaterialThemeCustom","fun MaterialThemeCustom(colors: ColorsCustom = LocalMaterialThemeCustom.colors!!, typography: TypographyCustom = TypographyCustom.default.invoke(), shapes: ShapesCustom = ShapesCustom.default)","ru.surf.core.base.MaterialThemeCustom"]},{"name":"fun ModifierInitializer()","description":"ru.surf.core.initializer.ModifierInitializer.ModifierInitializer","location":"modules/core/ru.surf.core.initializer/-modifier-initializer/-modifier-initializer.html","searchKeys":["ModifierInitializer","fun ModifierInitializer()","ru.surf.core.initializer.ModifierInitializer.ModifierInitializer"]},{"name":"fun NavGraphBuilder.mainNavGraph(navActions: CoreNavActions)","description":"ru.surf.core.navigation.graph.mainNavGraph","location":"modules/core/ru.surf.core.navigation.graph/main-nav-graph.html","searchKeys":["mainNavGraph","fun NavGraphBuilder.mainNavGraph(navActions: CoreNavActions)","ru.surf.core.navigation.graph.mainNavGraph"]},{"name":"fun NavGraphBuilder.statusScreenGraph(navActions: CoreNavActions)","description":"ru.surf.core.navigation.graph.impl.statusScreenGraph","location":"modules/core/ru.surf.core.navigation.graph.impl/status-screen-graph.html","searchKeys":["statusScreenGraph","fun NavGraphBuilder.statusScreenGraph(navActions: CoreNavActions)","ru.surf.core.navigation.graph.impl.statusScreenGraph"]},{"name":"fun OnBackPressedDispatcher.EmitByStatus(status: Boolean, emit: () -> Unit)","description":"ru.surf.core.extension.EmitByStatus","location":"modules/core/ru.surf.core.extension/-emit-by-status.html","searchKeys":["EmitByStatus","fun OnBackPressedDispatcher.EmitByStatus(status: Boolean, emit: () -> Unit)","ru.surf.core.extension.EmitByStatus"]},{"name":"fun PageNotFound(modifier: Modifier = Modifier)","description":"ru.surf.core.compose.PageNotFound","location":"modules/core/ru.surf.core.compose/-page-not-found.html","searchKeys":["PageNotFound","fun PageNotFound(modifier: Modifier = Modifier)","ru.surf.core.compose.PageNotFound"]},{"name":"fun PageNotFoundAnimation(modifier: Modifier = Modifier)","description":"ru.surf.core.compose.PageNotFoundAnimation","location":"modules/core/ru.surf.core.compose/-page-not-found-animation.html","searchKeys":["PageNotFoundAnimation","fun PageNotFoundAnimation(modifier: Modifier = Modifier)","ru.surf.core.compose.PageNotFoundAnimation"]},{"name":"fun PasswordStateValidateRequired()","description":"ru.surf.core.forms.validate.PasswordStateValidateRequired.PasswordStateValidateRequired","location":"modules/core/ru.surf.core.forms.validate/-password-state-validate-required/-password-state-validate-required.html","searchKeys":["PasswordStateValidateRequired","fun PasswordStateValidateRequired()","ru.surf.core.forms.validate.PasswordStateValidateRequired.PasswordStateValidateRequired"]},{"name":"fun SecurityModel(id: String = \"last\", token: String = \"\")","description":"ru.surf.core.data.models.SecurityModel.SecurityModel","location":"modules/core/ru.surf.core.data.models/-security-model/-security-model.html","searchKeys":["SecurityModel","fun SecurityModel(id: String = \"last\", token: String = \"\")","ru.surf.core.data.models.SecurityModel.SecurityModel"]},{"name":"fun SettingsModel(id: String, value: String = \"\")","description":"ru.surf.core.data.models.SettingsModel.SettingsModel","location":"modules/core/ru.surf.core.data.models/-settings-model/-settings-model.html","searchKeys":["SettingsModel","fun SettingsModel(id: String, value: String = \"\")","ru.surf.core.data.models.SettingsModel.SettingsModel"]},{"name":"fun SettingsResponse(key: String, value: String)","description":"ru.surf.core.data.responses.SettingsResponse.SettingsResponse","location":"modules/core/ru.surf.core.data.responses/-settings-response/-settings-response.html","searchKeys":["SettingsResponse","fun SettingsResponse(key: String, value: String)","ru.surf.core.data.responses.SettingsResponse.SettingsResponse"]},{"name":"fun SettingsResponse.toModel(): SettingsModel","description":"ru.surf.core.data.mappers.toModel","location":"modules/core/ru.surf.core.data.mappers/to-model.html","searchKeys":["toModel","fun SettingsResponse.toModel(): SettingsModel","ru.surf.core.data.mappers.toModel"]},{"name":"fun ShapesCustom(listItem: CornerBasedShape = RoundedCornerShape(8.dp))","description":"ru.surf.core.base.ShapesCustom.ShapesCustom","location":"modules/core/ru.surf.core.base/-shapes-custom/-shapes-custom.html","searchKeys":["ShapesCustom","fun ShapesCustom(listItem: CornerBasedShape = RoundedCornerShape(8.dp))","ru.surf.core.base.ShapesCustom.ShapesCustom"]},{"name":"fun StateValidateRequired()","description":"ru.surf.core.forms.validate.StateValidateRequired.StateValidateRequired","location":"modules/core/ru.surf.core.forms.validate/-state-validate-required/-state-validate-required.html","searchKeys":["StateValidateRequired","fun StateValidateRequired()","ru.surf.core.forms.validate.StateValidateRequired.StateValidateRequired"]},{"name":"fun StatusScreen(viewModel: MainViewModel, onActions: (UnknownHostActions) -> Unit = {})","description":"ru.surf.core.ui.screens.status.StatusScreen","location":"modules/core/ru.surf.core.ui.screens.status/-status-screen.html","searchKeys":["StatusScreen","fun StatusScreen(viewModel: MainViewModel, onActions: (UnknownHostActions) -> Unit = {})","ru.surf.core.ui.screens.status.StatusScreen"]},{"name":"fun String.parseColor(): Color","description":"ru.surf.core.extension.parseColor","location":"modules/core/ru.surf.core.extension/parse-color.html","searchKeys":["parseColor","fun String.parseColor(): Color","ru.surf.core.extension.parseColor"]},{"name":"fun TimberInitializer()","description":"ru.surf.core.initializer.TimberInitializer.TimberInitializer","location":"modules/core/ru.surf.core.initializer/-timber-initializer/-timber-initializer.html","searchKeys":["TimberInitializer","fun TimberInitializer()","ru.surf.core.initializer.TimberInitializer.TimberInitializer"]},{"name":"fun TopBarContentTitle(text: String, textAlign: TextAlign = TextAlign.Left)","description":"ru.surf.core.compose.TopBarContentTitle","location":"modules/core/ru.surf.core.compose/-top-bar-content-title.html","searchKeys":["TopBarContentTitle","fun TopBarContentTitle(text: String, textAlign: TextAlign = TextAlign.Left)","ru.surf.core.compose.TopBarContentTitle"]},{"name":"fun TryExecuteWithResponse()","description":"ru.surf.core.base.TryExecuteWithResponse.TryExecuteWithResponse","location":"modules/core/ru.surf.core.base/-try-execute-with-response/-try-execute-with-response.html","searchKeys":["TryExecuteWithResponse","fun TryExecuteWithResponse()","ru.surf.core.base.TryExecuteWithResponse.TryExecuteWithResponse"]},{"name":"fun TypographyCustom(title: TextStyle)","description":"ru.surf.core.base.TypographyCustom.TypographyCustom","location":"modules/core/ru.surf.core.base/-typography-custom/-typography-custom.html","searchKeys":["TypographyCustom","fun TypographyCustom(title: TextStyle)","ru.surf.core.base.TypographyCustom.TypographyCustom"]},{"name":"fun UnknownHostAnimation(modifier: Modifier = Modifier)","description":"ru.surf.core.ui.screens.status.UnknownHostAnimation","location":"modules/core/ru.surf.core.ui.screens.status/-unknown-host-animation.html","searchKeys":["UnknownHostAnimation","fun UnknownHostAnimation(modifier: Modifier = Modifier)","ru.surf.core.ui.screens.status.UnknownHostAnimation"]},{"name":"fun UnknownHostBody(loading: Boolean = false, onActions: (UnknownHostActions) -> Unit = {})","description":"ru.surf.core.ui.screens.status.UnknownHostBody","location":"modules/core/ru.surf.core.ui.screens.status/-unknown-host-body.html","searchKeys":["UnknownHostBody","fun UnknownHostBody(loading: Boolean = false, onActions: (UnknownHostActions) -> Unit = {})","ru.surf.core.ui.screens.status.UnknownHostBody"]},{"name":"fun login(userId: String, token: String)","description":"ru.surf.core.base.MainViewModel.login","location":"modules/core/ru.surf.core.base/-main-view-model/login.html","searchKeys":["login","fun login(userId: String, token: String)","ru.surf.core.base.MainViewModel.login"]},{"name":"fun logout()","description":"ru.surf.core.base.MainViewModel.logout","location":"modules/core/ru.surf.core.base/-main-view-model/logout.html","searchKeys":["logout","fun logout()","ru.surf.core.base.MainViewModel.logout"]},{"name":"fun observeUnknownHostException(scope: CoroutineScope, body: () -> Unit)","description":"ru.surf.core.base.TryExecuteWithResponse.Companion.observeUnknownHostException","location":"modules/core/ru.surf.core.base/-try-execute-with-response/-companion/observe-unknown-host-exception.html","searchKeys":["observeUnknownHostException","fun observeUnknownHostException(scope: CoroutineScope, body: () -> Unit)","ru.surf.core.base.TryExecuteWithResponse.Companion.observeUnknownHostException"]},{"name":"fun parseConfigCustomPalette(isLight: Boolean): ColorsCustom","description":"ru.surf.core.theme.parseConfigCustomPalette","location":"modules/core/ru.surf.core.theme/parse-config-custom-palette.html","searchKeys":["parseConfigCustomPalette","fun parseConfigCustomPalette(isLight: Boolean): ColorsCustom","ru.surf.core.theme.parseConfigCustomPalette"]},{"name":"fun parseConfigPalette(isLight: Boolean): Colors","description":"ru.surf.core.theme.parseConfigPalette","location":"modules/core/ru.surf.core.theme/parse-config-palette.html","searchKeys":["parseConfigPalette","fun parseConfigPalette(isLight: Boolean): Colors","ru.surf.core.theme.parseConfigPalette"]},{"name":"fun provideAppDatabase(application: Application): CoreDatabase","description":"ru.surf.core.di.ModuleDefault.provideAppDatabase","location":"modules/core/ru.surf.core.di/-module-default/provide-app-database.html","searchKeys":["provideAppDatabase","fun provideAppDatabase(application: Application): CoreDatabase","ru.surf.core.di.ModuleDefault.provideAppDatabase"]},{"name":"fun provideCoreApi(retrofit: Retrofit): CoreApi","description":"ru.surf.core.di.ModuleNetwork.provideCoreApi","location":"modules/core/ru.surf.core.di/-module-network/provide-core-api.html","searchKeys":["provideCoreApi","fun provideCoreApi(retrofit: Retrofit): CoreApi","ru.surf.core.di.ModuleNetwork.provideCoreApi"]},{"name":"fun provideCoreSecurityDatabase(context: Context): CoreSecurityDatabase","description":"ru.surf.core.di.ModuleDefault.provideCoreSecurityDatabase","location":"modules/core/ru.surf.core.di/-module-default/provide-core-security-database.html","searchKeys":["provideCoreSecurityDatabase","fun provideCoreSecurityDatabase(context: Context): CoreSecurityDatabase","ru.surf.core.di.ModuleDefault.provideCoreSecurityDatabase"]},{"name":"fun provideOkHttpClient(): OkHttpClient","description":"ru.surf.core.di.HttpClientModule.provideOkHttpClient","location":"modules/core/ru.surf.core.di/-http-client-module/provide-ok-http-client.html","searchKeys":["provideOkHttpClient","fun provideOkHttpClient(): OkHttpClient","ru.surf.core.di.HttpClientModule.provideOkHttpClient"]},{"name":"fun provideRetrofit(okHttpClient: OkHttpClient): Retrofit","description":"ru.surf.core.di.HttpClientModule.provideRetrofit","location":"modules/core/ru.surf.core.di/-http-client-module/provide-retrofit.html","searchKeys":["provideRetrofit","fun provideRetrofit(okHttpClient: OkHttpClient): Retrofit","ru.surf.core.di.HttpClientModule.provideRetrofit"]},{"name":"fun provideSharedPreferences(context: Context): CorePreferences","description":"ru.surf.core.di.ModuleDefault.provideSharedPreferences","location":"modules/core/ru.surf.core.di/-module-default/provide-shared-preferences.html","searchKeys":["provideSharedPreferences","fun provideSharedPreferences(context: Context): CorePreferences","ru.surf.core.di.ModuleDefault.provideSharedPreferences"]},{"name":"fun provideUsersApiService(api: CoreApi): CoreApiService","description":"ru.surf.core.di.ModuleNetwork.provideUsersApiService","location":"modules/core/ru.surf.core.di/-module-network/provide-users-api-service.html","searchKeys":["provideUsersApiService","fun provideUsersApiService(api: CoreApi): CoreApiService","ru.surf.core.di.ModuleNetwork.provideUsersApiService"]},{"name":"fun provideUsersDataService(db: CoreDatabase, dbSecurity: CoreSecurityDatabase): CoreDataService","description":"ru.surf.core.di.ModuleDefault.provideUsersDataService","location":"modules/core/ru.surf.core.di/-module-default/provide-users-data-service.html","searchKeys":["provideUsersDataService","fun provideUsersDataService(db: CoreDatabase, dbSecurity: CoreSecurityDatabase): CoreDataService","ru.surf.core.di.ModuleDefault.provideUsersDataService"]},{"name":"fun updateSettings()","description":"ru.surf.core.base.MainViewModel.updateSettings","location":"modules/core/ru.surf.core.base/-main-view-model/update-settings.html","searchKeys":["updateSettings","fun updateSettings()","ru.surf.core.base.MainViewModel.updateSettings"]},{"name":"interface ApiDelete","description":"ru.surf.core.services.api.impl.ApiDelete","location":"modules/core/ru.surf.core.services.api.impl/-api-delete/index.html","searchKeys":["ApiDelete","interface ApiDelete","ru.surf.core.services.api.impl.ApiDelete"]},{"name":"interface ApiGet","description":"ru.surf.core.services.api.impl.ApiGet","location":"modules/core/ru.surf.core.services.api.impl/-api-get/index.html","searchKeys":["ApiGet","interface ApiGet","ru.surf.core.services.api.impl.ApiGet"]},{"name":"interface ApiPatch","description":"ru.surf.core.services.api.impl.ApiPatch","location":"modules/core/ru.surf.core.services.api.impl/-api-patch/index.html","searchKeys":["ApiPatch","interface ApiPatch","ru.surf.core.services.api.impl.ApiPatch"]},{"name":"interface ApiPost","description":"ru.surf.core.services.api.impl.ApiPost","location":"modules/core/ru.surf.core.services.api.impl/-api-post/index.html","searchKeys":["ApiPost","interface ApiPost","ru.surf.core.services.api.impl.ApiPost"]},{"name":"interface ApiPut","description":"ru.surf.core.services.api.impl.ApiPut","location":"modules/core/ru.surf.core.services.api.impl/-api-put/index.html","searchKeys":["ApiPut","interface ApiPut","ru.surf.core.services.api.impl.ApiPut"]},{"name":"interface ApiServiceDelete","description":"ru.surf.core.services.apiService.impl.ApiServiceDelete","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-delete/index.html","searchKeys":["ApiServiceDelete","interface ApiServiceDelete","ru.surf.core.services.apiService.impl.ApiServiceDelete"]},{"name":"interface ApiServiceGet","description":"ru.surf.core.services.apiService.impl.ApiServiceGet","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-get/index.html","searchKeys":["ApiServiceGet","interface ApiServiceGet","ru.surf.core.services.apiService.impl.ApiServiceGet"]},{"name":"interface ApiServicePatch","description":"ru.surf.core.services.apiService.impl.ApiServicePatch","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-patch/index.html","searchKeys":["ApiServicePatch","interface ApiServicePatch","ru.surf.core.services.apiService.impl.ApiServicePatch"]},{"name":"interface ApiServicePost","description":"ru.surf.core.services.apiService.impl.ApiServicePost","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-post/index.html","searchKeys":["ApiServicePost","interface ApiServicePost","ru.surf.core.services.apiService.impl.ApiServicePost"]},{"name":"interface ApiServicePut","description":"ru.surf.core.services.apiService.impl.ApiServicePut","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-put/index.html","searchKeys":["ApiServicePut","interface ApiServicePut","ru.surf.core.services.apiService.impl.ApiServicePut"]},{"name":"interface CoreApi : ApiDelete, ApiGet, ApiPatch, ApiPost, ApiPut","description":"ru.surf.core.services.api.CoreApi","location":"modules/core/ru.surf.core.services.api/-core-api/index.html","searchKeys":["CoreApi","interface CoreApi : ApiDelete, ApiGet, ApiPatch, ApiPost, ApiPut","ru.surf.core.services.api.CoreApi"]},{"name":"interface CoreNavActions : StatusActions","description":"ru.surf.core.navigation.actions.CoreNavActions","location":"modules/core/ru.surf.core.navigation.actions/-core-nav-actions/index.html","searchKeys":["CoreNavActions","interface CoreNavActions : StatusActions","ru.surf.core.navigation.actions.CoreNavActions"]},{"name":"interface IAppDatabase","description":"ru.surf.core.interfaces.IAppDatabase","location":"modules/core/ru.surf.core.interfaces/-i-app-database/index.html","searchKeys":["IAppDatabase","interface IAppDatabase","ru.surf.core.interfaces.IAppDatabase"]},{"name":"interface IAppPreferences","description":"ru.surf.core.interfaces.IAppPreferences","location":"modules/core/ru.surf.core.interfaces/-i-app-preferences/index.html","searchKeys":["IAppPreferences","interface IAppPreferences","ru.surf.core.interfaces.IAppPreferences"]},{"name":"interface IModel","description":"ru.surf.core.interfaces.IModel","location":"modules/core/ru.surf.core.interfaces/-i-model/index.html","searchKeys":["IModel","interface IModel","ru.surf.core.interfaces.IModel"]},{"name":"interface IModelRelation","description":"ru.surf.core.interfaces.IModelRelation","location":"modules/core/ru.surf.core.interfaces/-i-model-relation/index.html","searchKeys":["IModelRelation","interface IModelRelation","ru.surf.core.interfaces.IModelRelation"]},{"name":"interface SecurityModelDao","description":"ru.surf.core.data.dao.SecurityModelDao","location":"modules/core/ru.surf.core.data.dao/-security-model-dao/index.html","searchKeys":["SecurityModelDao","interface SecurityModelDao","ru.surf.core.data.dao.SecurityModelDao"]},{"name":"interface SecurityModelDataService : IAppDatabase","description":"ru.surf.core.services.dataService.impl.SecurityModelDataService","location":"modules/core/ru.surf.core.services.dataService.impl/-security-model-data-service/index.html","searchKeys":["SecurityModelDataService","interface SecurityModelDataService : IAppDatabase","ru.surf.core.services.dataService.impl.SecurityModelDataService"]},{"name":"interface SettingsModelDao","description":"ru.surf.core.data.dao.SettingsModelDao","location":"modules/core/ru.surf.core.data.dao/-settings-model-dao/index.html","searchKeys":["SettingsModelDao","interface SettingsModelDao","ru.surf.core.data.dao.SettingsModelDao"]},{"name":"interface SettingsModelDataService : IAppDatabase","description":"ru.surf.core.services.dataService.impl.SettingsModelDataService","location":"modules/core/ru.surf.core.services.dataService.impl/-settings-model-data-service/index.html","searchKeys":["SettingsModelDataService","interface SettingsModelDataService : IAppDatabase","ru.surf.core.services.dataService.impl.SettingsModelDataService"]},{"name":"interface StatusActions","description":"ru.surf.core.navigation.actions.impl.StatusActions","location":"modules/core/ru.surf.core.navigation.actions.impl/-status-actions/index.html","searchKeys":["StatusActions","interface StatusActions","ru.surf.core.navigation.actions.impl.StatusActions"]},{"name":"object Companion","description":"ru.surf.core.base.ShapesCustom.Companion","location":"modules/core/ru.surf.core.base/-shapes-custom/-companion/index.html","searchKeys":["Companion","object Companion","ru.surf.core.base.ShapesCustom.Companion"]},{"name":"object Companion","description":"ru.surf.core.base.TryExecuteWithResponse.Companion","location":"modules/core/ru.surf.core.base/-try-execute-with-response/-companion/index.html","searchKeys":["Companion","object Companion","ru.surf.core.base.TryExecuteWithResponse.Companion"]},{"name":"object Companion","description":"ru.surf.core.base.TypographyCustom.Companion","location":"modules/core/ru.surf.core.base/-typography-custom/-companion/index.html","searchKeys":["Companion","object Companion","ru.surf.core.base.TypographyCustom.Companion"]},{"name":"object ConstantsApp","description":"ru.surf.core.utils.ConstantsApp","location":"modules/core/ru.surf.core.utils/-constants-app/index.html","searchKeys":["ConstantsApp","object ConstantsApp","ru.surf.core.utils.ConstantsApp"]},{"name":"object ConstantsPaging","description":"ru.surf.core.utils.ConstantsPaging","location":"modules/core/ru.surf.core.utils/-constants-paging/index.html","searchKeys":["ConstantsPaging","object ConstantsPaging","ru.surf.core.utils.ConstantsPaging"]},{"name":"object CoreNav","description":"ru.surf.core.navigation.nav.CoreNav","location":"modules/core/ru.surf.core.navigation.nav/-core-nav/index.html","searchKeys":["CoreNav","object CoreNav","ru.surf.core.navigation.nav.CoreNav"]},{"name":"object HttpClientModule","description":"ru.surf.core.di.HttpClientModule","location":"modules/core/ru.surf.core.di/-http-client-module/index.html","searchKeys":["HttpClientModule","object HttpClientModule","ru.surf.core.di.HttpClientModule"]},{"name":"object LocalMaterialThemeCustom","description":"ru.surf.core.base.LocalMaterialThemeCustom","location":"modules/core/ru.surf.core.base/-local-material-theme-custom/index.html","searchKeys":["LocalMaterialThemeCustom","object LocalMaterialThemeCustom","ru.surf.core.base.LocalMaterialThemeCustom"]},{"name":"object MaterialThemeCustom","description":"ru.surf.core.base.MaterialThemeCustom","location":"modules/core/ru.surf.core.base/-material-theme-custom/index.html","searchKeys":["MaterialThemeCustom","object MaterialThemeCustom","ru.surf.core.base.MaterialThemeCustom"]},{"name":"object ModuleDefault","description":"ru.surf.core.di.ModuleDefault","location":"modules/core/ru.surf.core.di/-module-default/index.html","searchKeys":["ModuleDefault","object ModuleDefault","ru.surf.core.di.ModuleDefault"]},{"name":"object ModuleNetwork","description":"ru.surf.core.di.ModuleNetwork","location":"modules/core/ru.surf.core.di/-module-network/index.html","searchKeys":["ModuleNetwork","object ModuleNetwork","ru.surf.core.di.ModuleNetwork"]},{"name":"object Repeat : UnknownHostActions","description":"ru.surf.core.ui.actions.UnknownHostActions.Repeat","location":"modules/core/ru.surf.core.ui.actions/-unknown-host-actions/-repeat/index.html","searchKeys":["Repeat","object Repeat : UnknownHostActions","ru.surf.core.ui.actions.UnknownHostActions.Repeat"]},{"name":"object StatusScreen","description":"ru.surf.core.navigation.nav.impl.StatusScreen","location":"modules/core/ru.surf.core.navigation.nav.impl/-status-screen/index.html","searchKeys":["StatusScreen","object StatusScreen","ru.surf.core.navigation.nav.impl.StatusScreen"]},{"name":"open fun getSecurityModel(): Flow<SecurityModel?>","description":"ru.surf.core.services.dataService.impl.SecurityModelDataService.getSecurityModel","location":"modules/core/ru.surf.core.services.dataService.impl/-security-model-data-service/get-security-model.html","searchKeys":["getSecurityModel","open fun getSecurityModel(): Flow<SecurityModel?>","ru.surf.core.services.dataService.impl.SecurityModelDataService.getSecurityModel"]},{"name":"open fun isLogin(): Boolean","description":"ru.surf.core.services.dataService.impl.SecurityModelDataService.isLogin","location":"modules/core/ru.surf.core.services.dataService.impl/-security-model-data-service/is-login.html","searchKeys":["isLogin","open fun isLogin(): Boolean","ru.surf.core.services.dataService.impl.SecurityModelDataService.isLogin"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.core.data.preferences.CorePreferences.clearCacheAfterLogout","location":"modules/core/ru.surf.core.data.preferences/-core-preferences/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.core.data.preferences.CorePreferences.clearCacheAfterLogout"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.core.services.dataService.CoreDataService.clearCacheAfterLogout","location":"modules/core/ru.surf.core.services.dataService/-core-data-service/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.core.services.dataService.CoreDataService.clearCacheAfterLogout"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.core.services.dataService.impl.SecurityModelDataService.clearCacheAfterLogout","location":"modules/core/ru.surf.core.services.dataService.impl/-security-model-data-service/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.core.services.dataService.impl.SecurityModelDataService.clearCacheAfterLogout"]},{"name":"open override fun clearCacheAfterLogout()","description":"ru.surf.core.services.dataService.impl.SettingsModelDataService.clearCacheAfterLogout","location":"modules/core/ru.surf.core.services.dataService.impl/-settings-model-data-service/clear-cache-after-logout.html","searchKeys":["clearCacheAfterLogout","open override fun clearCacheAfterLogout()","ru.surf.core.services.dataService.impl.SettingsModelDataService.clearCacheAfterLogout"]},{"name":"open override fun create(context: Context)","description":"ru.surf.core.initializer.CrashlyticsInitializer.create","location":"modules/core/ru.surf.core.initializer/-crashlytics-initializer/create.html","searchKeys":["create","open override fun create(context: Context)","ru.surf.core.initializer.CrashlyticsInitializer.create"]},{"name":"open override fun create(context: Context)","description":"ru.surf.core.initializer.ModifierInitializer.create","location":"modules/core/ru.surf.core.initializer/-modifier-initializer/create.html","searchKeys":["create","open override fun create(context: Context)","ru.surf.core.initializer.ModifierInitializer.create"]},{"name":"open override fun create(context: Context)","description":"ru.surf.core.initializer.TimberInitializer.create","location":"modules/core/ru.surf.core.initializer/-timber-initializer/create.html","searchKeys":["create","open override fun create(context: Context)","ru.surf.core.initializer.TimberInitializer.create"]},{"name":"open override fun dependencies(): List<Class<out Initializer<*>>>","description":"ru.surf.core.initializer.CrashlyticsInitializer.dependencies","location":"modules/core/ru.surf.core.initializer/-crashlytics-initializer/dependencies.html","searchKeys":["dependencies","open override fun dependencies(): List<Class<out Initializer<*>>>","ru.surf.core.initializer.CrashlyticsInitializer.dependencies"]},{"name":"open override fun dependencies(): List<Class<out Initializer<*>>>","description":"ru.surf.core.initializer.ModifierInitializer.dependencies","location":"modules/core/ru.surf.core.initializer/-modifier-initializer/dependencies.html","searchKeys":["dependencies","open override fun dependencies(): List<Class<out Initializer<*>>>","ru.surf.core.initializer.ModifierInitializer.dependencies"]},{"name":"open override fun dependencies(): List<Class<out Initializer<*>>>","description":"ru.surf.core.initializer.TimberInitializer.dependencies","location":"modules/core/ru.surf.core.initializer/-timber-initializer/dependencies.html","searchKeys":["dependencies","open override fun dependencies(): List<Class<out Initializer<*>>>","ru.surf.core.initializer.TimberInitializer.dependencies"]},{"name":"open override val api: CoreApi","description":"ru.surf.core.services.apiService.CoreApiService.api","location":"modules/core/ru.surf.core.services.apiService/-core-api-service/api.html","searchKeys":["api","open override val api: CoreApi","ru.surf.core.services.apiService.CoreApiService.api"]},{"name":"open override val db: CoreDatabase","description":"ru.surf.core.services.dataService.CoreDataService.db","location":"modules/core/ru.surf.core.services.dataService/-core-data-service/db.html","searchKeys":["db","open override val db: CoreDatabase","ru.surf.core.services.dataService.CoreDataService.db"]},{"name":"open override val dbSecurity: CoreSecurityDatabase","description":"ru.surf.core.services.dataService.CoreDataService.dbSecurity","location":"modules/core/ru.surf.core.services.dataService/-core-data-service/db-security.html","searchKeys":["dbSecurity","open override val dbSecurity: CoreSecurityDatabase","ru.surf.core.services.dataService.CoreDataService.dbSecurity"]},{"name":"open override val id: String","description":"ru.surf.core.data.models.SecurityModel.id","location":"modules/core/ru.surf.core.data.models/-security-model/id.html","searchKeys":["id","open override val id: String","ru.surf.core.data.models.SecurityModel.id"]},{"name":"open override val id: String","description":"ru.surf.core.data.models.SettingsModel.id","location":"modules/core/ru.surf.core.data.models/-settings-model/id.html","searchKeys":["id","open override val id: String","ru.surf.core.data.models.SettingsModel.id"]},{"name":"open override val p: SharedPreferences","description":"ru.surf.core.data.preferences.CorePreferences.p","location":"modules/core/ru.surf.core.data.preferences/-core-preferences/p.html","searchKeys":["p","open override val p: SharedPreferences","ru.surf.core.data.preferences.CorePreferences.p"]},{"name":"open suspend fun clearSecurityModel()","description":"ru.surf.core.services.dataService.impl.SecurityModelDataService.clearSecurityModel","location":"modules/core/ru.surf.core.services.dataService.impl/-security-model-data-service/clear-security-model.html","searchKeys":["clearSecurityModel","open suspend fun clearSecurityModel()","ru.surf.core.services.dataService.impl.SecurityModelDataService.clearSecurityModel"]},{"name":"open suspend fun clearSettingsModel()","description":"ru.surf.core.services.dataService.impl.SettingsModelDataService.clearSettingsModel","location":"modules/core/ru.surf.core.services.dataService.impl/-settings-model-data-service/clear-settings-model.html","searchKeys":["clearSettingsModel","open suspend fun clearSettingsModel()","ru.surf.core.services.dataService.impl.SettingsModelDataService.clearSettingsModel"]},{"name":"open suspend fun getListSettings(): ResponseResult<List<SettingsModel>>","description":"ru.surf.core.services.apiService.impl.ApiServiceGet.getListSettings","location":"modules/core/ru.surf.core.services.apiService.impl/-api-service-get/get-list-settings.html","searchKeys":["getListSettings","open suspend fun getListSettings(): ResponseResult<List<SettingsModel>>","ru.surf.core.services.apiService.impl.ApiServiceGet.getListSettings"]},{"name":"open suspend fun getSettingsModel(): Flow<List<SettingsModel>>","description":"ru.surf.core.services.dataService.impl.SettingsModelDataService.getSettingsModel","location":"modules/core/ru.surf.core.services.dataService.impl/-settings-model-data-service/get-settings-model.html","searchKeys":["getSettingsModel","open suspend fun getSettingsModel(): Flow<List<SettingsModel>>","ru.surf.core.services.dataService.impl.SettingsModelDataService.getSettingsModel"]},{"name":"open suspend fun insertSecurityModel(vararg models: SecurityModel)","description":"ru.surf.core.services.dataService.impl.SecurityModelDataService.insertSecurityModel","location":"modules/core/ru.surf.core.services.dataService.impl/-security-model-data-service/insert-security-model.html","searchKeys":["insertSecurityModel","open suspend fun insertSecurityModel(vararg models: SecurityModel)","ru.surf.core.services.dataService.impl.SecurityModelDataService.insertSecurityModel"]},{"name":"open suspend fun insertSettingsModel(vararg models: SettingsModel)","description":"ru.surf.core.services.dataService.impl.SettingsModelDataService.insertSettingsModel","location":"modules/core/ru.surf.core.services.dataService.impl/-settings-model-data-service/insert-settings-model.html","searchKeys":["insertSettingsModel","open suspend fun insertSettingsModel(vararg models: SettingsModel)","ru.surf.core.services.dataService.impl.SettingsModelDataService.insertSettingsModel"]},{"name":"private const val PASSWORD_VALIDATION_REGEX: String","description":"ru.surf.core.forms.validate.PASSWORD_VALIDATION_REGEX","location":"modules/core/ru.surf.core.forms.validate/-p-a-s-s-w-o-r-d_-v-a-l-i-d-a-t-i-o-n_-r-e-g-e-x.html","searchKeys":["PASSWORD_VALIDATION_REGEX","private const val PASSWORD_VALIDATION_REGEX: String","ru.surf.core.forms.validate.PASSWORD_VALIDATION_REGEX"]},{"name":"private const val password: String","description":"ru.surf.core.di.ModuleDefault.password","location":"modules/core/ru.surf.core.di/-module-default/password.html","searchKeys":["password","private const val password: String","ru.surf.core.di.ModuleDefault.password"]},{"name":"private fun Preview()","description":"ru.surf.core.compose.Preview","location":"modules/core/ru.surf.core.compose/-preview.html","searchKeys":["Preview","private fun Preview()","ru.surf.core.compose.Preview"]},{"name":"private fun Preview()","description":"ru.surf.core.ui.screens.status.Preview","location":"modules/core/ru.surf.core.ui.screens.status/-preview.html","searchKeys":["Preview","private fun Preview()","ru.surf.core.ui.screens.status.Preview"]},{"name":"private fun getErrorIsLong(target: String): (Context) -> String?","description":"ru.surf.core.forms.validate.getErrorIsLong","location":"modules/core/ru.surf.core.forms.validate/get-error-is-long.html","searchKeys":["getErrorIsLong","private fun getErrorIsLong(target: String): (Context) -> String?","ru.surf.core.forms.validate.getErrorIsLong"]},{"name":"private fun getErrorIsNotMatches(target: String): (Context) -> String?","description":"ru.surf.core.forms.validate.getErrorIsNotMatches","location":"modules/core/ru.surf.core.forms.validate/get-error-is-not-matches.html","searchKeys":["getErrorIsNotMatches","private fun getErrorIsNotMatches(target: String): (Context) -> String?","ru.surf.core.forms.validate.getErrorIsNotMatches"]},{"name":"private fun getErrorIsSmall(target: String): (Context) -> String?","description":"ru.surf.core.forms.validate.getErrorIsSmall","location":"modules/core/ru.surf.core.forms.validate/get-error-is-small.html","searchKeys":["getErrorIsSmall","private fun getErrorIsSmall(target: String): (Context) -> String?","ru.surf.core.forms.validate.getErrorIsSmall"]},{"name":"private val _hasNetwork: MutableStateFlow<Boolean>","description":"ru.surf.core.base.MainViewModel._hasNetwork","location":"modules/core/ru.surf.core.base/-main-view-model/_has-network.html","searchKeys":["_hasNetwork","private val _hasNetwork: MutableStateFlow<Boolean>","ru.surf.core.base.MainViewModel._hasNetwork"]},{"name":"private val _isReady: MutableStateFlow<Boolean>","description":"ru.surf.core.base.MainViewModel._isReady","location":"modules/core/ru.surf.core.base/-main-view-model/_is-ready.html","searchKeys":["_isReady","private val _isReady: MutableStateFlow<Boolean>","ru.surf.core.base.MainViewModel._isReady"]},{"name":"private val _loading: MutableStateFlow<Boolean>","description":"ru.surf.core.base.MainViewModel._loading","location":"modules/core/ru.surf.core.base/-main-view-model/_loading.html","searchKeys":["_loading","private val _loading: MutableStateFlow<Boolean>","ru.surf.core.base.MainViewModel._loading"]},{"name":"private val apiService: CoreApiService","description":"ru.surf.core.base.MainViewModel.apiService","location":"modules/core/ru.surf.core.base/-main-view-model/api-service.html","searchKeys":["apiService","private val apiService: CoreApiService","ru.surf.core.base.MainViewModel.apiService"]},{"name":"private val dao: SecurityModelDao","description":"ru.surf.core.services.dataService.impl.SecurityModelDataService.dao","location":"modules/core/ru.surf.core.services.dataService.impl/-security-model-data-service/dao.html","searchKeys":["dao","private val dao: SecurityModelDao","ru.surf.core.services.dataService.impl.SecurityModelDataService.dao"]},{"name":"private val dao: SettingsModelDao","description":"ru.surf.core.services.dataService.impl.SettingsModelDataService.dao","location":"modules/core/ru.surf.core.services.dataService.impl/-settings-model-data-service/dao.html","searchKeys":["dao","private val dao: SettingsModelDao","ru.surf.core.services.dataService.impl.SettingsModelDataService.dao"]},{"name":"private val dataService: CoreDataService","description":"ru.surf.core.base.MainViewModel.dataService","location":"modules/core/ru.surf.core.base/-main-view-model/data-service.html","searchKeys":["dataService","private val dataService: CoreDataService","ru.surf.core.base.MainViewModel.dataService"]},{"name":"private val json: Json","description":"ru.surf.core.di.HttpClientModule.json","location":"modules/core/ru.surf.core.di/-http-client-module/json.html","searchKeys":["json","private val json: Json","ru.surf.core.di.HttpClientModule.json"]},{"name":"private val migrations: List<Migration>","description":"ru.surf.core.di.ModuleDefault.migrations","location":"modules/core/ru.surf.core.di/-module-default/migrations.html","searchKeys":["migrations","private val migrations: List<Migration>","ru.surf.core.di.ModuleDefault.migrations"]},{"name":"private var dataServices: Set<IAppDatabase>","description":"ru.surf.core.base.MainViewModel.dataServices","location":"modules/core/ru.surf.core.base/-main-view-model/data-services.html","searchKeys":["dataServices","private var dataServices: Set<IAppDatabase>","ru.surf.core.base.MainViewModel.dataServices"]},{"name":"private var preferences: Set<IAppPreferences>","description":"ru.surf.core.base.MainViewModel.preferences","location":"modules/core/ru.surf.core.base/-main-view-model/preferences.html","searchKeys":["preferences","private var preferences: Set<IAppPreferences>","ru.surf.core.base.MainViewModel.preferences"]},{"name":"protected fun UnknownHostActions()","description":"ru.surf.core.ui.actions.UnknownHostActions.UnknownHostActions","location":"modules/core/ru.surf.core.ui.actions/-unknown-host-actions/-unknown-host-actions.html","searchKeys":["UnknownHostActions","protected fun UnknownHostActions()","ru.surf.core.ui.actions.UnknownHostActions.UnknownHostActions"]},{"name":"sealed class UnknownHostActions","description":"ru.surf.core.ui.actions.UnknownHostActions","location":"modules/core/ru.surf.core.ui.actions/-unknown-host-actions/index.html","searchKeys":["UnknownHostActions","sealed class UnknownHostActions","ru.surf.core.ui.actions.UnknownHostActions"]},{"name":"suspend fun <T> IAppDatabase.withTransaction(body: suspend T.() -> Unit)","description":"ru.surf.core.extension.withTransaction","location":"modules/core/ru.surf.core.extension/with-transaction.html","searchKeys":["withTransaction","suspend fun <T> IAppDatabase.withTransaction(body: suspend T.() -> Unit)","ru.surf.core.extension.withTransaction"]},{"name":"val CACHE_TIMEOUT: Long","description":"ru.surf.core.utils.ConstantsPaging.CACHE_TIMEOUT","location":"modules/core/ru.surf.core.utils/-constants-paging/-c-a-c-h-e_-t-i-m-e-o-u-t.html","searchKeys":["CACHE_TIMEOUT","val CACHE_TIMEOUT: Long","ru.surf.core.utils.ConstantsPaging.CACHE_TIMEOUT"]},{"name":"val DEBUG_CREDENTIAL_LOGIN: String","description":"ru.surf.core.utils.ConstantsApp.DEBUG_CREDENTIAL_LOGIN","location":"modules/core/ru.surf.core.utils/-constants-app/-d-e-b-u-g_-c-r-e-d-e-n-t-i-a-l_-l-o-g-i-n.html","searchKeys":["DEBUG_CREDENTIAL_LOGIN","val DEBUG_CREDENTIAL_LOGIN: String","ru.surf.core.utils.ConstantsApp.DEBUG_CREDENTIAL_LOGIN"]},{"name":"val DEBUG_CREDENTIAL_PASSW: String","description":"ru.surf.core.utils.ConstantsApp.DEBUG_CREDENTIAL_PASSW","location":"modules/core/ru.surf.core.utils/-constants-app/-d-e-b-u-g_-c-r-e-d-e-n-t-i-a-l_-p-a-s-s-w.html","searchKeys":["DEBUG_CREDENTIAL_PASSW","val DEBUG_CREDENTIAL_PASSW: String","ru.surf.core.utils.ConstantsApp.DEBUG_CREDENTIAL_PASSW"]},{"name":"val DarkColorCustomPalette: () -> ColorsCustom","description":"ru.surf.core.theme.DarkColorCustomPalette","location":"modules/core/ru.surf.core.theme/-dark-color-custom-palette.html","searchKeys":["DarkColorCustomPalette","val DarkColorCustomPalette: () -> ColorsCustom","ru.surf.core.theme.DarkColorCustomPalette"]},{"name":"val DarkColorPalette: () -> Colors","description":"ru.surf.core.theme.DarkColorPalette","location":"modules/core/ru.surf.core.theme/-dark-color-palette.html","searchKeys":["DarkColorPalette","val DarkColorPalette: () -> Colors","ru.surf.core.theme.DarkColorPalette"]},{"name":"val LightColorCustomPalette: () -> ColorsCustom","description":"ru.surf.core.theme.LightColorCustomPalette","location":"modules/core/ru.surf.core.theme/-light-color-custom-palette.html","searchKeys":["LightColorCustomPalette","val LightColorCustomPalette: () -> ColorsCustom","ru.surf.core.theme.LightColorCustomPalette"]},{"name":"val LightColorPalette: () -> Colors","description":"ru.surf.core.theme.LightColorPalette","location":"modules/core/ru.surf.core.theme/-light-color-palette.html","searchKeys":["LightColorPalette","val LightColorPalette: () -> Colors","ru.surf.core.theme.LightColorPalette"]},{"name":"val LocalBackPressedDispatcher: ProvidableCompositionLocal<OnBackPressedDispatcher>","description":"ru.surf.core.base.LocalBackPressedDispatcher","location":"modules/core/ru.surf.core.base/-local-back-pressed-dispatcher.html","searchKeys":["LocalBackPressedDispatcher","val LocalBackPressedDispatcher: ProvidableCompositionLocal<OnBackPressedDispatcher>","ru.surf.core.base.LocalBackPressedDispatcher"]},{"name":"val LocalMainViewModel: ProvidableCompositionLocal<MainViewModel>","description":"ru.surf.core.base.LocalMainViewModel","location":"modules/core/ru.surf.core.base/-local-main-view-model.html","searchKeys":["LocalMainViewModel","val LocalMainViewModel: ProvidableCompositionLocal<MainViewModel>","ru.surf.core.base.LocalMainViewModel"]},{"name":"val Migrations_1_2: Migration","description":"ru.surf.core.data.migrations.Migrations_1_2","location":"modules/core/ru.surf.core.data.migrations/-migrations_1_2.html","searchKeys":["Migrations_1_2","val Migrations_1_2: Migration","ru.surf.core.data.migrations.Migrations_1_2"]},{"name":"val Shapes: Shapes","description":"ru.surf.core.theme.Shapes","location":"modules/core/ru.surf.core.theme/-shapes.html","searchKeys":["Shapes","val Shapes: Shapes","ru.surf.core.theme.Shapes"]},{"name":"val ShapesCustom: ShapesCustom","description":"ru.surf.core.theme.ShapesCustom","location":"modules/core/ru.surf.core.theme/-shapes-custom.html","searchKeys":["ShapesCustom","val ShapesCustom: ShapesCustom","ru.surf.core.theme.ShapesCustom"]},{"name":"val StatusNav: StatusScreen","description":"ru.surf.core.navigation.nav.CoreNav.StatusNav","location":"modules/core/ru.surf.core.navigation.nav/-core-nav/-status-nav.html","searchKeys":["StatusNav","val StatusNav: StatusScreen","ru.surf.core.navigation.nav.CoreNav.StatusNav"]},{"name":"val StatusNavScreen: NavScreen","description":"ru.surf.core.navigation.nav.impl.StatusScreen.StatusNavScreen","location":"modules/core/ru.surf.core.navigation.nav.impl/-status-screen/-status-nav-screen.html","searchKeys":["StatusNavScreen","val StatusNavScreen: NavScreen","ru.surf.core.navigation.nav.impl.StatusScreen.StatusNavScreen"]},{"name":"val Typography: Typography","description":"ru.surf.core.theme.Typography","location":"modules/core/ru.surf.core.theme/-typography.html","searchKeys":["Typography","val Typography: Typography","ru.surf.core.theme.Typography"]},{"name":"val TypographyCustom: TypographyCustom","description":"ru.surf.core.theme.TypographyCustom","location":"modules/core/ru.surf.core.theme/-typography-custom.html","searchKeys":["TypographyCustom","val TypographyCustom: TypographyCustom","ru.surf.core.theme.TypographyCustom"]},{"name":"val colors: ColorsCustom","description":"ru.surf.core.base.MaterialThemeCustom.colors","location":"modules/core/ru.surf.core.base/-material-theme-custom/colors.html","searchKeys":["colors","val colors: ColorsCustom","ru.surf.core.base.MaterialThemeCustom.colors"]},{"name":"val default: () -> TypographyCustom","description":"ru.surf.core.base.TypographyCustom.Companion.default","location":"modules/core/ru.surf.core.base/-typography-custom/-companion/default.html","searchKeys":["default","val default: () -> TypographyCustom","ru.surf.core.base.TypographyCustom.Companion.default"]},{"name":"val default: ShapesCustom","description":"ru.surf.core.base.ShapesCustom.Companion.default","location":"modules/core/ru.surf.core.base/-shapes-custom/-companion/default.html","searchKeys":["default","val default: ShapesCustom","ru.surf.core.base.ShapesCustom.Companion.default"]},{"name":"val hasNetwork: StateFlow<Boolean>","description":"ru.surf.core.base.MainViewModel.hasNetwork","location":"modules/core/ru.surf.core.base/-main-view-model/has-network.html","searchKeys":["hasNetwork","val hasNetwork: StateFlow<Boolean>","ru.surf.core.base.MainViewModel.hasNetwork"]},{"name":"val isLight: Boolean","description":"ru.surf.core.base.ColorsCustom.isLight","location":"modules/core/ru.surf.core.base/-colors-custom/is-light.html","searchKeys":["isLight","val isLight: Boolean","ru.surf.core.base.ColorsCustom.isLight"]},{"name":"val isLogin: Flow<Boolean>","description":"ru.surf.core.base.MainViewModel.isLogin","location":"modules/core/ru.surf.core.base/-main-view-model/is-login.html","searchKeys":["isLogin","val isLogin: Flow<Boolean>","ru.surf.core.base.MainViewModel.isLogin"]},{"name":"val isReady: StateFlow<Boolean>","description":"ru.surf.core.base.MainViewModel.isReady","location":"modules/core/ru.surf.core.base/-main-view-model/is-ready.html","searchKeys":["isReady","val isReady: StateFlow<Boolean>","ru.surf.core.base.MainViewModel.isReady"]},{"name":"val key: String","description":"ru.surf.core.data.responses.SettingsResponse.key","location":"modules/core/ru.surf.core.data.responses/-settings-response/key.html","searchKeys":["key","val key: String","ru.surf.core.data.responses.SettingsResponse.key"]},{"name":"val link: Color","description":"ru.surf.core.base.ColorsCustom.link","location":"modules/core/ru.surf.core.base/-colors-custom/link.html","searchKeys":["link","val link: Color","ru.surf.core.base.ColorsCustom.link"]},{"name":"val linkAction: Color","description":"ru.surf.core.base.ColorsCustom.linkAction","location":"modules/core/ru.surf.core.base/-colors-custom/link-action.html","searchKeys":["linkAction","val linkAction: Color","ru.surf.core.base.ColorsCustom.linkAction"]},{"name":"val listItem: CornerBasedShape","description":"ru.surf.core.base.ShapesCustom.listItem","location":"modules/core/ru.surf.core.base/-shapes-custom/list-item.html","searchKeys":["listItem","val listItem: CornerBasedShape","ru.surf.core.base.ShapesCustom.listItem"]},{"name":"val loading: StateFlow<Boolean>","description":"ru.surf.core.base.MainViewModel.loading","location":"modules/core/ru.surf.core.base/-main-view-model/loading.html","searchKeys":["loading","val loading: StateFlow<Boolean>","ru.surf.core.base.MainViewModel.loading"]},{"name":"val montserratFamily: FontFamily","description":"ru.surf.core.theme.montserratFamily","location":"modules/core/ru.surf.core.theme/montserrat-family.html","searchKeys":["montserratFamily","val montserratFamily: FontFamily","ru.surf.core.theme.montserratFamily"]},{"name":"val shapes: ShapesCustom","description":"ru.surf.core.base.MaterialThemeCustom.shapes","location":"modules/core/ru.surf.core.base/-material-theme-custom/shapes.html","searchKeys":["shapes","val shapes: ShapesCustom","ru.surf.core.base.MaterialThemeCustom.shapes"]},{"name":"val title: TextStyle","description":"ru.surf.core.base.TypographyCustom.title","location":"modules/core/ru.surf.core.base/-typography-custom/title.html","searchKeys":["title","val title: TextStyle","ru.surf.core.base.TypographyCustom.title"]},{"name":"val token: String","description":"ru.surf.core.data.models.SecurityModel.token","location":"modules/core/ru.surf.core.data.models/-security-model/token.html","searchKeys":["token","val token: String","ru.surf.core.data.models.SecurityModel.token"]},{"name":"val typography: TypographyCustom","description":"ru.surf.core.base.MaterialThemeCustom.typography","location":"modules/core/ru.surf.core.base/-material-theme-custom/typography.html","searchKeys":["typography","val typography: TypographyCustom","ru.surf.core.base.MaterialThemeCustom.typography"]},{"name":"val value: String","description":"ru.surf.core.data.models.SettingsModel.value","location":"modules/core/ru.surf.core.data.models/-settings-model/value.html","searchKeys":["value","val value: String","ru.surf.core.data.models.SettingsModel.value"]},{"name":"val value: String","description":"ru.surf.core.data.responses.SettingsResponse.value","location":"modules/core/ru.surf.core.data.responses/-settings-response/value.html","searchKeys":["value","val value: String","ru.surf.core.data.responses.SettingsResponse.value"]},{"name":"var colors: ColorsCustom? = null","description":"ru.surf.core.base.LocalMaterialThemeCustom.colors","location":"modules/core/ru.surf.core.base/-local-material-theme-custom/colors.html","searchKeys":["colors","var colors: ColorsCustom? = null","ru.surf.core.base.LocalMaterialThemeCustom.colors"]},{"name":"var shapes: ShapesCustom? = null","description":"ru.surf.core.base.LocalMaterialThemeCustom.shapes","location":"modules/core/ru.surf.core.base/-local-material-theme-custom/shapes.html","searchKeys":["shapes","var shapes: ShapesCustom? = null","ru.surf.core.base.LocalMaterialThemeCustom.shapes"]},{"name":"var typography: TypographyCustom? = null","description":"ru.surf.core.base.LocalMaterialThemeCustom.typography","location":"modules/core/ru.surf.core.base/-local-material-theme-custom/typography.html","searchKeys":["typography","var typography: TypographyCustom? = null","ru.surf.core.base.LocalMaterialThemeCustom.typography"]}]